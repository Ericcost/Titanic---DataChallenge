2024-07-08 16:37:06,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:37:06,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:37:06,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:37:06,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:42:28,732:INFO:PyCaret ClassificationExperiment
2024-07-08 16:42:28,732:INFO:Logging name: clf-default-name
2024-07-08 16:42:28,732:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 16:42:28,732:INFO:version 3.3.2
2024-07-08 16:42:28,732:INFO:Initializing setup()
2024-07-08 16:42:28,732:INFO:self.USI: 8622
2024-07-08 16:42:28,732:INFO:self._variable_keys: {'seed', 'X', 'exp_name_log', 'X_test', '_available_plots', 'y_train', 'n_jobs_param', 'y', 'html_param', 'X_train', 'gpu_param', 'log_plots_param', 'exp_id', 'gpu_n_jobs_param', 'pipeline', 'data', '_ml_usecase', 'fix_imbalance', 'idx', 'target_param', 'is_multiclass', 'fold_groups_param', 'y_test', 'logging_param', 'fold_generator', 'memory', 'USI', 'fold_shuffle_param'}
2024-07-08 16:42:28,732:INFO:Checking environment
2024-07-08 16:42:28,733:INFO:python_version: 3.11.5
2024-07-08 16:42:28,733:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 16:42:28,733:INFO:machine: x86_64
2024-07-08 16:42:28,733:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:42:28,733:INFO:Memory: svmem(total=17179869184, available=5740699648, percent=66.6, used=9096261632, free=80920576, active=5660749824, inactive=5648515072, wired=3435511808)
2024-07-08 16:42:28,733:INFO:Physical Core: 6
2024-07-08 16:42:28,733:INFO:Logical Core: 12
2024-07-08 16:42:28,733:INFO:Checking libraries
2024-07-08 16:42:28,733:INFO:System:
2024-07-08 16:42:28,733:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 16:42:28,734:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 16:42:28,734:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:42:28,734:INFO:PyCaret required dependencies:
2024-07-08 16:42:31,272:INFO:                 pip: 23.3.1
2024-07-08 16:42:31,273:INFO:          setuptools: 68.2.2
2024-07-08 16:42:31,273:INFO:             pycaret: 3.3.2
2024-07-08 16:42:31,273:INFO:             IPython: 8.20.0
2024-07-08 16:42:31,273:INFO:          ipywidgets: 8.0.4
2024-07-08 16:42:31,273:INFO:                tqdm: 4.65.0
2024-07-08 16:42:31,273:INFO:               numpy: 1.24.2
2024-07-08 16:42:31,273:INFO:              pandas: 2.1.4
2024-07-08 16:42:31,273:INFO:              jinja2: 3.1.3
2024-07-08 16:42:31,273:INFO:               scipy: 1.10.1
2024-07-08 16:42:31,273:INFO:              joblib: 1.4.0
2024-07-08 16:42:31,273:INFO:             sklearn: 1.4.0
2024-07-08 16:42:31,273:INFO:                pyod: 2.0.1
2024-07-08 16:42:31,273:INFO:            imblearn: 0.12.3
2024-07-08 16:42:31,273:INFO:   category_encoders: 2.6.3
2024-07-08 16:42:31,273:INFO:            lightgbm: 4.4.0
2024-07-08 16:42:31,273:INFO:               numba: 0.60.0
2024-07-08 16:42:31,273:INFO:            requests: 2.31.0
2024-07-08 16:42:31,273:INFO:          matplotlib: 3.8.2
2024-07-08 16:42:31,273:INFO:          scikitplot: 0.3.7
2024-07-08 16:42:31,273:INFO:         yellowbrick: 1.5
2024-07-08 16:42:31,274:INFO:              plotly: 5.19.0
2024-07-08 16:42:31,274:INFO:    plotly-resampler: Not installed
2024-07-08 16:42:31,274:INFO:             kaleido: 0.2.1
2024-07-08 16:42:31,274:INFO:           schemdraw: 0.15
2024-07-08 16:42:31,274:INFO:         statsmodels: 0.14.2
2024-07-08 16:42:31,274:INFO:              sktime: 0.26.0
2024-07-08 16:42:31,274:INFO:               tbats: 1.1.3
2024-07-08 16:42:31,274:INFO:            pmdarima: 2.0.4
2024-07-08 16:42:31,274:INFO:              psutil: 5.9.0
2024-07-08 16:42:31,274:INFO:          markupsafe: 2.1.3
2024-07-08 16:42:31,274:INFO:             pickle5: Not installed
2024-07-08 16:42:31,274:INFO:         cloudpickle: 3.0.0
2024-07-08 16:42:31,274:INFO:         deprecation: 2.1.0
2024-07-08 16:42:31,274:INFO:              xxhash: 3.4.1
2024-07-08 16:42:31,274:INFO:           wurlitzer: 3.1.1
2024-07-08 16:42:31,274:INFO:PyCaret optional dependencies:
2024-07-08 16:42:31,291:INFO:                shap: Not installed
2024-07-08 16:42:31,291:INFO:           interpret: Not installed
2024-07-08 16:42:31,291:INFO:                umap: Not installed
2024-07-08 16:42:31,291:INFO:     ydata_profiling: Not installed
2024-07-08 16:42:31,291:INFO:  explainerdashboard: Not installed
2024-07-08 16:42:31,291:INFO:             autoviz: Not installed
2024-07-08 16:42:31,291:INFO:           fairlearn: Not installed
2024-07-08 16:42:31,292:INFO:          deepchecks: Not installed
2024-07-08 16:42:31,292:INFO:             xgboost: Not installed
2024-07-08 16:42:31,292:INFO:            catboost: Not installed
2024-07-08 16:42:31,292:INFO:              kmodes: Not installed
2024-07-08 16:42:31,292:INFO:             mlxtend: Not installed
2024-07-08 16:42:31,292:INFO:       statsforecast: Not installed
2024-07-08 16:42:31,292:INFO:        tune_sklearn: Not installed
2024-07-08 16:42:31,292:INFO:                 ray: Not installed
2024-07-08 16:42:31,292:INFO:            hyperopt: Not installed
2024-07-08 16:42:31,292:INFO:              optuna: Not installed
2024-07-08 16:42:31,292:INFO:               skopt: Not installed
2024-07-08 16:42:31,292:INFO:              mlflow: Not installed
2024-07-08 16:42:31,292:INFO:              gradio: Not installed
2024-07-08 16:42:31,292:INFO:             fastapi: Not installed
2024-07-08 16:42:31,292:INFO:             uvicorn: Not installed
2024-07-08 16:42:31,292:INFO:              m2cgen: Not installed
2024-07-08 16:42:31,292:INFO:           evidently: Not installed
2024-07-08 16:42:31,292:INFO:               fugue: Not installed
2024-07-08 16:42:31,292:INFO:           streamlit: Not installed
2024-07-08 16:42:31,292:INFO:             prophet: Not installed
2024-07-08 16:42:31,292:INFO:None
2024-07-08 16:42:31,292:INFO:Set up data.
2024-07-08 16:42:31,300:INFO:Set up folding strategy.
2024-07-08 16:42:31,300:INFO:Set up train/test split.
2024-07-08 16:42:31,437:INFO:Set up index.
2024-07-08 16:42:31,437:INFO:Assigning column types.
2024-07-08 16:42:31,441:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 16:42:31,489:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:42:31,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:31,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,575:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:42:31,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:31,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,600:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 16:42:31,640:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:31,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,707:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:31,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,732:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 16:42:31,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:31,864:INFO:Preparing preprocessing pipeline...
2024-07-08 16:42:31,865:INFO:Set up simple imputation.
2024-07-08 16:42:31,868:INFO:Set up encoding of ordinal features.
2024-07-08 16:42:31,869:INFO:Set up encoding of categorical features.
2024-07-08 16:42:31,869:INFO:Set up feature normalization.
2024-07-08 16:42:43,978:INFO:PyCaret ClassificationExperiment
2024-07-08 16:42:43,978:INFO:Logging name: clf-default-name
2024-07-08 16:42:43,978:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 16:42:43,978:INFO:version 3.3.2
2024-07-08 16:42:43,978:INFO:Initializing setup()
2024-07-08 16:42:43,978:INFO:self.USI: 14fc
2024-07-08 16:42:43,978:INFO:self._variable_keys: {'seed', 'X', 'exp_name_log', 'X_test', '_available_plots', 'y_train', 'n_jobs_param', 'y', 'html_param', 'X_train', 'gpu_param', 'log_plots_param', 'exp_id', 'gpu_n_jobs_param', 'pipeline', 'data', '_ml_usecase', 'fix_imbalance', 'idx', 'target_param', 'is_multiclass', 'fold_groups_param', 'y_test', 'logging_param', 'fold_generator', 'memory', 'USI', 'fold_shuffle_param'}
2024-07-08 16:42:43,978:INFO:Checking environment
2024-07-08 16:42:43,978:INFO:python_version: 3.11.5
2024-07-08 16:42:43,978:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 16:42:43,978:INFO:machine: x86_64
2024-07-08 16:42:43,979:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:42:43,979:INFO:Memory: svmem(total=17179869184, available=5719437312, percent=66.7, used=9099104256, free=26112000, active=5692477440, inactive=5688446976, wired=3406626816)
2024-07-08 16:42:43,979:INFO:Physical Core: 6
2024-07-08 16:42:43,979:INFO:Logical Core: 12
2024-07-08 16:42:43,979:INFO:Checking libraries
2024-07-08 16:42:43,979:INFO:System:
2024-07-08 16:42:43,979:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 16:42:43,979:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 16:42:43,979:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:42:43,979:INFO:PyCaret required dependencies:
2024-07-08 16:42:43,979:INFO:                 pip: 23.3.1
2024-07-08 16:42:43,979:INFO:          setuptools: 68.2.2
2024-07-08 16:42:43,979:INFO:             pycaret: 3.3.2
2024-07-08 16:42:43,979:INFO:             IPython: 8.20.0
2024-07-08 16:42:43,979:INFO:          ipywidgets: 8.0.4
2024-07-08 16:42:43,979:INFO:                tqdm: 4.65.0
2024-07-08 16:42:43,979:INFO:               numpy: 1.24.2
2024-07-08 16:42:43,979:INFO:              pandas: 2.1.4
2024-07-08 16:42:43,980:INFO:              jinja2: 3.1.3
2024-07-08 16:42:43,980:INFO:               scipy: 1.10.1
2024-07-08 16:42:43,980:INFO:              joblib: 1.4.0
2024-07-08 16:42:43,980:INFO:             sklearn: 1.4.0
2024-07-08 16:42:43,980:INFO:                pyod: 2.0.1
2024-07-08 16:42:43,980:INFO:            imblearn: 0.12.3
2024-07-08 16:42:43,980:INFO:   category_encoders: 2.6.3
2024-07-08 16:42:43,980:INFO:            lightgbm: 4.4.0
2024-07-08 16:42:43,980:INFO:               numba: 0.60.0
2024-07-08 16:42:43,980:INFO:            requests: 2.31.0
2024-07-08 16:42:43,980:INFO:          matplotlib: 3.8.2
2024-07-08 16:42:43,980:INFO:          scikitplot: 0.3.7
2024-07-08 16:42:43,980:INFO:         yellowbrick: 1.5
2024-07-08 16:42:43,980:INFO:              plotly: 5.19.0
2024-07-08 16:42:43,980:INFO:    plotly-resampler: Not installed
2024-07-08 16:42:43,980:INFO:             kaleido: 0.2.1
2024-07-08 16:42:43,980:INFO:           schemdraw: 0.15
2024-07-08 16:42:43,981:INFO:         statsmodels: 0.14.2
2024-07-08 16:42:43,981:INFO:              sktime: 0.26.0
2024-07-08 16:42:43,981:INFO:               tbats: 1.1.3
2024-07-08 16:42:43,981:INFO:            pmdarima: 2.0.4
2024-07-08 16:42:43,981:INFO:              psutil: 5.9.0
2024-07-08 16:42:43,981:INFO:          markupsafe: 2.1.3
2024-07-08 16:42:43,981:INFO:             pickle5: Not installed
2024-07-08 16:42:43,981:INFO:         cloudpickle: 3.0.0
2024-07-08 16:42:43,981:INFO:         deprecation: 2.1.0
2024-07-08 16:42:43,981:INFO:              xxhash: 3.4.1
2024-07-08 16:42:43,981:INFO:           wurlitzer: 3.1.1
2024-07-08 16:42:43,981:INFO:PyCaret optional dependencies:
2024-07-08 16:42:43,981:INFO:                shap: Not installed
2024-07-08 16:42:43,981:INFO:           interpret: Not installed
2024-07-08 16:42:43,981:INFO:                umap: Not installed
2024-07-08 16:42:43,982:INFO:     ydata_profiling: Not installed
2024-07-08 16:42:43,982:INFO:  explainerdashboard: Not installed
2024-07-08 16:42:43,982:INFO:             autoviz: Not installed
2024-07-08 16:42:43,982:INFO:           fairlearn: Not installed
2024-07-08 16:42:43,982:INFO:          deepchecks: Not installed
2024-07-08 16:42:43,982:INFO:             xgboost: Not installed
2024-07-08 16:42:43,982:INFO:            catboost: Not installed
2024-07-08 16:42:43,982:INFO:              kmodes: Not installed
2024-07-08 16:42:43,982:INFO:             mlxtend: Not installed
2024-07-08 16:42:43,982:INFO:       statsforecast: Not installed
2024-07-08 16:42:43,982:INFO:        tune_sklearn: Not installed
2024-07-08 16:42:43,982:INFO:                 ray: Not installed
2024-07-08 16:42:43,982:INFO:            hyperopt: Not installed
2024-07-08 16:42:43,982:INFO:              optuna: Not installed
2024-07-08 16:42:43,982:INFO:               skopt: Not installed
2024-07-08 16:42:43,982:INFO:              mlflow: Not installed
2024-07-08 16:42:43,982:INFO:              gradio: Not installed
2024-07-08 16:42:43,982:INFO:             fastapi: Not installed
2024-07-08 16:42:43,982:INFO:             uvicorn: Not installed
2024-07-08 16:42:43,982:INFO:              m2cgen: Not installed
2024-07-08 16:42:43,982:INFO:           evidently: Not installed
2024-07-08 16:42:43,982:INFO:               fugue: Not installed
2024-07-08 16:42:43,982:INFO:           streamlit: Not installed
2024-07-08 16:42:43,982:INFO:             prophet: Not installed
2024-07-08 16:42:43,982:INFO:None
2024-07-08 16:42:43,982:INFO:Set up data.
2024-07-08 16:42:43,991:INFO:Set up folding strategy.
2024-07-08 16:42:43,991:INFO:Set up train/test split.
2024-07-08 16:42:43,999:INFO:Set up index.
2024-07-08 16:42:43,999:INFO:Assigning column types.
2024-07-08 16:42:44,004:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 16:42:44,064:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:42:44,065:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:44,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,140:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:42:44,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:44,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,165:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 16:42:44,205:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:44,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,273:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:42:44,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,297:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 16:42:44,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:42:44,431:INFO:Preparing preprocessing pipeline...
2024-07-08 16:42:44,432:INFO:Set up simple imputation.
2024-07-08 16:42:44,434:INFO:Set up encoding of ordinal features.
2024-07-08 16:42:44,436:INFO:Set up encoding of categorical features.
2024-07-08 16:42:44,436:INFO:Set up feature normalization.
2024-07-08 16:44:43,229:INFO:PyCaret ClassificationExperiment
2024-07-08 16:44:43,229:INFO:Logging name: clf-default-name
2024-07-08 16:44:43,229:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 16:44:43,229:INFO:version 3.3.2
2024-07-08 16:44:43,229:INFO:Initializing setup()
2024-07-08 16:44:43,229:INFO:self.USI: 688b
2024-07-08 16:44:43,229:INFO:self._variable_keys: {'seed', 'X', 'exp_name_log', 'X_test', '_available_plots', 'y_train', 'n_jobs_param', 'y', 'html_param', 'X_train', 'gpu_param', 'log_plots_param', 'exp_id', 'gpu_n_jobs_param', 'pipeline', 'data', '_ml_usecase', 'fix_imbalance', 'idx', 'target_param', 'is_multiclass', 'fold_groups_param', 'y_test', 'logging_param', 'fold_generator', 'memory', 'USI', 'fold_shuffle_param'}
2024-07-08 16:44:43,229:INFO:Checking environment
2024-07-08 16:44:43,229:INFO:python_version: 3.11.5
2024-07-08 16:44:43,230:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 16:44:43,230:INFO:machine: x86_64
2024-07-08 16:44:43,230:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:44:43,230:INFO:Memory: svmem(total=17179869184, available=6019579904, percent=65.0, used=8867708928, free=145276928, active=5393907712, inactive=5870821376, wired=3473801216)
2024-07-08 16:44:43,230:INFO:Physical Core: 6
2024-07-08 16:44:43,230:INFO:Logical Core: 12
2024-07-08 16:44:43,230:INFO:Checking libraries
2024-07-08 16:44:43,230:INFO:System:
2024-07-08 16:44:43,230:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 16:44:43,230:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 16:44:43,230:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:44:43,230:INFO:PyCaret required dependencies:
2024-07-08 16:44:43,230:INFO:                 pip: 23.3.1
2024-07-08 16:44:43,230:INFO:          setuptools: 68.2.2
2024-07-08 16:44:43,230:INFO:             pycaret: 3.3.2
2024-07-08 16:44:43,230:INFO:             IPython: 8.20.0
2024-07-08 16:44:43,230:INFO:          ipywidgets: 8.0.4
2024-07-08 16:44:43,230:INFO:                tqdm: 4.65.0
2024-07-08 16:44:43,230:INFO:               numpy: 1.24.2
2024-07-08 16:44:43,230:INFO:              pandas: 2.1.4
2024-07-08 16:44:43,230:INFO:              jinja2: 3.1.3
2024-07-08 16:44:43,231:INFO:               scipy: 1.10.1
2024-07-08 16:44:43,231:INFO:              joblib: 1.4.0
2024-07-08 16:44:43,231:INFO:             sklearn: 1.4.0
2024-07-08 16:44:43,231:INFO:                pyod: 2.0.1
2024-07-08 16:44:43,231:INFO:            imblearn: 0.12.3
2024-07-08 16:44:43,231:INFO:   category_encoders: 2.6.3
2024-07-08 16:44:43,231:INFO:            lightgbm: 4.4.0
2024-07-08 16:44:43,231:INFO:               numba: 0.60.0
2024-07-08 16:44:43,231:INFO:            requests: 2.31.0
2024-07-08 16:44:43,231:INFO:          matplotlib: 3.8.2
2024-07-08 16:44:43,231:INFO:          scikitplot: 0.3.7
2024-07-08 16:44:43,232:INFO:         yellowbrick: 1.5
2024-07-08 16:44:43,232:INFO:              plotly: 5.19.0
2024-07-08 16:44:43,232:INFO:    plotly-resampler: Not installed
2024-07-08 16:44:43,232:INFO:             kaleido: 0.2.1
2024-07-08 16:44:43,232:INFO:           schemdraw: 0.15
2024-07-08 16:44:43,232:INFO:         statsmodels: 0.14.2
2024-07-08 16:44:43,232:INFO:              sktime: 0.26.0
2024-07-08 16:44:43,232:INFO:               tbats: 1.1.3
2024-07-08 16:44:43,232:INFO:            pmdarima: 2.0.4
2024-07-08 16:44:43,233:INFO:              psutil: 5.9.0
2024-07-08 16:44:43,233:INFO:          markupsafe: 2.1.3
2024-07-08 16:44:43,233:INFO:             pickle5: Not installed
2024-07-08 16:44:43,233:INFO:         cloudpickle: 3.0.0
2024-07-08 16:44:43,233:INFO:         deprecation: 2.1.0
2024-07-08 16:44:43,233:INFO:              xxhash: 3.4.1
2024-07-08 16:44:43,233:INFO:           wurlitzer: 3.1.1
2024-07-08 16:44:43,233:INFO:PyCaret optional dependencies:
2024-07-08 16:44:43,233:INFO:                shap: Not installed
2024-07-08 16:44:43,233:INFO:           interpret: Not installed
2024-07-08 16:44:43,233:INFO:                umap: Not installed
2024-07-08 16:44:43,233:INFO:     ydata_profiling: Not installed
2024-07-08 16:44:43,233:INFO:  explainerdashboard: Not installed
2024-07-08 16:44:43,233:INFO:             autoviz: Not installed
2024-07-08 16:44:43,233:INFO:           fairlearn: Not installed
2024-07-08 16:44:43,233:INFO:          deepchecks: Not installed
2024-07-08 16:44:43,233:INFO:             xgboost: Not installed
2024-07-08 16:44:43,233:INFO:            catboost: Not installed
2024-07-08 16:44:43,233:INFO:              kmodes: Not installed
2024-07-08 16:44:43,233:INFO:             mlxtend: Not installed
2024-07-08 16:44:43,233:INFO:       statsforecast: Not installed
2024-07-08 16:44:43,233:INFO:        tune_sklearn: Not installed
2024-07-08 16:44:43,233:INFO:                 ray: Not installed
2024-07-08 16:44:43,233:INFO:            hyperopt: Not installed
2024-07-08 16:44:43,233:INFO:              optuna: Not installed
2024-07-08 16:44:43,234:INFO:               skopt: Not installed
2024-07-08 16:44:43,234:INFO:              mlflow: Not installed
2024-07-08 16:44:43,234:INFO:              gradio: Not installed
2024-07-08 16:44:43,234:INFO:             fastapi: Not installed
2024-07-08 16:44:43,234:INFO:             uvicorn: Not installed
2024-07-08 16:44:43,234:INFO:              m2cgen: Not installed
2024-07-08 16:44:43,234:INFO:           evidently: Not installed
2024-07-08 16:44:43,234:INFO:               fugue: Not installed
2024-07-08 16:44:43,234:INFO:           streamlit: Not installed
2024-07-08 16:44:43,234:INFO:             prophet: Not installed
2024-07-08 16:44:43,234:INFO:None
2024-07-08 16:44:43,234:INFO:Set up data.
2024-07-08 16:44:43,242:INFO:Set up folding strategy.
2024-07-08 16:44:43,242:INFO:Set up train/test split.
2024-07-08 16:44:43,252:INFO:Set up index.
2024-07-08 16:44:43,253:INFO:Assigning column types.
2024-07-08 16:44:43,258:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 16:44:43,339:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:44:43,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:44:43,371:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:44:43,415:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:44:43,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,439:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 16:44:43,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:44:43,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,542:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:44:43,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,566:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 16:44:43,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:44:43,705:INFO:Preparing preprocessing pipeline...
2024-07-08 16:44:43,706:INFO:Set up simple imputation.
2024-07-08 16:44:43,709:INFO:Set up encoding of ordinal features.
2024-07-08 16:44:43,710:INFO:Set up encoding of categorical features.
2024-07-08 16:45:33,325:INFO:PyCaret ClassificationExperiment
2024-07-08 16:45:33,325:INFO:Logging name: clf-default-name
2024-07-08 16:45:33,325:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 16:45:33,325:INFO:version 3.3.2
2024-07-08 16:45:33,326:INFO:Initializing setup()
2024-07-08 16:45:33,326:INFO:self.USI: 64d9
2024-07-08 16:45:33,326:INFO:self._variable_keys: {'seed', 'X', 'exp_name_log', 'X_test', '_available_plots', 'y_train', 'n_jobs_param', 'y', 'html_param', 'X_train', 'gpu_param', 'log_plots_param', 'exp_id', 'gpu_n_jobs_param', 'pipeline', 'data', '_ml_usecase', 'fix_imbalance', 'idx', 'target_param', 'is_multiclass', 'fold_groups_param', 'y_test', 'logging_param', 'fold_generator', 'memory', 'USI', 'fold_shuffle_param'}
2024-07-08 16:45:33,326:INFO:Checking environment
2024-07-08 16:45:33,326:INFO:python_version: 3.11.5
2024-07-08 16:45:33,326:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 16:45:33,327:INFO:machine: x86_64
2024-07-08 16:45:33,327:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:45:33,327:INFO:Memory: svmem(total=17179869184, available=5989294080, percent=65.1, used=8894930944, free=135090176, active=5585186816, inactive=5847515136, wired=3309744128)
2024-07-08 16:45:33,327:INFO:Physical Core: 6
2024-07-08 16:45:33,327:INFO:Logical Core: 12
2024-07-08 16:45:33,327:INFO:Checking libraries
2024-07-08 16:45:33,328:INFO:System:
2024-07-08 16:45:33,328:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 16:45:33,328:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 16:45:33,328:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:45:33,329:INFO:PyCaret required dependencies:
2024-07-08 16:45:33,329:INFO:                 pip: 23.3.1
2024-07-08 16:45:33,329:INFO:          setuptools: 68.2.2
2024-07-08 16:45:33,329:INFO:             pycaret: 3.3.2
2024-07-08 16:45:33,329:INFO:             IPython: 8.20.0
2024-07-08 16:45:33,329:INFO:          ipywidgets: 8.0.4
2024-07-08 16:45:33,329:INFO:                tqdm: 4.65.0
2024-07-08 16:45:33,329:INFO:               numpy: 1.24.2
2024-07-08 16:45:33,329:INFO:              pandas: 2.1.4
2024-07-08 16:45:33,329:INFO:              jinja2: 3.1.3
2024-07-08 16:45:33,329:INFO:               scipy: 1.10.1
2024-07-08 16:45:33,329:INFO:              joblib: 1.4.0
2024-07-08 16:45:33,329:INFO:             sklearn: 1.4.0
2024-07-08 16:45:33,329:INFO:                pyod: 2.0.1
2024-07-08 16:45:33,329:INFO:            imblearn: 0.12.3
2024-07-08 16:45:33,329:INFO:   category_encoders: 2.6.3
2024-07-08 16:45:33,329:INFO:            lightgbm: 4.4.0
2024-07-08 16:45:33,329:INFO:               numba: 0.60.0
2024-07-08 16:45:33,329:INFO:            requests: 2.31.0
2024-07-08 16:45:33,329:INFO:          matplotlib: 3.8.2
2024-07-08 16:45:33,329:INFO:          scikitplot: 0.3.7
2024-07-08 16:45:33,329:INFO:         yellowbrick: 1.5
2024-07-08 16:45:33,330:INFO:              plotly: 5.19.0
2024-07-08 16:45:33,330:INFO:    plotly-resampler: Not installed
2024-07-08 16:45:33,330:INFO:             kaleido: 0.2.1
2024-07-08 16:45:33,330:INFO:           schemdraw: 0.15
2024-07-08 16:45:33,330:INFO:         statsmodels: 0.14.2
2024-07-08 16:45:33,330:INFO:              sktime: 0.26.0
2024-07-08 16:45:33,330:INFO:               tbats: 1.1.3
2024-07-08 16:45:33,330:INFO:            pmdarima: 2.0.4
2024-07-08 16:45:33,330:INFO:              psutil: 5.9.0
2024-07-08 16:45:33,330:INFO:          markupsafe: 2.1.3
2024-07-08 16:45:33,330:INFO:             pickle5: Not installed
2024-07-08 16:45:33,330:INFO:         cloudpickle: 3.0.0
2024-07-08 16:45:33,330:INFO:         deprecation: 2.1.0
2024-07-08 16:45:33,330:INFO:              xxhash: 3.4.1
2024-07-08 16:45:33,330:INFO:           wurlitzer: 3.1.1
2024-07-08 16:45:33,330:INFO:PyCaret optional dependencies:
2024-07-08 16:45:33,330:INFO:                shap: Not installed
2024-07-08 16:45:33,330:INFO:           interpret: Not installed
2024-07-08 16:45:33,330:INFO:                umap: Not installed
2024-07-08 16:45:33,330:INFO:     ydata_profiling: Not installed
2024-07-08 16:45:33,330:INFO:  explainerdashboard: Not installed
2024-07-08 16:45:33,330:INFO:             autoviz: Not installed
2024-07-08 16:45:33,330:INFO:           fairlearn: Not installed
2024-07-08 16:45:33,330:INFO:          deepchecks: Not installed
2024-07-08 16:45:33,330:INFO:             xgboost: Not installed
2024-07-08 16:45:33,330:INFO:            catboost: Not installed
2024-07-08 16:45:33,330:INFO:              kmodes: Not installed
2024-07-08 16:45:33,330:INFO:             mlxtend: Not installed
2024-07-08 16:45:33,331:INFO:       statsforecast: Not installed
2024-07-08 16:45:33,331:INFO:        tune_sklearn: Not installed
2024-07-08 16:45:33,331:INFO:                 ray: Not installed
2024-07-08 16:45:33,331:INFO:            hyperopt: Not installed
2024-07-08 16:45:33,331:INFO:              optuna: Not installed
2024-07-08 16:45:33,331:INFO:               skopt: Not installed
2024-07-08 16:45:33,331:INFO:              mlflow: Not installed
2024-07-08 16:45:33,331:INFO:              gradio: Not installed
2024-07-08 16:45:33,331:INFO:             fastapi: Not installed
2024-07-08 16:45:33,331:INFO:             uvicorn: Not installed
2024-07-08 16:45:33,331:INFO:              m2cgen: Not installed
2024-07-08 16:45:33,331:INFO:           evidently: Not installed
2024-07-08 16:45:33,331:INFO:               fugue: Not installed
2024-07-08 16:45:33,331:INFO:           streamlit: Not installed
2024-07-08 16:45:33,331:INFO:             prophet: Not installed
2024-07-08 16:45:33,331:INFO:None
2024-07-08 16:45:33,331:INFO:Set up data.
2024-07-08 16:45:33,344:INFO:Set up folding strategy.
2024-07-08 16:45:33,344:INFO:Set up train/test split.
2024-07-08 16:45:33,352:INFO:Set up index.
2024-07-08 16:45:33,353:INFO:Assigning column types.
2024-07-08 16:45:33,358:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 16:45:33,428:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:45:33,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:45:33,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,505:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:45:33,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:45:33,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,530:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 16:45:33,571:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:45:33,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:45:33,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,668:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 16:45:33,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:45:33,796:INFO:Preparing preprocessing pipeline...
2024-07-08 16:45:33,796:INFO:Set up simple imputation.
2024-07-08 16:45:33,799:INFO:Set up encoding of ordinal features.
2024-07-08 16:45:33,800:INFO:Set up encoding of categorical features.
2024-07-08 16:46:08,147:INFO:PyCaret ClassificationExperiment
2024-07-08 16:46:08,148:INFO:Logging name: clf-default-name
2024-07-08 16:46:08,148:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 16:46:08,148:INFO:version 3.3.2
2024-07-08 16:46:08,148:INFO:Initializing setup()
2024-07-08 16:46:08,148:INFO:self.USI: 2991
2024-07-08 16:46:08,148:INFO:self._variable_keys: {'seed', 'X', 'exp_name_log', 'X_test', '_available_plots', 'y_train', 'n_jobs_param', 'y', 'html_param', 'X_train', 'gpu_param', 'log_plots_param', 'exp_id', 'gpu_n_jobs_param', 'pipeline', 'data', '_ml_usecase', 'fix_imbalance', 'idx', 'target_param', 'is_multiclass', 'fold_groups_param', 'y_test', 'logging_param', 'fold_generator', 'memory', 'USI', 'fold_shuffle_param'}
2024-07-08 16:46:08,148:INFO:Checking environment
2024-07-08 16:46:08,148:INFO:python_version: 3.11.5
2024-07-08 16:46:08,148:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 16:46:08,148:INFO:machine: x86_64
2024-07-08 16:46:08,148:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:46:08,148:INFO:Memory: svmem(total=17179869184, available=5937930240, percent=65.4, used=8952471552, free=40407040, active=5515767808, inactive=5894471680, wired=3436703744)
2024-07-08 16:46:08,148:INFO:Physical Core: 6
2024-07-08 16:46:08,148:INFO:Logical Core: 12
2024-07-08 16:46:08,149:INFO:Checking libraries
2024-07-08 16:46:08,149:INFO:System:
2024-07-08 16:46:08,149:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 16:46:08,149:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 16:46:08,149:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:46:08,149:INFO:PyCaret required dependencies:
2024-07-08 16:46:08,149:INFO:                 pip: 23.3.1
2024-07-08 16:46:08,149:INFO:          setuptools: 68.2.2
2024-07-08 16:46:08,149:INFO:             pycaret: 3.3.2
2024-07-08 16:46:08,149:INFO:             IPython: 8.20.0
2024-07-08 16:46:08,149:INFO:          ipywidgets: 8.0.4
2024-07-08 16:46:08,149:INFO:                tqdm: 4.65.0
2024-07-08 16:46:08,149:INFO:               numpy: 1.24.2
2024-07-08 16:46:08,149:INFO:              pandas: 2.1.4
2024-07-08 16:46:08,149:INFO:              jinja2: 3.1.3
2024-07-08 16:46:08,149:INFO:               scipy: 1.10.1
2024-07-08 16:46:08,149:INFO:              joblib: 1.4.0
2024-07-08 16:46:08,149:INFO:             sklearn: 1.4.0
2024-07-08 16:46:08,149:INFO:                pyod: 2.0.1
2024-07-08 16:46:08,149:INFO:            imblearn: 0.12.3
2024-07-08 16:46:08,149:INFO:   category_encoders: 2.6.3
2024-07-08 16:46:08,149:INFO:            lightgbm: 4.4.0
2024-07-08 16:46:08,149:INFO:               numba: 0.60.0
2024-07-08 16:46:08,149:INFO:            requests: 2.31.0
2024-07-08 16:46:08,149:INFO:          matplotlib: 3.8.2
2024-07-08 16:46:08,149:INFO:          scikitplot: 0.3.7
2024-07-08 16:46:08,150:INFO:         yellowbrick: 1.5
2024-07-08 16:46:08,150:INFO:              plotly: 5.19.0
2024-07-08 16:46:08,150:INFO:    plotly-resampler: Not installed
2024-07-08 16:46:08,150:INFO:             kaleido: 0.2.1
2024-07-08 16:46:08,150:INFO:           schemdraw: 0.15
2024-07-08 16:46:08,150:INFO:         statsmodels: 0.14.2
2024-07-08 16:46:08,150:INFO:              sktime: 0.26.0
2024-07-08 16:46:08,150:INFO:               tbats: 1.1.3
2024-07-08 16:46:08,150:INFO:            pmdarima: 2.0.4
2024-07-08 16:46:08,150:INFO:              psutil: 5.9.0
2024-07-08 16:46:08,150:INFO:          markupsafe: 2.1.3
2024-07-08 16:46:08,150:INFO:             pickle5: Not installed
2024-07-08 16:46:08,150:INFO:         cloudpickle: 3.0.0
2024-07-08 16:46:08,150:INFO:         deprecation: 2.1.0
2024-07-08 16:46:08,150:INFO:              xxhash: 3.4.1
2024-07-08 16:46:08,150:INFO:           wurlitzer: 3.1.1
2024-07-08 16:46:08,150:INFO:PyCaret optional dependencies:
2024-07-08 16:46:08,150:INFO:                shap: Not installed
2024-07-08 16:46:08,150:INFO:           interpret: Not installed
2024-07-08 16:46:08,150:INFO:                umap: Not installed
2024-07-08 16:46:08,150:INFO:     ydata_profiling: Not installed
2024-07-08 16:46:08,150:INFO:  explainerdashboard: Not installed
2024-07-08 16:46:08,150:INFO:             autoviz: Not installed
2024-07-08 16:46:08,150:INFO:           fairlearn: Not installed
2024-07-08 16:46:08,150:INFO:          deepchecks: Not installed
2024-07-08 16:46:08,150:INFO:             xgboost: Not installed
2024-07-08 16:46:08,150:INFO:            catboost: Not installed
2024-07-08 16:46:08,151:INFO:              kmodes: Not installed
2024-07-08 16:46:08,151:INFO:             mlxtend: Not installed
2024-07-08 16:46:08,151:INFO:       statsforecast: Not installed
2024-07-08 16:46:08,151:INFO:        tune_sklearn: Not installed
2024-07-08 16:46:08,151:INFO:                 ray: Not installed
2024-07-08 16:46:08,151:INFO:            hyperopt: Not installed
2024-07-08 16:46:08,151:INFO:              optuna: Not installed
2024-07-08 16:46:08,151:INFO:               skopt: Not installed
2024-07-08 16:46:08,151:INFO:              mlflow: Not installed
2024-07-08 16:46:08,151:INFO:              gradio: Not installed
2024-07-08 16:46:08,151:INFO:             fastapi: Not installed
2024-07-08 16:46:08,151:INFO:             uvicorn: Not installed
2024-07-08 16:46:08,151:INFO:              m2cgen: Not installed
2024-07-08 16:46:08,151:INFO:           evidently: Not installed
2024-07-08 16:46:08,151:INFO:               fugue: Not installed
2024-07-08 16:46:08,151:INFO:           streamlit: Not installed
2024-07-08 16:46:08,151:INFO:             prophet: Not installed
2024-07-08 16:46:08,151:INFO:None
2024-07-08 16:46:08,151:INFO:Set up data.
2024-07-08 16:46:08,160:INFO:Set up folding strategy.
2024-07-08 16:46:08,160:INFO:Set up train/test split.
2024-07-08 16:46:08,172:INFO:Set up index.
2024-07-08 16:46:08,173:INFO:Assigning column types.
2024-07-08 16:46:08,178:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 16:46:08,254:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:46:08,255:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:46:08,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,329:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:46:08,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:46:08,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,355:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 16:46:08,397:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:46:08,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:46:08,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,493:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 16:46:08,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:46:08,623:INFO:Preparing preprocessing pipeline...
2024-07-08 16:46:08,624:INFO:Set up simple imputation.
2024-07-08 16:46:08,625:INFO:Set up encoding of ordinal features.
2024-07-08 16:46:08,626:INFO:Set up encoding of categorical features.
2024-07-08 16:46:08,626:INFO:Set up feature normalization.
2024-07-08 16:55:28,691:INFO:PyCaret ClassificationExperiment
2024-07-08 16:55:28,691:INFO:Logging name: clf-default-name
2024-07-08 16:55:28,692:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 16:55:28,692:INFO:version 3.3.2
2024-07-08 16:55:28,692:INFO:Initializing setup()
2024-07-08 16:55:28,692:INFO:self.USI: 3512
2024-07-08 16:55:28,692:INFO:self._variable_keys: {'seed', 'X', 'exp_name_log', 'X_test', '_available_plots', 'y_train', 'n_jobs_param', 'y', 'html_param', 'X_train', 'gpu_param', 'log_plots_param', 'exp_id', 'gpu_n_jobs_param', 'pipeline', 'data', '_ml_usecase', 'fix_imbalance', 'idx', 'target_param', 'is_multiclass', 'fold_groups_param', 'y_test', 'logging_param', 'fold_generator', 'memory', 'USI', 'fold_shuffle_param'}
2024-07-08 16:55:28,692:INFO:Checking environment
2024-07-08 16:55:28,692:INFO:python_version: 3.11.5
2024-07-08 16:55:28,692:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 16:55:28,692:INFO:machine: x86_64
2024-07-08 16:55:28,692:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:55:28,692:INFO:Memory: svmem(total=17179869184, available=5707722752, percent=66.8, used=9087930368, free=84570112, active=5626130432, inactive=5618307072, wired=3461799936)
2024-07-08 16:55:28,692:INFO:Physical Core: 6
2024-07-08 16:55:28,692:INFO:Logical Core: 12
2024-07-08 16:55:28,692:INFO:Checking libraries
2024-07-08 16:55:28,692:INFO:System:
2024-07-08 16:55:28,692:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 16:55:28,693:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 16:55:28,693:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:55:28,693:INFO:PyCaret required dependencies:
2024-07-08 16:55:28,693:INFO:                 pip: 23.3.1
2024-07-08 16:55:28,693:INFO:          setuptools: 68.2.2
2024-07-08 16:55:28,693:INFO:             pycaret: 3.3.2
2024-07-08 16:55:28,693:INFO:             IPython: 8.20.0
2024-07-08 16:55:28,693:INFO:          ipywidgets: 8.0.4
2024-07-08 16:55:28,693:INFO:                tqdm: 4.65.0
2024-07-08 16:55:28,693:INFO:               numpy: 1.24.2
2024-07-08 16:55:28,693:INFO:              pandas: 2.1.4
2024-07-08 16:55:28,693:INFO:              jinja2: 3.1.3
2024-07-08 16:55:28,693:INFO:               scipy: 1.10.1
2024-07-08 16:55:28,693:INFO:              joblib: 1.4.0
2024-07-08 16:55:28,693:INFO:             sklearn: 1.4.0
2024-07-08 16:55:28,693:INFO:                pyod: 2.0.1
2024-07-08 16:55:28,693:INFO:            imblearn: 0.12.3
2024-07-08 16:55:28,693:INFO:   category_encoders: 2.6.3
2024-07-08 16:55:28,693:INFO:            lightgbm: 4.4.0
2024-07-08 16:55:28,693:INFO:               numba: 0.60.0
2024-07-08 16:55:28,694:INFO:            requests: 2.31.0
2024-07-08 16:55:28,694:INFO:          matplotlib: 3.8.2
2024-07-08 16:55:28,694:INFO:          scikitplot: 0.3.7
2024-07-08 16:55:28,694:INFO:         yellowbrick: 1.5
2024-07-08 16:55:28,694:INFO:              plotly: 5.19.0
2024-07-08 16:55:28,694:INFO:    plotly-resampler: Not installed
2024-07-08 16:55:28,694:INFO:             kaleido: 0.2.1
2024-07-08 16:55:28,694:INFO:           schemdraw: 0.15
2024-07-08 16:55:28,694:INFO:         statsmodels: 0.14.2
2024-07-08 16:55:28,694:INFO:              sktime: 0.26.0
2024-07-08 16:55:28,694:INFO:               tbats: 1.1.3
2024-07-08 16:55:28,694:INFO:            pmdarima: 2.0.4
2024-07-08 16:55:28,694:INFO:              psutil: 5.9.0
2024-07-08 16:55:28,694:INFO:          markupsafe: 2.1.3
2024-07-08 16:55:28,694:INFO:             pickle5: Not installed
2024-07-08 16:55:28,694:INFO:         cloudpickle: 3.0.0
2024-07-08 16:55:28,695:INFO:         deprecation: 2.1.0
2024-07-08 16:55:28,695:INFO:              xxhash: 3.4.1
2024-07-08 16:55:28,695:INFO:           wurlitzer: 3.1.1
2024-07-08 16:55:28,695:INFO:PyCaret optional dependencies:
2024-07-08 16:55:28,695:INFO:                shap: Not installed
2024-07-08 16:55:28,695:INFO:           interpret: Not installed
2024-07-08 16:55:28,695:INFO:                umap: Not installed
2024-07-08 16:55:28,695:INFO:     ydata_profiling: Not installed
2024-07-08 16:55:28,695:INFO:  explainerdashboard: Not installed
2024-07-08 16:55:28,695:INFO:             autoviz: Not installed
2024-07-08 16:55:28,695:INFO:           fairlearn: Not installed
2024-07-08 16:55:28,695:INFO:          deepchecks: Not installed
2024-07-08 16:55:28,695:INFO:             xgboost: Not installed
2024-07-08 16:55:28,695:INFO:            catboost: Not installed
2024-07-08 16:55:28,695:INFO:              kmodes: Not installed
2024-07-08 16:55:28,695:INFO:             mlxtend: Not installed
2024-07-08 16:55:28,695:INFO:       statsforecast: Not installed
2024-07-08 16:55:28,695:INFO:        tune_sklearn: Not installed
2024-07-08 16:55:28,695:INFO:                 ray: Not installed
2024-07-08 16:55:28,695:INFO:            hyperopt: Not installed
2024-07-08 16:55:28,695:INFO:              optuna: Not installed
2024-07-08 16:55:28,695:INFO:               skopt: Not installed
2024-07-08 16:55:28,695:INFO:              mlflow: Not installed
2024-07-08 16:55:28,695:INFO:              gradio: Not installed
2024-07-08 16:55:28,695:INFO:             fastapi: Not installed
2024-07-08 16:55:28,695:INFO:             uvicorn: Not installed
2024-07-08 16:55:28,695:INFO:              m2cgen: Not installed
2024-07-08 16:55:28,696:INFO:           evidently: Not installed
2024-07-08 16:55:28,696:INFO:               fugue: Not installed
2024-07-08 16:55:28,696:INFO:           streamlit: Not installed
2024-07-08 16:55:28,696:INFO:             prophet: Not installed
2024-07-08 16:55:28,696:INFO:None
2024-07-08 16:55:28,696:INFO:Set up data.
2024-07-08 16:55:28,704:INFO:Set up folding strategy.
2024-07-08 16:55:28,704:INFO:Set up train/test split.
2024-07-08 16:55:28,712:INFO:Set up index.
2024-07-08 16:55:28,712:INFO:Assigning column types.
2024-07-08 16:55:28,716:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 16:55:28,775:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:55:28,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:55:28,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:28,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:28,852:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:55:28,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:55:28,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:28,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:28,877:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 16:55:28,918:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:55:28,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:28,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:28,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:55:29,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,013:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 16:55:29,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,142:INFO:Preparing preprocessing pipeline...
2024-07-08 16:55:29,143:INFO:Set up simple imputation.
2024-07-08 16:55:29,144:INFO:Set up encoding of ordinal features.
2024-07-08 16:55:29,146:INFO:Set up encoding of categorical features.
2024-07-08 16:55:29,146:INFO:Set up feature normalization.
2024-07-08 16:55:29,186:INFO:Finished creating preprocessing pipeline.
2024-07-08 16:55:29,205:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Age', 'SibSp', 'Parch',
                                             'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['Sex...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 16:55:29,205:INFO:Creating final display dataframe.
2024-07-08 16:55:29,308:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 10)
5   Transformed train set shape         (623, 10)
6    Transformed test set shape         (268, 10)
7               Ignore features                 4
8              Numeric features                 5
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              3512
2024-07-08 16:55:29,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:55:29,469:INFO:setup() successfully completed in 0.78s...............
2024-07-08 16:56:59,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:56:59,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:56:59,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:56:59,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 16:56:59,676:INFO:PyCaret ClassificationExperiment
2024-07-08 16:56:59,677:INFO:Logging name: clf-default-name
2024-07-08 16:56:59,677:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 16:56:59,677:INFO:version 3.3.2
2024-07-08 16:56:59,677:INFO:Initializing setup()
2024-07-08 16:56:59,677:INFO:self.USI: 0457
2024-07-08 16:56:59,677:INFO:self._variable_keys: {'X', 'data', 'y', 'exp_id', 'n_jobs_param', 'memory', 'y_test', 'idx', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'USI', 'logging_param', 'log_plots_param', 'fold_generator', 'is_multiclass', 'X_train', 'html_param', 'fold_groups_param', 'X_test', 'target_param', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'gpu_param'}
2024-07-08 16:56:59,677:INFO:Checking environment
2024-07-08 16:56:59,677:INFO:python_version: 3.11.5
2024-07-08 16:56:59,677:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 16:56:59,678:INFO:machine: x86_64
2024-07-08 16:56:59,678:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:56:59,678:INFO:Memory: svmem(total=17179869184, available=5754494976, percent=66.5, used=9186484224, free=73826304, active=5686689792, inactive=5605224448, wired=3499794432)
2024-07-08 16:56:59,678:INFO:Physical Core: 6
2024-07-08 16:56:59,678:INFO:Logical Core: 12
2024-07-08 16:56:59,678:INFO:Checking libraries
2024-07-08 16:56:59,678:INFO:System:
2024-07-08 16:56:59,678:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 16:56:59,678:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 16:56:59,678:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 16:56:59,678:INFO:PyCaret required dependencies:
2024-07-08 16:56:59,778:INFO:                 pip: 23.3.1
2024-07-08 16:56:59,778:INFO:          setuptools: 68.2.2
2024-07-08 16:56:59,778:INFO:             pycaret: 3.3.2
2024-07-08 16:56:59,779:INFO:             IPython: 8.20.0
2024-07-08 16:56:59,779:INFO:          ipywidgets: 8.0.4
2024-07-08 16:56:59,779:INFO:                tqdm: 4.65.0
2024-07-08 16:56:59,779:INFO:               numpy: 1.24.2
2024-07-08 16:56:59,779:INFO:              pandas: 2.1.4
2024-07-08 16:56:59,779:INFO:              jinja2: 3.1.3
2024-07-08 16:56:59,779:INFO:               scipy: 1.10.1
2024-07-08 16:56:59,779:INFO:              joblib: 1.1.0
2024-07-08 16:56:59,779:INFO:             sklearn: 1.4.0
2024-07-08 16:56:59,779:INFO:                pyod: 2.0.1
2024-07-08 16:56:59,779:INFO:            imblearn: 0.12.3
2024-07-08 16:56:59,779:INFO:   category_encoders: 2.6.3
2024-07-08 16:56:59,779:INFO:            lightgbm: 4.4.0
2024-07-08 16:56:59,779:INFO:               numba: 0.60.0
2024-07-08 16:56:59,779:INFO:            requests: 2.31.0
2024-07-08 16:56:59,779:INFO:          matplotlib: 3.8.2
2024-07-08 16:56:59,779:INFO:          scikitplot: 0.3.7
2024-07-08 16:56:59,779:INFO:         yellowbrick: 1.5
2024-07-08 16:56:59,779:INFO:              plotly: 5.19.0
2024-07-08 16:56:59,779:INFO:    plotly-resampler: Not installed
2024-07-08 16:56:59,779:INFO:             kaleido: 0.2.1
2024-07-08 16:56:59,779:INFO:           schemdraw: 0.15
2024-07-08 16:56:59,779:INFO:         statsmodels: 0.14.2
2024-07-08 16:56:59,779:INFO:              sktime: 0.26.0
2024-07-08 16:56:59,780:INFO:               tbats: 1.1.3
2024-07-08 16:56:59,780:INFO:            pmdarima: 2.0.4
2024-07-08 16:56:59,780:INFO:              psutil: 5.9.0
2024-07-08 16:56:59,780:INFO:          markupsafe: 2.1.3
2024-07-08 16:56:59,780:INFO:             pickle5: Not installed
2024-07-08 16:56:59,780:INFO:         cloudpickle: 3.0.0
2024-07-08 16:56:59,780:INFO:         deprecation: 2.1.0
2024-07-08 16:56:59,780:INFO:              xxhash: 3.4.1
2024-07-08 16:56:59,780:INFO:           wurlitzer: 3.1.1
2024-07-08 16:56:59,780:INFO:PyCaret optional dependencies:
2024-07-08 16:56:59,796:INFO:                shap: Not installed
2024-07-08 16:56:59,796:INFO:           interpret: Not installed
2024-07-08 16:56:59,796:INFO:                umap: Not installed
2024-07-08 16:56:59,796:INFO:     ydata_profiling: Not installed
2024-07-08 16:56:59,796:INFO:  explainerdashboard: Not installed
2024-07-08 16:56:59,796:INFO:             autoviz: Not installed
2024-07-08 16:56:59,796:INFO:           fairlearn: Not installed
2024-07-08 16:56:59,796:INFO:          deepchecks: Not installed
2024-07-08 16:56:59,796:INFO:             xgboost: Not installed
2024-07-08 16:56:59,796:INFO:            catboost: Not installed
2024-07-08 16:56:59,796:INFO:              kmodes: Not installed
2024-07-08 16:56:59,796:INFO:             mlxtend: Not installed
2024-07-08 16:56:59,796:INFO:       statsforecast: Not installed
2024-07-08 16:56:59,796:INFO:        tune_sklearn: Not installed
2024-07-08 16:56:59,797:INFO:                 ray: Not installed
2024-07-08 16:56:59,797:INFO:            hyperopt: Not installed
2024-07-08 16:56:59,797:INFO:              optuna: Not installed
2024-07-08 16:56:59,797:INFO:               skopt: Not installed
2024-07-08 16:56:59,797:INFO:              mlflow: Not installed
2024-07-08 16:56:59,797:INFO:              gradio: Not installed
2024-07-08 16:56:59,797:INFO:             fastapi: Not installed
2024-07-08 16:56:59,797:INFO:             uvicorn: Not installed
2024-07-08 16:56:59,797:INFO:              m2cgen: Not installed
2024-07-08 16:56:59,797:INFO:           evidently: Not installed
2024-07-08 16:56:59,797:INFO:               fugue: Not installed
2024-07-08 16:56:59,797:INFO:           streamlit: Not installed
2024-07-08 16:56:59,797:INFO:             prophet: Not installed
2024-07-08 16:56:59,797:INFO:None
2024-07-08 16:56:59,797:INFO:Set up data.
2024-07-08 16:56:59,806:INFO:Set up folding strategy.
2024-07-08 16:56:59,806:INFO:Set up train/test split.
2024-07-08 16:56:59,817:INFO:Set up index.
2024-07-08 16:56:59,818:INFO:Assigning column types.
2024-07-08 16:56:59,822:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 16:56:59,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:56:59,869:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:56:59,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:56:59,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:56:59,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 16:56:59,951:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:56:59,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:56:59,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:56:59,976:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 16:57:00,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:57:00,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 16:57:00,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,114:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 16:57:00,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 16:57:00,261:INFO:Preparing preprocessing pipeline...
2024-07-08 16:57:00,262:INFO:Set up simple imputation.
2024-07-08 16:57:00,264:INFO:Set up encoding of ordinal features.
2024-07-08 16:57:00,267:INFO:Set up encoding of categorical features.
2024-07-08 16:57:00,267:INFO:Set up feature normalization.
2024-07-08 20:43:45,026:INFO:PyCaret ClassificationExperiment
2024-07-08 20:43:45,027:INFO:Logging name: clf-default-name
2024-07-08 20:43:45,027:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:43:45,027:INFO:version 3.3.2
2024-07-08 20:43:45,027:INFO:Initializing setup()
2024-07-08 20:43:45,027:INFO:self.USI: 200e
2024-07-08 20:43:45,027:INFO:self._variable_keys: {'X', 'data', 'y', 'exp_id', 'n_jobs_param', 'memory', 'y_test', 'idx', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'USI', 'logging_param', 'log_plots_param', 'fold_generator', 'is_multiclass', 'X_train', 'html_param', 'fold_groups_param', 'X_test', 'target_param', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'gpu_param'}
2024-07-08 20:43:45,027:INFO:Checking environment
2024-07-08 20:43:45,027:INFO:python_version: 3.11.5
2024-07-08 20:43:45,027:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:43:45,027:INFO:machine: x86_64
2024-07-08 20:43:45,027:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:43:45,027:INFO:Memory: svmem(total=17179869184, available=5659914240, percent=67.1, used=9108295680, free=30052352, active=5635850240, inactive=5582942208, wired=3472445440)
2024-07-08 20:43:45,027:INFO:Physical Core: 6
2024-07-08 20:43:45,027:INFO:Logical Core: 12
2024-07-08 20:43:45,027:INFO:Checking libraries
2024-07-08 20:43:45,028:INFO:System:
2024-07-08 20:43:45,028:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:43:45,028:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:43:45,028:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:43:45,028:INFO:PyCaret required dependencies:
2024-07-08 20:43:45,028:INFO:                 pip: 23.3.1
2024-07-08 20:43:45,028:INFO:          setuptools: 68.2.2
2024-07-08 20:43:45,028:INFO:             pycaret: 3.3.2
2024-07-08 20:43:45,028:INFO:             IPython: 8.20.0
2024-07-08 20:43:45,028:INFO:          ipywidgets: 8.0.4
2024-07-08 20:43:45,028:INFO:                tqdm: 4.65.0
2024-07-08 20:43:45,029:INFO:               numpy: 1.24.2
2024-07-08 20:43:45,029:INFO:              pandas: 2.1.4
2024-07-08 20:43:45,029:INFO:              jinja2: 3.1.3
2024-07-08 20:43:45,029:INFO:               scipy: 1.10.1
2024-07-08 20:43:45,029:INFO:              joblib: 1.1.0
2024-07-08 20:43:45,029:INFO:             sklearn: 1.4.0
2024-07-08 20:43:45,029:INFO:                pyod: 2.0.1
2024-07-08 20:43:45,029:INFO:            imblearn: 0.12.3
2024-07-08 20:43:45,029:INFO:   category_encoders: 2.6.3
2024-07-08 20:43:45,029:INFO:            lightgbm: 4.4.0
2024-07-08 20:43:45,029:INFO:               numba: 0.60.0
2024-07-08 20:43:45,029:INFO:            requests: 2.31.0
2024-07-08 20:43:45,029:INFO:          matplotlib: 3.8.2
2024-07-08 20:43:45,029:INFO:          scikitplot: 0.3.7
2024-07-08 20:43:45,029:INFO:         yellowbrick: 1.5
2024-07-08 20:43:45,029:INFO:              plotly: 5.19.0
2024-07-08 20:43:45,029:INFO:    plotly-resampler: Not installed
2024-07-08 20:43:45,029:INFO:             kaleido: 0.2.1
2024-07-08 20:43:45,029:INFO:           schemdraw: 0.15
2024-07-08 20:43:45,029:INFO:         statsmodels: 0.14.2
2024-07-08 20:43:45,029:INFO:              sktime: 0.26.0
2024-07-08 20:43:45,029:INFO:               tbats: 1.1.3
2024-07-08 20:43:45,030:INFO:            pmdarima: 2.0.4
2024-07-08 20:43:45,030:INFO:              psutil: 5.9.0
2024-07-08 20:43:45,030:INFO:          markupsafe: 2.1.3
2024-07-08 20:43:45,030:INFO:             pickle5: Not installed
2024-07-08 20:43:45,030:INFO:         cloudpickle: 3.0.0
2024-07-08 20:43:45,030:INFO:         deprecation: 2.1.0
2024-07-08 20:43:45,030:INFO:              xxhash: 3.4.1
2024-07-08 20:43:45,030:INFO:           wurlitzer: 3.1.1
2024-07-08 20:43:45,030:INFO:PyCaret optional dependencies:
2024-07-08 20:43:45,030:INFO:                shap: Not installed
2024-07-08 20:43:45,030:INFO:           interpret: Not installed
2024-07-08 20:43:45,030:INFO:                umap: Not installed
2024-07-08 20:43:45,030:INFO:     ydata_profiling: Not installed
2024-07-08 20:43:45,030:INFO:  explainerdashboard: Not installed
2024-07-08 20:43:45,030:INFO:             autoviz: Not installed
2024-07-08 20:43:45,030:INFO:           fairlearn: Not installed
2024-07-08 20:43:45,030:INFO:          deepchecks: Not installed
2024-07-08 20:43:45,030:INFO:             xgboost: Not installed
2024-07-08 20:43:45,030:INFO:            catboost: Not installed
2024-07-08 20:43:45,031:INFO:              kmodes: Not installed
2024-07-08 20:43:45,031:INFO:             mlxtend: Not installed
2024-07-08 20:43:45,031:INFO:       statsforecast: Not installed
2024-07-08 20:43:45,031:INFO:        tune_sklearn: Not installed
2024-07-08 20:43:45,031:INFO:                 ray: Not installed
2024-07-08 20:43:45,031:INFO:            hyperopt: Not installed
2024-07-08 20:43:45,031:INFO:              optuna: Not installed
2024-07-08 20:43:45,031:INFO:               skopt: Not installed
2024-07-08 20:43:45,031:INFO:              mlflow: Not installed
2024-07-08 20:43:45,031:INFO:              gradio: Not installed
2024-07-08 20:43:45,031:INFO:             fastapi: Not installed
2024-07-08 20:43:45,031:INFO:             uvicorn: Not installed
2024-07-08 20:43:45,031:INFO:              m2cgen: Not installed
2024-07-08 20:43:45,031:INFO:           evidently: Not installed
2024-07-08 20:43:45,031:INFO:               fugue: Not installed
2024-07-08 20:43:45,031:INFO:           streamlit: Not installed
2024-07-08 20:43:45,032:INFO:             prophet: Not installed
2024-07-08 20:43:45,032:INFO:None
2024-07-08 20:43:45,032:INFO:Set up data.
2024-07-08 20:43:45,059:INFO:Set up folding strategy.
2024-07-08 20:43:45,059:INFO:Set up train/test split.
2024-07-08 20:43:45,072:INFO:Set up index.
2024-07-08 20:43:45,073:INFO:Assigning column types.
2024-07-08 20:43:45,082:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:43:45,142:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:43:45,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:43:45,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:43:45,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:43:45,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,246:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:43:45,289:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:43:45,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:43:45,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,375:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:43:45,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,502:INFO:Preparing preprocessing pipeline...
2024-07-08 20:43:45,503:INFO:Set up simple imputation.
2024-07-08 20:43:45,505:INFO:Set up encoding of ordinal features.
2024-07-08 20:43:45,507:INFO:Set up encoding of categorical features.
2024-07-08 20:43:45,508:INFO:Set up feature normalization.
2024-07-08 20:43:45,585:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:43:45,607:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Sex', 'Age', 'SibSp',
                                             'Parch', 'Fare', 'Title_dummies',
                                             'Embarked_dummies',
                                             'Pont_de_Cabin_dummies',
                                             'Side_dummies'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strateg...
                                    include=['Embarked', 'Title',
                                             'Pont_de_Cabin'],
                                    transformer=OneHotEncoder(cols=['Embarked',
                                                                    'Title',
                                                                    'Pont_de_Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:43:45,607:INFO:Creating final display dataframe.
2024-07-08 20:43:45,744:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 19)
4        Transformed data shape         (891, 35)
5   Transformed train set shape         (623, 35)
6    Transformed test set shape         (268, 35)
7               Ignore features                 4
8              Numeric features                10
9          Categorical features                 4
10     Rows with missing values             77.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              200e
2024-07-08 20:43:45,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:43:45,911:INFO:setup() successfully completed in 0.89s...............
2024-07-08 20:44:33,411:INFO:PyCaret ClassificationExperiment
2024-07-08 20:44:33,411:INFO:Logging name: clf-default-name
2024-07-08 20:44:33,411:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:44:33,411:INFO:version 3.3.2
2024-07-08 20:44:33,411:INFO:Initializing setup()
2024-07-08 20:44:33,411:INFO:self.USI: cf07
2024-07-08 20:44:33,411:INFO:self._variable_keys: {'X', 'data', 'y', 'exp_id', 'n_jobs_param', 'memory', 'y_test', 'idx', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'USI', 'logging_param', 'log_plots_param', 'fold_generator', 'is_multiclass', 'X_train', 'html_param', 'fold_groups_param', 'X_test', 'target_param', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'gpu_param'}
2024-07-08 20:44:33,411:INFO:Checking environment
2024-07-08 20:44:33,411:INFO:python_version: 3.11.5
2024-07-08 20:44:33,411:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:44:33,412:INFO:machine: x86_64
2024-07-08 20:44:33,412:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:44:33,412:INFO:Memory: svmem(total=17179869184, available=5765275648, percent=66.4, used=9074335744, free=50954240, active=5718609920, inactive=5704196096, wired=3355725824)
2024-07-08 20:44:33,412:INFO:Physical Core: 6
2024-07-08 20:44:33,412:INFO:Logical Core: 12
2024-07-08 20:44:33,412:INFO:Checking libraries
2024-07-08 20:44:33,412:INFO:System:
2024-07-08 20:44:33,412:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:44:33,412:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:44:33,412:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:44:33,412:INFO:PyCaret required dependencies:
2024-07-08 20:44:33,412:INFO:                 pip: 23.3.1
2024-07-08 20:44:33,412:INFO:          setuptools: 68.2.2
2024-07-08 20:44:33,412:INFO:             pycaret: 3.3.2
2024-07-08 20:44:33,412:INFO:             IPython: 8.20.0
2024-07-08 20:44:33,413:INFO:          ipywidgets: 8.0.4
2024-07-08 20:44:33,413:INFO:                tqdm: 4.65.0
2024-07-08 20:44:33,413:INFO:               numpy: 1.24.2
2024-07-08 20:44:33,413:INFO:              pandas: 2.1.4
2024-07-08 20:44:33,413:INFO:              jinja2: 3.1.3
2024-07-08 20:44:33,413:INFO:               scipy: 1.10.1
2024-07-08 20:44:33,413:INFO:              joblib: 1.1.0
2024-07-08 20:44:33,413:INFO:             sklearn: 1.4.0
2024-07-08 20:44:33,413:INFO:                pyod: 2.0.1
2024-07-08 20:44:33,413:INFO:            imblearn: 0.12.3
2024-07-08 20:44:33,413:INFO:   category_encoders: 2.6.3
2024-07-08 20:44:33,413:INFO:            lightgbm: 4.4.0
2024-07-08 20:44:33,413:INFO:               numba: 0.60.0
2024-07-08 20:44:33,413:INFO:            requests: 2.31.0
2024-07-08 20:44:33,413:INFO:          matplotlib: 3.8.2
2024-07-08 20:44:33,413:INFO:          scikitplot: 0.3.7
2024-07-08 20:44:33,413:INFO:         yellowbrick: 1.5
2024-07-08 20:44:33,413:INFO:              plotly: 5.19.0
2024-07-08 20:44:33,413:INFO:    plotly-resampler: Not installed
2024-07-08 20:44:33,413:INFO:             kaleido: 0.2.1
2024-07-08 20:44:33,413:INFO:           schemdraw: 0.15
2024-07-08 20:44:33,413:INFO:         statsmodels: 0.14.2
2024-07-08 20:44:33,413:INFO:              sktime: 0.26.0
2024-07-08 20:44:33,413:INFO:               tbats: 1.1.3
2024-07-08 20:44:33,413:INFO:            pmdarima: 2.0.4
2024-07-08 20:44:33,414:INFO:              psutil: 5.9.0
2024-07-08 20:44:33,414:INFO:          markupsafe: 2.1.3
2024-07-08 20:44:33,414:INFO:             pickle5: Not installed
2024-07-08 20:44:33,414:INFO:         cloudpickle: 3.0.0
2024-07-08 20:44:33,414:INFO:         deprecation: 2.1.0
2024-07-08 20:44:33,414:INFO:              xxhash: 3.4.1
2024-07-08 20:44:33,414:INFO:           wurlitzer: 3.1.1
2024-07-08 20:44:33,414:INFO:PyCaret optional dependencies:
2024-07-08 20:44:33,414:INFO:                shap: Not installed
2024-07-08 20:44:33,414:INFO:           interpret: Not installed
2024-07-08 20:44:33,414:INFO:                umap: Not installed
2024-07-08 20:44:33,414:INFO:     ydata_profiling: Not installed
2024-07-08 20:44:33,414:INFO:  explainerdashboard: Not installed
2024-07-08 20:44:33,414:INFO:             autoviz: Not installed
2024-07-08 20:44:33,414:INFO:           fairlearn: Not installed
2024-07-08 20:44:33,414:INFO:          deepchecks: Not installed
2024-07-08 20:44:33,414:INFO:             xgboost: Not installed
2024-07-08 20:44:33,414:INFO:            catboost: Not installed
2024-07-08 20:44:33,414:INFO:              kmodes: Not installed
2024-07-08 20:44:33,415:INFO:             mlxtend: Not installed
2024-07-08 20:44:33,415:INFO:       statsforecast: Not installed
2024-07-08 20:44:33,415:INFO:        tune_sklearn: Not installed
2024-07-08 20:44:33,415:INFO:                 ray: Not installed
2024-07-08 20:44:33,415:INFO:            hyperopt: Not installed
2024-07-08 20:44:33,415:INFO:              optuna: Not installed
2024-07-08 20:44:33,415:INFO:               skopt: Not installed
2024-07-08 20:44:33,415:INFO:              mlflow: Not installed
2024-07-08 20:44:33,415:INFO:              gradio: Not installed
2024-07-08 20:44:33,415:INFO:             fastapi: Not installed
2024-07-08 20:44:33,415:INFO:             uvicorn: Not installed
2024-07-08 20:44:33,415:INFO:              m2cgen: Not installed
2024-07-08 20:44:33,415:INFO:           evidently: Not installed
2024-07-08 20:44:33,415:INFO:               fugue: Not installed
2024-07-08 20:44:33,415:INFO:           streamlit: Not installed
2024-07-08 20:44:33,415:INFO:             prophet: Not installed
2024-07-08 20:44:33,415:INFO:None
2024-07-08 20:44:33,415:INFO:Set up data.
2024-07-08 20:44:33,427:INFO:Set up folding strategy.
2024-07-08 20:44:33,427:INFO:Set up train/test split.
2024-07-08 20:44:33,436:INFO:Set up index.
2024-07-08 20:44:33,436:INFO:Assigning column types.
2024-07-08 20:44:33,443:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:44:33,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:44:33,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:44:33,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:44:33,581:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:44:33,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,604:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:44:33,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:44:33,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,704:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:44:33,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,728:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:44:33,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:33,857:INFO:Preparing preprocessing pipeline...
2024-07-08 20:44:33,858:INFO:Set up simple imputation.
2024-07-08 20:44:33,860:INFO:Set up encoding of categorical features.
2024-07-08 20:44:33,860:INFO:Set up feature normalization.
2024-07-08 20:44:33,915:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:44:33,922:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Sex', 'Age', 'SibSp',
                                             'Parch', 'Fare', 'Title_dummies',
                                             'Embarked_dummies',
                                             'Pont_de_Cabin_dummies',
                                             'Side_dummies'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strateg...
                                    include=['Embarked', 'Title',
                                             'Pont_de_Cabin'],
                                    transformer=OneHotEncoder(cols=['Embarked',
                                                                    'Title',
                                                                    'Pont_de_Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:44:33,922:INFO:Creating final display dataframe.
2024-07-08 20:44:34,027:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 19)
4        Transformed data shape         (891, 34)
5   Transformed train set shape         (623, 34)
6    Transformed test set shape         (268, 34)
7               Ignore features                 5
8              Numeric features                10
9          Categorical features                 3
10     Rows with missing values             77.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              cf07
2024-07-08 20:44:34,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:34,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:34,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:34,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:44:34,186:INFO:setup() successfully completed in 0.78s...............
2024-07-08 20:47:53,406:INFO:PyCaret ClassificationExperiment
2024-07-08 20:47:53,407:INFO:Logging name: clf-default-name
2024-07-08 20:47:53,407:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:47:53,407:INFO:version 3.3.2
2024-07-08 20:47:53,407:INFO:Initializing setup()
2024-07-08 20:47:53,407:INFO:self.USI: 8c54
2024-07-08 20:47:53,407:INFO:self._variable_keys: {'X', 'data', 'y', 'exp_id', 'n_jobs_param', 'memory', 'y_test', 'idx', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'USI', 'logging_param', 'log_plots_param', 'fold_generator', 'is_multiclass', 'X_train', 'html_param', 'fold_groups_param', 'X_test', 'target_param', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'gpu_param'}
2024-07-08 20:47:53,407:INFO:Checking environment
2024-07-08 20:47:53,408:INFO:python_version: 3.11.5
2024-07-08 20:47:53,408:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:47:53,408:INFO:machine: x86_64
2024-07-08 20:47:53,408:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:47:53,408:INFO:Memory: svmem(total=17179869184, available=5738016768, percent=66.6, used=9045798912, free=10493952, active=5731676160, inactive=5724590080, wired=3314122752)
2024-07-08 20:47:53,408:INFO:Physical Core: 6
2024-07-08 20:47:53,408:INFO:Logical Core: 12
2024-07-08 20:47:53,408:INFO:Checking libraries
2024-07-08 20:47:53,408:INFO:System:
2024-07-08 20:47:53,408:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:47:53,408:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:47:53,408:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:47:53,408:INFO:PyCaret required dependencies:
2024-07-08 20:47:53,408:INFO:                 pip: 23.3.1
2024-07-08 20:47:53,408:INFO:          setuptools: 68.2.2
2024-07-08 20:47:53,408:INFO:             pycaret: 3.3.2
2024-07-08 20:47:53,408:INFO:             IPython: 8.20.0
2024-07-08 20:47:53,409:INFO:          ipywidgets: 8.0.4
2024-07-08 20:47:53,409:INFO:                tqdm: 4.65.0
2024-07-08 20:47:53,409:INFO:               numpy: 1.24.2
2024-07-08 20:47:53,409:INFO:              pandas: 2.1.4
2024-07-08 20:47:53,409:INFO:              jinja2: 3.1.3
2024-07-08 20:47:53,409:INFO:               scipy: 1.10.1
2024-07-08 20:47:53,409:INFO:              joblib: 1.1.0
2024-07-08 20:47:53,409:INFO:             sklearn: 1.4.0
2024-07-08 20:47:53,409:INFO:                pyod: 2.0.1
2024-07-08 20:47:53,409:INFO:            imblearn: 0.12.3
2024-07-08 20:47:53,409:INFO:   category_encoders: 2.6.3
2024-07-08 20:47:53,409:INFO:            lightgbm: 4.4.0
2024-07-08 20:47:53,409:INFO:               numba: 0.60.0
2024-07-08 20:47:53,409:INFO:            requests: 2.31.0
2024-07-08 20:47:53,409:INFO:          matplotlib: 3.8.2
2024-07-08 20:47:53,409:INFO:          scikitplot: 0.3.7
2024-07-08 20:47:53,409:INFO:         yellowbrick: 1.5
2024-07-08 20:47:53,409:INFO:              plotly: 5.19.0
2024-07-08 20:47:53,409:INFO:    plotly-resampler: Not installed
2024-07-08 20:47:53,409:INFO:             kaleido: 0.2.1
2024-07-08 20:47:53,409:INFO:           schemdraw: 0.15
2024-07-08 20:47:53,410:INFO:         statsmodels: 0.14.2
2024-07-08 20:47:53,410:INFO:              sktime: 0.26.0
2024-07-08 20:47:53,410:INFO:               tbats: 1.1.3
2024-07-08 20:47:53,410:INFO:            pmdarima: 2.0.4
2024-07-08 20:47:53,410:INFO:              psutil: 5.9.0
2024-07-08 20:47:53,410:INFO:          markupsafe: 2.1.3
2024-07-08 20:47:53,410:INFO:             pickle5: Not installed
2024-07-08 20:47:53,410:INFO:         cloudpickle: 3.0.0
2024-07-08 20:47:53,410:INFO:         deprecation: 2.1.0
2024-07-08 20:47:53,410:INFO:              xxhash: 3.4.1
2024-07-08 20:47:53,410:INFO:           wurlitzer: 3.1.1
2024-07-08 20:47:53,410:INFO:PyCaret optional dependencies:
2024-07-08 20:47:53,410:INFO:                shap: Not installed
2024-07-08 20:47:53,410:INFO:           interpret: Not installed
2024-07-08 20:47:53,410:INFO:                umap: Not installed
2024-07-08 20:47:53,410:INFO:     ydata_profiling: Not installed
2024-07-08 20:47:53,410:INFO:  explainerdashboard: Not installed
2024-07-08 20:47:53,410:INFO:             autoviz: Not installed
2024-07-08 20:47:53,410:INFO:           fairlearn: Not installed
2024-07-08 20:47:53,410:INFO:          deepchecks: Not installed
2024-07-08 20:47:53,410:INFO:             xgboost: Not installed
2024-07-08 20:47:53,410:INFO:            catboost: Not installed
2024-07-08 20:47:53,410:INFO:              kmodes: Not installed
2024-07-08 20:47:53,410:INFO:             mlxtend: Not installed
2024-07-08 20:47:53,410:INFO:       statsforecast: Not installed
2024-07-08 20:47:53,411:INFO:        tune_sklearn: Not installed
2024-07-08 20:47:53,411:INFO:                 ray: Not installed
2024-07-08 20:47:53,411:INFO:            hyperopt: Not installed
2024-07-08 20:47:53,411:INFO:              optuna: Not installed
2024-07-08 20:47:53,411:INFO:               skopt: Not installed
2024-07-08 20:47:53,411:INFO:              mlflow: Not installed
2024-07-08 20:47:53,411:INFO:              gradio: Not installed
2024-07-08 20:47:53,411:INFO:             fastapi: Not installed
2024-07-08 20:47:53,411:INFO:             uvicorn: Not installed
2024-07-08 20:47:53,411:INFO:              m2cgen: Not installed
2024-07-08 20:47:53,411:INFO:           evidently: Not installed
2024-07-08 20:47:53,411:INFO:               fugue: Not installed
2024-07-08 20:47:53,411:INFO:           streamlit: Not installed
2024-07-08 20:47:53,411:INFO:             prophet: Not installed
2024-07-08 20:47:53,411:INFO:None
2024-07-08 20:47:53,411:INFO:Set up data.
2024-07-08 20:47:53,422:INFO:Set up folding strategy.
2024-07-08 20:47:53,423:INFO:Set up train/test split.
2024-07-08 20:47:53,433:INFO:Set up index.
2024-07-08 20:47:53,433:INFO:Assigning column types.
2024-07-08 20:47:53,437:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:47:53,492:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:47:53,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:47:53,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,561:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:47:53,562:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:47:53,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,585:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:47:53,623:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:47:53,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,688:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:47:53,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,714:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:47:53,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,861:INFO:Preparing preprocessing pipeline...
2024-07-08 20:47:53,862:INFO:Set up simple imputation.
2024-07-08 20:47:53,862:INFO:Set up feature normalization.
2024-07-08 20:47:53,870:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:47:53,875:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:47:53,875:INFO:Creating final display dataframe.
2024-07-08 20:47:53,903:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 19)
4        Transformed data shape          (891, 5)
5   Transformed train set shape          (623, 5)
6    Transformed test set shape          (268, 5)
7               Ignore features                14
8              Numeric features                 4
9      Rows with missing values             77.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              8c54
2024-07-08 20:47:53,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:53,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:54,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:54,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:47:54,063:INFO:setup() successfully completed in 0.66s...............
2024-07-08 20:48:39,441:INFO:PyCaret ClassificationExperiment
2024-07-08 20:48:39,442:INFO:Logging name: clf-default-name
2024-07-08 20:48:39,443:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:48:39,443:INFO:version 3.3.2
2024-07-08 20:48:39,443:INFO:Initializing setup()
2024-07-08 20:48:39,443:INFO:self.USI: 3dc5
2024-07-08 20:48:39,443:INFO:self._variable_keys: {'X', 'data', 'y', 'exp_id', 'n_jobs_param', 'memory', 'y_test', 'idx', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'USI', 'logging_param', 'log_plots_param', 'fold_generator', 'is_multiclass', 'X_train', 'html_param', 'fold_groups_param', 'X_test', 'target_param', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'gpu_param'}
2024-07-08 20:48:39,443:INFO:Checking environment
2024-07-08 20:48:39,443:INFO:python_version: 3.11.5
2024-07-08 20:48:39,443:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:48:39,443:INFO:machine: x86_64
2024-07-08 20:48:39,443:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:48:39,443:INFO:Memory: svmem(total=17179869184, available=5634424832, percent=67.2, used=9080291328, free=32043008, active=5605560320, inactive=5601095680, wired=3474731008)
2024-07-08 20:48:39,444:INFO:Physical Core: 6
2024-07-08 20:48:39,444:INFO:Logical Core: 12
2024-07-08 20:48:39,444:INFO:Checking libraries
2024-07-08 20:48:39,444:INFO:System:
2024-07-08 20:48:39,444:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:48:39,444:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:48:39,444:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:48:39,444:INFO:PyCaret required dependencies:
2024-07-08 20:48:39,444:INFO:                 pip: 23.3.1
2024-07-08 20:48:39,444:INFO:          setuptools: 68.2.2
2024-07-08 20:48:39,444:INFO:             pycaret: 3.3.2
2024-07-08 20:48:39,444:INFO:             IPython: 8.20.0
2024-07-08 20:48:39,444:INFO:          ipywidgets: 8.0.4
2024-07-08 20:48:39,444:INFO:                tqdm: 4.65.0
2024-07-08 20:48:39,444:INFO:               numpy: 1.24.2
2024-07-08 20:48:39,444:INFO:              pandas: 2.1.4
2024-07-08 20:48:39,444:INFO:              jinja2: 3.1.3
2024-07-08 20:48:39,444:INFO:               scipy: 1.10.1
2024-07-08 20:48:39,444:INFO:              joblib: 1.1.0
2024-07-08 20:48:39,445:INFO:             sklearn: 1.4.0
2024-07-08 20:48:39,445:INFO:                pyod: 2.0.1
2024-07-08 20:48:39,445:INFO:            imblearn: 0.12.3
2024-07-08 20:48:39,445:INFO:   category_encoders: 2.6.3
2024-07-08 20:48:39,445:INFO:            lightgbm: 4.4.0
2024-07-08 20:48:39,445:INFO:               numba: 0.60.0
2024-07-08 20:48:39,445:INFO:            requests: 2.31.0
2024-07-08 20:48:39,445:INFO:          matplotlib: 3.8.2
2024-07-08 20:48:39,445:INFO:          scikitplot: 0.3.7
2024-07-08 20:48:39,445:INFO:         yellowbrick: 1.5
2024-07-08 20:48:39,445:INFO:              plotly: 5.19.0
2024-07-08 20:48:39,445:INFO:    plotly-resampler: Not installed
2024-07-08 20:48:39,445:INFO:             kaleido: 0.2.1
2024-07-08 20:48:39,445:INFO:           schemdraw: 0.15
2024-07-08 20:48:39,445:INFO:         statsmodels: 0.14.2
2024-07-08 20:48:39,445:INFO:              sktime: 0.26.0
2024-07-08 20:48:39,445:INFO:               tbats: 1.1.3
2024-07-08 20:48:39,445:INFO:            pmdarima: 2.0.4
2024-07-08 20:48:39,445:INFO:              psutil: 5.9.0
2024-07-08 20:48:39,445:INFO:          markupsafe: 2.1.3
2024-07-08 20:48:39,445:INFO:             pickle5: Not installed
2024-07-08 20:48:39,445:INFO:         cloudpickle: 3.0.0
2024-07-08 20:48:39,445:INFO:         deprecation: 2.1.0
2024-07-08 20:48:39,446:INFO:              xxhash: 3.4.1
2024-07-08 20:48:39,446:INFO:           wurlitzer: 3.1.1
2024-07-08 20:48:39,446:INFO:PyCaret optional dependencies:
2024-07-08 20:48:39,446:INFO:                shap: Not installed
2024-07-08 20:48:39,446:INFO:           interpret: Not installed
2024-07-08 20:48:39,446:INFO:                umap: Not installed
2024-07-08 20:48:39,446:INFO:     ydata_profiling: Not installed
2024-07-08 20:48:39,446:INFO:  explainerdashboard: Not installed
2024-07-08 20:48:39,446:INFO:             autoviz: Not installed
2024-07-08 20:48:39,446:INFO:           fairlearn: Not installed
2024-07-08 20:48:39,446:INFO:          deepchecks: Not installed
2024-07-08 20:48:39,446:INFO:             xgboost: Not installed
2024-07-08 20:48:39,446:INFO:            catboost: Not installed
2024-07-08 20:48:39,446:INFO:              kmodes: Not installed
2024-07-08 20:48:39,446:INFO:             mlxtend: Not installed
2024-07-08 20:48:39,446:INFO:       statsforecast: Not installed
2024-07-08 20:48:39,446:INFO:        tune_sklearn: Not installed
2024-07-08 20:48:39,446:INFO:                 ray: Not installed
2024-07-08 20:48:39,446:INFO:            hyperopt: Not installed
2024-07-08 20:48:39,446:INFO:              optuna: Not installed
2024-07-08 20:48:39,446:INFO:               skopt: Not installed
2024-07-08 20:48:39,446:INFO:              mlflow: Not installed
2024-07-08 20:48:39,446:INFO:              gradio: Not installed
2024-07-08 20:48:39,447:INFO:             fastapi: Not installed
2024-07-08 20:48:39,447:INFO:             uvicorn: Not installed
2024-07-08 20:48:39,447:INFO:              m2cgen: Not installed
2024-07-08 20:48:39,447:INFO:           evidently: Not installed
2024-07-08 20:48:39,447:INFO:               fugue: Not installed
2024-07-08 20:48:39,447:INFO:           streamlit: Not installed
2024-07-08 20:48:39,447:INFO:             prophet: Not installed
2024-07-08 20:48:39,447:INFO:None
2024-07-08 20:48:39,447:INFO:Set up data.
2024-07-08 20:48:39,458:INFO:Set up folding strategy.
2024-07-08 20:48:39,458:INFO:Set up train/test split.
2024-07-08 20:48:39,469:INFO:Set up index.
2024-07-08 20:48:39,469:INFO:Assigning column types.
2024-07-08 20:48:39,474:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:48:39,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:48:39,529:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:39,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,600:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:48:39,601:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:39,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,624:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:48:39,661:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:39,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:39,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,746:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:48:39,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,869:INFO:Preparing preprocessing pipeline...
2024-07-08 20:48:39,870:INFO:Set up simple imputation.
2024-07-08 20:48:39,870:INFO:Set up feature normalization.
2024-07-08 20:48:39,877:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:48:39,880:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:48:39,881:INFO:Creating final display dataframe.
2024-07-08 20:48:39,903:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 19)
4        Transformed data shape          (891, 5)
5   Transformed train set shape          (623, 5)
6    Transformed test set shape          (268, 5)
7               Ignore features                14
8              Numeric features                 4
9      Rows with missing values             77.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              3dc5
2024-07-08 20:48:39,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:39,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:40,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:40,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:40,060:INFO:setup() successfully completed in 0.62s...............
2024-07-08 20:48:54,093:INFO:PyCaret ClassificationExperiment
2024-07-08 20:48:54,094:INFO:Logging name: clf-default-name
2024-07-08 20:48:54,094:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:48:54,094:INFO:version 3.3.2
2024-07-08 20:48:54,095:INFO:Initializing setup()
2024-07-08 20:48:54,095:INFO:self.USI: 2f13
2024-07-08 20:48:54,095:INFO:self._variable_keys: {'X', 'data', 'y', 'exp_id', 'n_jobs_param', 'memory', 'y_test', 'idx', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'USI', 'logging_param', 'log_plots_param', 'fold_generator', 'is_multiclass', 'X_train', 'html_param', 'fold_groups_param', 'X_test', 'target_param', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'gpu_param'}
2024-07-08 20:48:54,095:INFO:Checking environment
2024-07-08 20:48:54,095:INFO:python_version: 3.11.5
2024-07-08 20:48:54,095:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:48:54,095:INFO:machine: x86_64
2024-07-08 20:48:54,095:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:48:54,095:INFO:Memory: svmem(total=17179869184, available=5622558720, percent=67.3, used=9093099520, free=9129984, active=5618839552, inactive=5610328064, wired=3474259968)
2024-07-08 20:48:54,095:INFO:Physical Core: 6
2024-07-08 20:48:54,095:INFO:Logical Core: 12
2024-07-08 20:48:54,095:INFO:Checking libraries
2024-07-08 20:48:54,095:INFO:System:
2024-07-08 20:48:54,095:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:48:54,096:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:48:54,096:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:48:54,096:INFO:PyCaret required dependencies:
2024-07-08 20:48:54,096:INFO:                 pip: 23.3.1
2024-07-08 20:48:54,096:INFO:          setuptools: 68.2.2
2024-07-08 20:48:54,096:INFO:             pycaret: 3.3.2
2024-07-08 20:48:54,096:INFO:             IPython: 8.20.0
2024-07-08 20:48:54,096:INFO:          ipywidgets: 8.0.4
2024-07-08 20:48:54,096:INFO:                tqdm: 4.65.0
2024-07-08 20:48:54,096:INFO:               numpy: 1.24.2
2024-07-08 20:48:54,096:INFO:              pandas: 2.1.4
2024-07-08 20:48:54,096:INFO:              jinja2: 3.1.3
2024-07-08 20:48:54,096:INFO:               scipy: 1.10.1
2024-07-08 20:48:54,096:INFO:              joblib: 1.1.0
2024-07-08 20:48:54,096:INFO:             sklearn: 1.4.0
2024-07-08 20:48:54,096:INFO:                pyod: 2.0.1
2024-07-08 20:48:54,096:INFO:            imblearn: 0.12.3
2024-07-08 20:48:54,096:INFO:   category_encoders: 2.6.3
2024-07-08 20:48:54,096:INFO:            lightgbm: 4.4.0
2024-07-08 20:48:54,096:INFO:               numba: 0.60.0
2024-07-08 20:48:54,096:INFO:            requests: 2.31.0
2024-07-08 20:48:54,096:INFO:          matplotlib: 3.8.2
2024-07-08 20:48:54,096:INFO:          scikitplot: 0.3.7
2024-07-08 20:48:54,096:INFO:         yellowbrick: 1.5
2024-07-08 20:48:54,096:INFO:              plotly: 5.19.0
2024-07-08 20:48:54,097:INFO:    plotly-resampler: Not installed
2024-07-08 20:48:54,097:INFO:             kaleido: 0.2.1
2024-07-08 20:48:54,097:INFO:           schemdraw: 0.15
2024-07-08 20:48:54,097:INFO:         statsmodels: 0.14.2
2024-07-08 20:48:54,097:INFO:              sktime: 0.26.0
2024-07-08 20:48:54,097:INFO:               tbats: 1.1.3
2024-07-08 20:48:54,097:INFO:            pmdarima: 2.0.4
2024-07-08 20:48:54,097:INFO:              psutil: 5.9.0
2024-07-08 20:48:54,097:INFO:          markupsafe: 2.1.3
2024-07-08 20:48:54,097:INFO:             pickle5: Not installed
2024-07-08 20:48:54,097:INFO:         cloudpickle: 3.0.0
2024-07-08 20:48:54,097:INFO:         deprecation: 2.1.0
2024-07-08 20:48:54,097:INFO:              xxhash: 3.4.1
2024-07-08 20:48:54,097:INFO:           wurlitzer: 3.1.1
2024-07-08 20:48:54,097:INFO:PyCaret optional dependencies:
2024-07-08 20:48:54,097:INFO:                shap: Not installed
2024-07-08 20:48:54,097:INFO:           interpret: Not installed
2024-07-08 20:48:54,097:INFO:                umap: Not installed
2024-07-08 20:48:54,097:INFO:     ydata_profiling: Not installed
2024-07-08 20:48:54,097:INFO:  explainerdashboard: Not installed
2024-07-08 20:48:54,097:INFO:             autoviz: Not installed
2024-07-08 20:48:54,097:INFO:           fairlearn: Not installed
2024-07-08 20:48:54,097:INFO:          deepchecks: Not installed
2024-07-08 20:48:54,097:INFO:             xgboost: Not installed
2024-07-08 20:48:54,097:INFO:            catboost: Not installed
2024-07-08 20:48:54,097:INFO:              kmodes: Not installed
2024-07-08 20:48:54,098:INFO:             mlxtend: Not installed
2024-07-08 20:48:54,098:INFO:       statsforecast: Not installed
2024-07-08 20:48:54,098:INFO:        tune_sklearn: Not installed
2024-07-08 20:48:54,098:INFO:                 ray: Not installed
2024-07-08 20:48:54,098:INFO:            hyperopt: Not installed
2024-07-08 20:48:54,098:INFO:              optuna: Not installed
2024-07-08 20:48:54,098:INFO:               skopt: Not installed
2024-07-08 20:48:54,098:INFO:              mlflow: Not installed
2024-07-08 20:48:54,098:INFO:              gradio: Not installed
2024-07-08 20:48:54,098:INFO:             fastapi: Not installed
2024-07-08 20:48:54,098:INFO:             uvicorn: Not installed
2024-07-08 20:48:54,098:INFO:              m2cgen: Not installed
2024-07-08 20:48:54,098:INFO:           evidently: Not installed
2024-07-08 20:48:54,098:INFO:               fugue: Not installed
2024-07-08 20:48:54,098:INFO:           streamlit: Not installed
2024-07-08 20:48:54,098:INFO:             prophet: Not installed
2024-07-08 20:48:54,098:INFO:None
2024-07-08 20:48:54,098:INFO:Set up data.
2024-07-08 20:48:54,110:INFO:Set up folding strategy.
2024-07-08 20:48:54,111:INFO:Set up train/test split.
2024-07-08 20:48:54,121:INFO:Set up index.
2024-07-08 20:48:54,122:INFO:Assigning column types.
2024-07-08 20:48:54,126:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:48:54,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:48:54,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:54,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,260:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:48:54,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:54,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,287:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:48:54,326:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:54,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,390:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:48:54,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,413:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:48:54,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,539:INFO:Preparing preprocessing pipeline...
2024-07-08 20:48:54,540:INFO:Set up simple imputation.
2024-07-08 20:48:54,540:INFO:Set up feature normalization.
2024-07-08 20:48:54,547:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:48:54,551:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:48:54,551:INFO:Creating final display dataframe.
2024-07-08 20:48:54,574:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 19)
4        Transformed data shape          (891, 5)
5   Transformed train set shape          (623, 5)
6    Transformed test set shape          (268, 5)
7               Ignore features                14
8              Numeric features                 4
9      Rows with missing values             77.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              2f13
2024-07-08 20:48:54,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:48:54,745:INFO:setup() successfully completed in 0.65s...............
2024-07-08 20:48:54,751:INFO:Initializing compare_models()
2024-07-08 20:48:54,751:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-08 20:48:54,751:INFO:Checking exceptions
2024-07-08 20:48:54,756:INFO:Preparing display monitor
2024-07-08 20:48:54,832:INFO:Initializing Logistic Regression
2024-07-08 20:48:54,832:INFO:Total runtime is 6.016095479329427e-06 minutes
2024-07-08 20:48:54,836:INFO:SubProcess create_model() called ==================================
2024-07-08 20:48:54,836:INFO:Initializing create_model()
2024-07-08 20:48:54,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:48:54,837:INFO:Checking exceptions
2024-07-08 20:48:54,837:INFO:Importing libraries
2024-07-08 20:48:54,837:INFO:Copying training dataset
2024-07-08 20:48:54,844:INFO:Defining folds
2024-07-08 20:48:54,844:INFO:Declaring metric variables
2024-07-08 20:48:54,847:INFO:Importing untrained model
2024-07-08 20:48:54,850:INFO:Logistic Regression Imported successfully
2024-07-08 20:48:54,857:INFO:Starting cross validation
2024-07-08 20:48:54,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:00,496:INFO:Calculating mean and std
2024-07-08 20:49:00,502:INFO:Creating metrics dataframe
2024-07-08 20:49:00,542:INFO:Uploading results into container
2024-07-08 20:49:00,545:INFO:Uploading model into container now
2024-07-08 20:49:00,547:INFO:_master_model_container: 1
2024-07-08 20:49:00,547:INFO:_display_container: 2
2024-07-08 20:49:00,549:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-08 20:49:00,549:INFO:create_model() successfully completed......................................
2024-07-08 20:49:01,029:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:01,029:INFO:Creating metrics dataframe
2024-07-08 20:49:01,041:INFO:Initializing K Neighbors Classifier
2024-07-08 20:49:01,042:INFO:Total runtime is 0.10349051952362061 minutes
2024-07-08 20:49:01,047:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:01,047:INFO:Initializing create_model()
2024-07-08 20:49:01,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:01,047:INFO:Checking exceptions
2024-07-08 20:49:01,047:INFO:Importing libraries
2024-07-08 20:49:01,048:INFO:Copying training dataset
2024-07-08 20:49:01,055:INFO:Defining folds
2024-07-08 20:49:01,056:INFO:Declaring metric variables
2024-07-08 20:49:01,059:INFO:Importing untrained model
2024-07-08 20:49:01,065:INFO:K Neighbors Classifier Imported successfully
2024-07-08 20:49:01,073:INFO:Starting cross validation
2024-07-08 20:49:01,074:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:03,339:INFO:Calculating mean and std
2024-07-08 20:49:03,340:INFO:Creating metrics dataframe
2024-07-08 20:49:03,343:INFO:Uploading results into container
2024-07-08 20:49:03,343:INFO:Uploading model into container now
2024-07-08 20:49:03,344:INFO:_master_model_container: 2
2024-07-08 20:49:03,344:INFO:_display_container: 2
2024-07-08 20:49:03,344:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-08 20:49:03,344:INFO:create_model() successfully completed......................................
2024-07-08 20:49:03,456:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:03,456:INFO:Creating metrics dataframe
2024-07-08 20:49:03,467:INFO:Initializing Naive Bayes
2024-07-08 20:49:03,467:INFO:Total runtime is 0.1439216176668803 minutes
2024-07-08 20:49:03,471:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:03,471:INFO:Initializing create_model()
2024-07-08 20:49:03,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:03,472:INFO:Checking exceptions
2024-07-08 20:49:03,472:INFO:Importing libraries
2024-07-08 20:49:03,472:INFO:Copying training dataset
2024-07-08 20:49:03,478:INFO:Defining folds
2024-07-08 20:49:03,479:INFO:Declaring metric variables
2024-07-08 20:49:03,482:INFO:Importing untrained model
2024-07-08 20:49:03,487:INFO:Naive Bayes Imported successfully
2024-07-08 20:49:03,496:INFO:Starting cross validation
2024-07-08 20:49:03,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:03,593:INFO:Calculating mean and std
2024-07-08 20:49:03,594:INFO:Creating metrics dataframe
2024-07-08 20:49:03,596:INFO:Uploading results into container
2024-07-08 20:49:03,597:INFO:Uploading model into container now
2024-07-08 20:49:03,597:INFO:_master_model_container: 3
2024-07-08 20:49:03,598:INFO:_display_container: 2
2024-07-08 20:49:03,598:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-08 20:49:03,598:INFO:create_model() successfully completed......................................
2024-07-08 20:49:03,706:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:03,706:INFO:Creating metrics dataframe
2024-07-08 20:49:03,716:INFO:Initializing Decision Tree Classifier
2024-07-08 20:49:03,716:INFO:Total runtime is 0.1480615019798279 minutes
2024-07-08 20:49:03,721:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:03,722:INFO:Initializing create_model()
2024-07-08 20:49:03,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:03,722:INFO:Checking exceptions
2024-07-08 20:49:03,722:INFO:Importing libraries
2024-07-08 20:49:03,722:INFO:Copying training dataset
2024-07-08 20:49:03,727:INFO:Defining folds
2024-07-08 20:49:03,728:INFO:Declaring metric variables
2024-07-08 20:49:03,732:INFO:Importing untrained model
2024-07-08 20:49:03,738:INFO:Decision Tree Classifier Imported successfully
2024-07-08 20:49:03,746:INFO:Starting cross validation
2024-07-08 20:49:03,747:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:03,854:INFO:Calculating mean and std
2024-07-08 20:49:03,856:INFO:Creating metrics dataframe
2024-07-08 20:49:03,858:INFO:Uploading results into container
2024-07-08 20:49:03,859:INFO:Uploading model into container now
2024-07-08 20:49:03,859:INFO:_master_model_container: 4
2024-07-08 20:49:03,859:INFO:_display_container: 2
2024-07-08 20:49:03,860:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-07-08 20:49:03,860:INFO:create_model() successfully completed......................................
2024-07-08 20:49:03,970:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:03,970:INFO:Creating metrics dataframe
2024-07-08 20:49:03,980:INFO:Initializing SVM - Linear Kernel
2024-07-08 20:49:03,980:INFO:Total runtime is 0.1524734973907471 minutes
2024-07-08 20:49:03,985:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:03,986:INFO:Initializing create_model()
2024-07-08 20:49:03,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:03,986:INFO:Checking exceptions
2024-07-08 20:49:03,986:INFO:Importing libraries
2024-07-08 20:49:03,986:INFO:Copying training dataset
2024-07-08 20:49:03,991:INFO:Defining folds
2024-07-08 20:49:03,991:INFO:Declaring metric variables
2024-07-08 20:49:03,996:INFO:Importing untrained model
2024-07-08 20:49:04,000:INFO:SVM - Linear Kernel Imported successfully
2024-07-08 20:49:04,009:INFO:Starting cross validation
2024-07-08 20:49:04,010:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:04,111:INFO:Calculating mean and std
2024-07-08 20:49:04,112:INFO:Creating metrics dataframe
2024-07-08 20:49:04,114:INFO:Uploading results into container
2024-07-08 20:49:04,115:INFO:Uploading model into container now
2024-07-08 20:49:04,115:INFO:_master_model_container: 5
2024-07-08 20:49:04,115:INFO:_display_container: 2
2024-07-08 20:49:04,116:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-08 20:49:04,116:INFO:create_model() successfully completed......................................
2024-07-08 20:49:04,225:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:04,225:INFO:Creating metrics dataframe
2024-07-08 20:49:04,235:INFO:Initializing Ridge Classifier
2024-07-08 20:49:04,235:INFO:Total runtime is 0.15672040383021038 minutes
2024-07-08 20:49:04,241:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:04,241:INFO:Initializing create_model()
2024-07-08 20:49:04,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:04,242:INFO:Checking exceptions
2024-07-08 20:49:04,242:INFO:Importing libraries
2024-07-08 20:49:04,242:INFO:Copying training dataset
2024-07-08 20:49:04,248:INFO:Defining folds
2024-07-08 20:49:04,248:INFO:Declaring metric variables
2024-07-08 20:49:04,251:INFO:Importing untrained model
2024-07-08 20:49:04,259:INFO:Ridge Classifier Imported successfully
2024-07-08 20:49:04,266:INFO:Starting cross validation
2024-07-08 20:49:04,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:04,379:INFO:Calculating mean and std
2024-07-08 20:49:04,380:INFO:Creating metrics dataframe
2024-07-08 20:49:04,382:INFO:Uploading results into container
2024-07-08 20:49:04,383:INFO:Uploading model into container now
2024-07-08 20:49:04,383:INFO:_master_model_container: 6
2024-07-08 20:49:04,383:INFO:_display_container: 2
2024-07-08 20:49:04,384:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-07-08 20:49:04,384:INFO:create_model() successfully completed......................................
2024-07-08 20:49:04,481:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:04,482:INFO:Creating metrics dataframe
2024-07-08 20:49:04,491:INFO:Initializing Random Forest Classifier
2024-07-08 20:49:04,491:INFO:Total runtime is 0.16098304986953738 minutes
2024-07-08 20:49:04,494:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:04,494:INFO:Initializing create_model()
2024-07-08 20:49:04,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:04,495:INFO:Checking exceptions
2024-07-08 20:49:04,495:INFO:Importing libraries
2024-07-08 20:49:04,495:INFO:Copying training dataset
2024-07-08 20:49:04,499:INFO:Defining folds
2024-07-08 20:49:04,500:INFO:Declaring metric variables
2024-07-08 20:49:04,504:INFO:Importing untrained model
2024-07-08 20:49:04,508:INFO:Random Forest Classifier Imported successfully
2024-07-08 20:49:04,515:INFO:Starting cross validation
2024-07-08 20:49:04,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:05,062:INFO:Calculating mean and std
2024-07-08 20:49:05,063:INFO:Creating metrics dataframe
2024-07-08 20:49:05,064:INFO:Uploading results into container
2024-07-08 20:49:05,065:INFO:Uploading model into container now
2024-07-08 20:49:05,066:INFO:_master_model_container: 7
2024-07-08 20:49:05,066:INFO:_display_container: 2
2024-07-08 20:49:05,066:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-07-08 20:49:05,066:INFO:create_model() successfully completed......................................
2024-07-08 20:49:05,164:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:05,165:INFO:Creating metrics dataframe
2024-07-08 20:49:05,176:INFO:Initializing Quadratic Discriminant Analysis
2024-07-08 20:49:05,176:INFO:Total runtime is 0.1724040508270264 minutes
2024-07-08 20:49:05,180:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:05,180:INFO:Initializing create_model()
2024-07-08 20:49:05,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:05,180:INFO:Checking exceptions
2024-07-08 20:49:05,181:INFO:Importing libraries
2024-07-08 20:49:05,181:INFO:Copying training dataset
2024-07-08 20:49:05,186:INFO:Defining folds
2024-07-08 20:49:05,186:INFO:Declaring metric variables
2024-07-08 20:49:05,189:INFO:Importing untrained model
2024-07-08 20:49:05,192:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-08 20:49:05,200:INFO:Starting cross validation
2024-07-08 20:49:05,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:05,293:INFO:Calculating mean and std
2024-07-08 20:49:05,294:INFO:Creating metrics dataframe
2024-07-08 20:49:05,296:INFO:Uploading results into container
2024-07-08 20:49:05,296:INFO:Uploading model into container now
2024-07-08 20:49:05,296:INFO:_master_model_container: 8
2024-07-08 20:49:05,297:INFO:_display_container: 2
2024-07-08 20:49:05,297:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-08 20:49:05,297:INFO:create_model() successfully completed......................................
2024-07-08 20:49:05,388:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:05,388:INFO:Creating metrics dataframe
2024-07-08 20:49:05,397:INFO:Initializing Ada Boost Classifier
2024-07-08 20:49:05,397:INFO:Total runtime is 0.17608833312988284 minutes
2024-07-08 20:49:05,401:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:05,401:INFO:Initializing create_model()
2024-07-08 20:49:05,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:05,401:INFO:Checking exceptions
2024-07-08 20:49:05,401:INFO:Importing libraries
2024-07-08 20:49:05,401:INFO:Copying training dataset
2024-07-08 20:49:05,407:INFO:Defining folds
2024-07-08 20:49:05,407:INFO:Declaring metric variables
2024-07-08 20:49:05,411:INFO:Importing untrained model
2024-07-08 20:49:05,414:INFO:Ada Boost Classifier Imported successfully
2024-07-08 20:49:05,420:INFO:Starting cross validation
2024-07-08 20:49:05,421:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:05,452:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,456:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,458:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,466:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,470:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,471:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,471:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,478:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,479:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,483:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:49:05,717:INFO:Calculating mean and std
2024-07-08 20:49:05,718:INFO:Creating metrics dataframe
2024-07-08 20:49:05,720:INFO:Uploading results into container
2024-07-08 20:49:05,721:INFO:Uploading model into container now
2024-07-08 20:49:05,722:INFO:_master_model_container: 9
2024-07-08 20:49:05,722:INFO:_display_container: 2
2024-07-08 20:49:05,723:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-07-08 20:49:05,723:INFO:create_model() successfully completed......................................
2024-07-08 20:49:05,818:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:05,819:INFO:Creating metrics dataframe
2024-07-08 20:49:05,828:INFO:Initializing Gradient Boosting Classifier
2024-07-08 20:49:05,828:INFO:Total runtime is 0.18327084779739383 minutes
2024-07-08 20:49:05,833:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:05,833:INFO:Initializing create_model()
2024-07-08 20:49:05,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:05,833:INFO:Checking exceptions
2024-07-08 20:49:05,834:INFO:Importing libraries
2024-07-08 20:49:05,834:INFO:Copying training dataset
2024-07-08 20:49:05,839:INFO:Defining folds
2024-07-08 20:49:05,839:INFO:Declaring metric variables
2024-07-08 20:49:05,842:INFO:Importing untrained model
2024-07-08 20:49:05,846:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 20:49:05,852:INFO:Starting cross validation
2024-07-08 20:49:05,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:06,146:INFO:Calculating mean and std
2024-07-08 20:49:06,147:INFO:Creating metrics dataframe
2024-07-08 20:49:06,149:INFO:Uploading results into container
2024-07-08 20:49:06,150:INFO:Uploading model into container now
2024-07-08 20:49:06,150:INFO:_master_model_container: 10
2024-07-08 20:49:06,151:INFO:_display_container: 2
2024-07-08 20:49:06,151:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:49:06,151:INFO:create_model() successfully completed......................................
2024-07-08 20:49:06,244:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:06,244:INFO:Creating metrics dataframe
2024-07-08 20:49:06,256:INFO:Initializing Linear Discriminant Analysis
2024-07-08 20:49:06,256:INFO:Total runtime is 0.19039948383967084 minutes
2024-07-08 20:49:06,259:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:06,260:INFO:Initializing create_model()
2024-07-08 20:49:06,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:06,260:INFO:Checking exceptions
2024-07-08 20:49:06,260:INFO:Importing libraries
2024-07-08 20:49:06,260:INFO:Copying training dataset
2024-07-08 20:49:06,266:INFO:Defining folds
2024-07-08 20:49:06,266:INFO:Declaring metric variables
2024-07-08 20:49:06,270:INFO:Importing untrained model
2024-07-08 20:49:06,274:INFO:Linear Discriminant Analysis Imported successfully
2024-07-08 20:49:06,281:INFO:Starting cross validation
2024-07-08 20:49:06,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:06,390:INFO:Calculating mean and std
2024-07-08 20:49:06,391:INFO:Creating metrics dataframe
2024-07-08 20:49:06,393:INFO:Uploading results into container
2024-07-08 20:49:06,393:INFO:Uploading model into container now
2024-07-08 20:49:06,394:INFO:_master_model_container: 11
2024-07-08 20:49:06,394:INFO:_display_container: 2
2024-07-08 20:49:06,394:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-08 20:49:06,394:INFO:create_model() successfully completed......................................
2024-07-08 20:49:06,490:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:06,490:INFO:Creating metrics dataframe
2024-07-08 20:49:06,501:INFO:Initializing Extra Trees Classifier
2024-07-08 20:49:06,501:INFO:Total runtime is 0.194484547773997 minutes
2024-07-08 20:49:06,505:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:06,505:INFO:Initializing create_model()
2024-07-08 20:49:06,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:06,506:INFO:Checking exceptions
2024-07-08 20:49:06,506:INFO:Importing libraries
2024-07-08 20:49:06,506:INFO:Copying training dataset
2024-07-08 20:49:06,511:INFO:Defining folds
2024-07-08 20:49:06,511:INFO:Declaring metric variables
2024-07-08 20:49:06,514:INFO:Importing untrained model
2024-07-08 20:49:06,518:INFO:Extra Trees Classifier Imported successfully
2024-07-08 20:49:06,525:INFO:Starting cross validation
2024-07-08 20:49:06,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:06,905:INFO:Calculating mean and std
2024-07-08 20:49:06,906:INFO:Creating metrics dataframe
2024-07-08 20:49:06,908:INFO:Uploading results into container
2024-07-08 20:49:06,909:INFO:Uploading model into container now
2024-07-08 20:49:06,909:INFO:_master_model_container: 12
2024-07-08 20:49:06,909:INFO:_display_container: 2
2024-07-08 20:49:06,909:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-07-08 20:49:06,910:INFO:create_model() successfully completed......................................
2024-07-08 20:49:07,003:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:07,004:INFO:Creating metrics dataframe
2024-07-08 20:49:07,014:INFO:Initializing Light Gradient Boosting Machine
2024-07-08 20:49:07,015:INFO:Total runtime is 0.20304135084152225 minutes
2024-07-08 20:49:07,018:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:07,019:INFO:Initializing create_model()
2024-07-08 20:49:07,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:07,019:INFO:Checking exceptions
2024-07-08 20:49:07,019:INFO:Importing libraries
2024-07-08 20:49:07,019:INFO:Copying training dataset
2024-07-08 20:49:07,024:INFO:Defining folds
2024-07-08 20:49:07,024:INFO:Declaring metric variables
2024-07-08 20:49:07,027:INFO:Importing untrained model
2024-07-08 20:49:07,031:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-08 20:49:07,038:INFO:Starting cross validation
2024-07-08 20:49:07,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:12,616:INFO:Calculating mean and std
2024-07-08 20:49:12,618:INFO:Creating metrics dataframe
2024-07-08 20:49:12,620:INFO:Uploading results into container
2024-07-08 20:49:12,621:INFO:Uploading model into container now
2024-07-08 20:49:12,622:INFO:_master_model_container: 13
2024-07-08 20:49:12,622:INFO:_display_container: 2
2024-07-08 20:49:12,622:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-08 20:49:12,623:INFO:create_model() successfully completed......................................
2024-07-08 20:49:12,744:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:12,745:INFO:Creating metrics dataframe
2024-07-08 20:49:12,759:INFO:Initializing Dummy Classifier
2024-07-08 20:49:12,759:INFO:Total runtime is 0.298789648214976 minutes
2024-07-08 20:49:12,765:INFO:SubProcess create_model() called ==================================
2024-07-08 20:49:12,765:INFO:Initializing create_model()
2024-07-08 20:49:12,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1849fb510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:12,766:INFO:Checking exceptions
2024-07-08 20:49:12,766:INFO:Importing libraries
2024-07-08 20:49:12,766:INFO:Copying training dataset
2024-07-08 20:49:12,771:INFO:Defining folds
2024-07-08 20:49:12,771:INFO:Declaring metric variables
2024-07-08 20:49:12,776:INFO:Importing untrained model
2024-07-08 20:49:12,780:INFO:Dummy Classifier Imported successfully
2024-07-08 20:49:12,788:INFO:Starting cross validation
2024-07-08 20:49:12,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:49:12,841:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,843:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,845:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,847:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,850:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,857:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,859:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,872:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,873:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,879:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:49:12,885:INFO:Calculating mean and std
2024-07-08 20:49:12,886:INFO:Creating metrics dataframe
2024-07-08 20:49:12,888:INFO:Uploading results into container
2024-07-08 20:49:12,889:INFO:Uploading model into container now
2024-07-08 20:49:12,890:INFO:_master_model_container: 14
2024-07-08 20:49:12,890:INFO:_display_container: 2
2024-07-08 20:49:12,890:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-07-08 20:49:12,890:INFO:create_model() successfully completed......................................
2024-07-08 20:49:12,982:INFO:SubProcess create_model() end ==================================
2024-07-08 20:49:12,982:INFO:Creating metrics dataframe
2024-07-08 20:49:12,999:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-08 20:49:13,008:INFO:Initializing create_model()
2024-07-08 20:49:13,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ff43410>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:49:13,008:INFO:Checking exceptions
2024-07-08 20:49:13,010:INFO:Importing libraries
2024-07-08 20:49:13,010:INFO:Copying training dataset
2024-07-08 20:49:13,014:INFO:Defining folds
2024-07-08 20:49:13,015:INFO:Declaring metric variables
2024-07-08 20:49:13,015:INFO:Importing untrained model
2024-07-08 20:49:13,015:INFO:Declaring custom model
2024-07-08 20:49:13,015:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 20:49:13,016:INFO:Cross validation set to False
2024-07-08 20:49:13,016:INFO:Fitting Model
2024-07-08 20:49:13,164:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:49:13,165:INFO:create_model() successfully completed......................................
2024-07-08 20:49:13,290:INFO:_master_model_container: 14
2024-07-08 20:49:13,290:INFO:_display_container: 2
2024-07-08 20:49:13,291:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:49:13,291:INFO:compare_models() successfully completed......................................
2024-07-08 20:54:39,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 20:54:39,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 20:54:39,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 20:54:39,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-08 20:54:40,302:INFO:PyCaret ClassificationExperiment
2024-07-08 20:54:40,302:INFO:Logging name: clf-default-name
2024-07-08 20:54:40,302:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:54:40,303:INFO:version 3.3.2
2024-07-08 20:54:40,303:INFO:Initializing setup()
2024-07-08 20:54:40,303:INFO:self.USI: 9ac1
2024-07-08 20:54:40,303:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'n_jobs_param', 'fold_shuffle_param', 'memory', 'X_test', 'fix_imbalance', 'logging_param', 'data', 'pipeline', 'log_plots_param', 'y', 'idx', 'is_multiclass', 'X_train', '_ml_usecase', 'exp_name_log', 'X', '_available_plots', 'gpu_param', 'fold_generator', 'y_test', 'gpu_n_jobs_param', 'y_train', 'target_param', 'seed', 'html_param', 'USI'}
2024-07-08 20:54:40,303:INFO:Checking environment
2024-07-08 20:54:40,304:INFO:python_version: 3.11.5
2024-07-08 20:54:40,304:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:54:40,304:INFO:machine: x86_64
2024-07-08 20:54:40,304:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:54:40,304:INFO:Memory: svmem(total=17179869184, available=6865723392, percent=60.0, used=7801851904, free=1364828160, active=4226076672, inactive=5427970048, wired=3575775232)
2024-07-08 20:54:40,304:INFO:Physical Core: 6
2024-07-08 20:54:40,304:INFO:Logical Core: 12
2024-07-08 20:54:40,304:INFO:Checking libraries
2024-07-08 20:54:40,304:INFO:System:
2024-07-08 20:54:40,304:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:54:40,305:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:54:40,305:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:54:40,305:INFO:PyCaret required dependencies:
2024-07-08 20:54:40,531:INFO:                 pip: 23.3.1
2024-07-08 20:54:40,531:INFO:          setuptools: 68.2.2
2024-07-08 20:54:40,532:INFO:             pycaret: 3.3.2
2024-07-08 20:54:40,532:INFO:             IPython: 8.20.0
2024-07-08 20:54:40,532:INFO:          ipywidgets: 8.0.4
2024-07-08 20:54:40,532:INFO:                tqdm: 4.65.0
2024-07-08 20:54:40,532:INFO:               numpy: 1.24.2
2024-07-08 20:54:40,532:INFO:              pandas: 2.1.4
2024-07-08 20:54:40,532:INFO:              jinja2: 3.1.3
2024-07-08 20:54:40,532:INFO:               scipy: 1.10.1
2024-07-08 20:54:40,532:INFO:              joblib: 1.1.0
2024-07-08 20:54:40,532:INFO:             sklearn: 1.4.0
2024-07-08 20:54:40,532:INFO:                pyod: 2.0.1
2024-07-08 20:54:40,532:INFO:            imblearn: 0.12.3
2024-07-08 20:54:40,532:INFO:   category_encoders: 2.6.3
2024-07-08 20:54:40,532:INFO:            lightgbm: 4.4.0
2024-07-08 20:54:40,532:INFO:               numba: 0.60.0
2024-07-08 20:54:40,532:INFO:            requests: 2.31.0
2024-07-08 20:54:40,532:INFO:          matplotlib: 3.8.2
2024-07-08 20:54:40,532:INFO:          scikitplot: 0.3.7
2024-07-08 20:54:40,532:INFO:         yellowbrick: 1.5
2024-07-08 20:54:40,532:INFO:              plotly: 5.19.0
2024-07-08 20:54:40,532:INFO:    plotly-resampler: Not installed
2024-07-08 20:54:40,532:INFO:             kaleido: 0.2.1
2024-07-08 20:54:40,532:INFO:           schemdraw: 0.15
2024-07-08 20:54:40,532:INFO:         statsmodels: 0.14.2
2024-07-08 20:54:40,533:INFO:              sktime: 0.26.0
2024-07-08 20:54:40,533:INFO:               tbats: 1.1.3
2024-07-08 20:54:40,533:INFO:            pmdarima: 2.0.4
2024-07-08 20:54:40,533:INFO:              psutil: 5.9.0
2024-07-08 20:54:40,533:INFO:          markupsafe: 2.1.3
2024-07-08 20:54:40,533:INFO:             pickle5: Not installed
2024-07-08 20:54:40,533:INFO:         cloudpickle: 3.0.0
2024-07-08 20:54:40,533:INFO:         deprecation: 2.1.0
2024-07-08 20:54:40,533:INFO:              xxhash: 3.4.1
2024-07-08 20:54:40,533:INFO:           wurlitzer: 3.1.1
2024-07-08 20:54:40,533:INFO:PyCaret optional dependencies:
2024-07-08 20:54:40,555:INFO:                shap: Not installed
2024-07-08 20:54:40,555:INFO:           interpret: Not installed
2024-07-08 20:54:40,555:INFO:                umap: Not installed
2024-07-08 20:54:40,555:INFO:     ydata_profiling: Not installed
2024-07-08 20:54:40,556:INFO:  explainerdashboard: Not installed
2024-07-08 20:54:40,556:INFO:             autoviz: Not installed
2024-07-08 20:54:40,556:INFO:           fairlearn: Not installed
2024-07-08 20:54:40,556:INFO:          deepchecks: Not installed
2024-07-08 20:54:40,556:INFO:             xgboost: Not installed
2024-07-08 20:54:40,556:INFO:            catboost: Not installed
2024-07-08 20:54:40,556:INFO:              kmodes: Not installed
2024-07-08 20:54:40,556:INFO:             mlxtend: Not installed
2024-07-08 20:54:40,556:INFO:       statsforecast: Not installed
2024-07-08 20:54:40,556:INFO:        tune_sklearn: Not installed
2024-07-08 20:54:40,556:INFO:                 ray: Not installed
2024-07-08 20:54:40,556:INFO:            hyperopt: Not installed
2024-07-08 20:54:40,556:INFO:              optuna: Not installed
2024-07-08 20:54:40,556:INFO:               skopt: Not installed
2024-07-08 20:54:40,556:INFO:              mlflow: Not installed
2024-07-08 20:54:40,556:INFO:              gradio: Not installed
2024-07-08 20:54:40,556:INFO:             fastapi: Not installed
2024-07-08 20:54:40,556:INFO:             uvicorn: Not installed
2024-07-08 20:54:40,556:INFO:              m2cgen: Not installed
2024-07-08 20:54:40,556:INFO:           evidently: Not installed
2024-07-08 20:54:40,556:INFO:               fugue: Not installed
2024-07-08 20:54:40,556:INFO:           streamlit: Not installed
2024-07-08 20:54:40,556:INFO:             prophet: Not installed
2024-07-08 20:54:40,556:INFO:None
2024-07-08 20:54:40,556:INFO:Set up data.
2024-07-08 20:54:40,566:INFO:Set up folding strategy.
2024-07-08 20:54:40,566:INFO:Set up train/test split.
2024-07-08 20:54:40,578:INFO:Set up index.
2024-07-08 20:54:40,578:INFO:Assigning column types.
2024-07-08 20:54:40,582:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:54:40,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:54:40,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:54:40,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:54:40,722:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:54:40,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,758:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:54:40,813:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:54:40,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,894:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:54:40,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,921:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:54:40,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:40,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:41,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:41,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:41,051:INFO:Preparing preprocessing pipeline...
2024-07-08 20:54:41,052:INFO:Set up simple imputation.
2024-07-08 20:54:41,052:INFO:Set up feature normalization.
2024-07-08 20:54:41,060:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:54:41,064:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:54:41,065:INFO:Creating final display dataframe.
2024-07-08 20:54:41,090:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape          (891, 5)
5   Transformed train set shape          (623, 5)
6    Transformed test set shape          (268, 5)
7               Ignore features                14
8              Numeric features                 4
9      Rows with missing values             77.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              9ac1
2024-07-08 20:54:41,178:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:41,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:41,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:41,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:54:41,250:INFO:setup() successfully completed in 0.95s...............
2024-07-08 20:54:41,254:INFO:Initializing compare_models()
2024-07-08 20:54:41,254:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-08 20:54:41,254:INFO:Checking exceptions
2024-07-08 20:54:41,258:INFO:Preparing display monitor
2024-07-08 20:54:41,307:INFO:Initializing Logistic Regression
2024-07-08 20:54:41,307:INFO:Total runtime is 8.165836334228516e-06 minutes
2024-07-08 20:54:41,311:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:41,311:INFO:Initializing create_model()
2024-07-08 20:54:41,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:41,311:INFO:Checking exceptions
2024-07-08 20:54:41,311:INFO:Importing libraries
2024-07-08 20:54:41,312:INFO:Copying training dataset
2024-07-08 20:54:41,318:INFO:Defining folds
2024-07-08 20:54:41,318:INFO:Declaring metric variables
2024-07-08 20:54:41,322:INFO:Importing untrained model
2024-07-08 20:54:41,325:INFO:Logistic Regression Imported successfully
2024-07-08 20:54:41,332:INFO:Starting cross validation
2024-07-08 20:54:41,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:46,502:INFO:Calculating mean and std
2024-07-08 20:54:46,517:INFO:Creating metrics dataframe
2024-07-08 20:54:46,525:INFO:Uploading results into container
2024-07-08 20:54:46,529:INFO:Uploading model into container now
2024-07-08 20:54:46,531:INFO:_master_model_container: 1
2024-07-08 20:54:46,531:INFO:_display_container: 2
2024-07-08 20:54:46,536:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-08 20:54:46,537:INFO:create_model() successfully completed......................................
2024-07-08 20:54:46,720:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:46,720:INFO:Creating metrics dataframe
2024-07-08 20:54:46,730:INFO:Initializing K Neighbors Classifier
2024-07-08 20:54:46,730:INFO:Total runtime is 0.09038545290629069 minutes
2024-07-08 20:54:46,734:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:46,734:INFO:Initializing create_model()
2024-07-08 20:54:46,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:46,734:INFO:Checking exceptions
2024-07-08 20:54:46,734:INFO:Importing libraries
2024-07-08 20:54:46,735:INFO:Copying training dataset
2024-07-08 20:54:46,741:INFO:Defining folds
2024-07-08 20:54:46,741:INFO:Declaring metric variables
2024-07-08 20:54:46,745:INFO:Importing untrained model
2024-07-08 20:54:46,748:INFO:K Neighbors Classifier Imported successfully
2024-07-08 20:54:46,756:INFO:Starting cross validation
2024-07-08 20:54:46,757:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:48,971:INFO:Calculating mean and std
2024-07-08 20:54:48,972:INFO:Creating metrics dataframe
2024-07-08 20:54:48,973:INFO:Uploading results into container
2024-07-08 20:54:48,974:INFO:Uploading model into container now
2024-07-08 20:54:48,974:INFO:_master_model_container: 2
2024-07-08 20:54:48,974:INFO:_display_container: 2
2024-07-08 20:54:48,975:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-08 20:54:48,975:INFO:create_model() successfully completed......................................
2024-07-08 20:54:49,064:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:49,064:INFO:Creating metrics dataframe
2024-07-08 20:54:49,074:INFO:Initializing Naive Bayes
2024-07-08 20:54:49,074:INFO:Total runtime is 0.12945421934127807 minutes
2024-07-08 20:54:49,078:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:49,078:INFO:Initializing create_model()
2024-07-08 20:54:49,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:49,079:INFO:Checking exceptions
2024-07-08 20:54:49,079:INFO:Importing libraries
2024-07-08 20:54:49,079:INFO:Copying training dataset
2024-07-08 20:54:49,086:INFO:Defining folds
2024-07-08 20:54:49,087:INFO:Declaring metric variables
2024-07-08 20:54:49,091:INFO:Importing untrained model
2024-07-08 20:54:49,096:INFO:Naive Bayes Imported successfully
2024-07-08 20:54:49,103:INFO:Starting cross validation
2024-07-08 20:54:49,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:49,226:INFO:Calculating mean and std
2024-07-08 20:54:49,228:INFO:Creating metrics dataframe
2024-07-08 20:54:49,230:INFO:Uploading results into container
2024-07-08 20:54:49,230:INFO:Uploading model into container now
2024-07-08 20:54:49,232:INFO:_master_model_container: 3
2024-07-08 20:54:49,232:INFO:_display_container: 2
2024-07-08 20:54:49,232:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-08 20:54:49,232:INFO:create_model() successfully completed......................................
2024-07-08 20:54:49,324:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:49,324:INFO:Creating metrics dataframe
2024-07-08 20:54:49,333:INFO:Initializing Decision Tree Classifier
2024-07-08 20:54:49,333:INFO:Total runtime is 0.13377466996510823 minutes
2024-07-08 20:54:49,338:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:49,338:INFO:Initializing create_model()
2024-07-08 20:54:49,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:49,338:INFO:Checking exceptions
2024-07-08 20:54:49,338:INFO:Importing libraries
2024-07-08 20:54:49,338:INFO:Copying training dataset
2024-07-08 20:54:49,344:INFO:Defining folds
2024-07-08 20:54:49,344:INFO:Declaring metric variables
2024-07-08 20:54:49,347:INFO:Importing untrained model
2024-07-08 20:54:49,351:INFO:Decision Tree Classifier Imported successfully
2024-07-08 20:54:49,357:INFO:Starting cross validation
2024-07-08 20:54:49,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:49,466:INFO:Calculating mean and std
2024-07-08 20:54:49,467:INFO:Creating metrics dataframe
2024-07-08 20:54:49,469:INFO:Uploading results into container
2024-07-08 20:54:49,469:INFO:Uploading model into container now
2024-07-08 20:54:49,470:INFO:_master_model_container: 4
2024-07-08 20:54:49,470:INFO:_display_container: 2
2024-07-08 20:54:49,470:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-07-08 20:54:49,470:INFO:create_model() successfully completed......................................
2024-07-08 20:54:49,545:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:49,545:INFO:Creating metrics dataframe
2024-07-08 20:54:49,553:INFO:Initializing SVM - Linear Kernel
2024-07-08 20:54:49,553:INFO:Total runtime is 0.1374468723932902 minutes
2024-07-08 20:54:49,557:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:49,557:INFO:Initializing create_model()
2024-07-08 20:54:49,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:49,558:INFO:Checking exceptions
2024-07-08 20:54:49,558:INFO:Importing libraries
2024-07-08 20:54:49,558:INFO:Copying training dataset
2024-07-08 20:54:49,563:INFO:Defining folds
2024-07-08 20:54:49,563:INFO:Declaring metric variables
2024-07-08 20:54:49,566:INFO:Importing untrained model
2024-07-08 20:54:49,569:INFO:SVM - Linear Kernel Imported successfully
2024-07-08 20:54:49,576:INFO:Starting cross validation
2024-07-08 20:54:49,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:49,674:INFO:Calculating mean and std
2024-07-08 20:54:49,675:INFO:Creating metrics dataframe
2024-07-08 20:54:49,677:INFO:Uploading results into container
2024-07-08 20:54:49,677:INFO:Uploading model into container now
2024-07-08 20:54:49,678:INFO:_master_model_container: 5
2024-07-08 20:54:49,678:INFO:_display_container: 2
2024-07-08 20:54:49,679:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-08 20:54:49,679:INFO:create_model() successfully completed......................................
2024-07-08 20:54:49,752:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:49,752:INFO:Creating metrics dataframe
2024-07-08 20:54:49,762:INFO:Initializing Ridge Classifier
2024-07-08 20:54:49,762:INFO:Total runtime is 0.14092288414637247 minutes
2024-07-08 20:54:49,765:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:49,766:INFO:Initializing create_model()
2024-07-08 20:54:49,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:49,766:INFO:Checking exceptions
2024-07-08 20:54:49,766:INFO:Importing libraries
2024-07-08 20:54:49,766:INFO:Copying training dataset
2024-07-08 20:54:49,770:INFO:Defining folds
2024-07-08 20:54:49,770:INFO:Declaring metric variables
2024-07-08 20:54:49,774:INFO:Importing untrained model
2024-07-08 20:54:49,777:INFO:Ridge Classifier Imported successfully
2024-07-08 20:54:49,786:INFO:Starting cross validation
2024-07-08 20:54:49,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:49,881:INFO:Calculating mean and std
2024-07-08 20:54:49,882:INFO:Creating metrics dataframe
2024-07-08 20:54:49,884:INFO:Uploading results into container
2024-07-08 20:54:49,884:INFO:Uploading model into container now
2024-07-08 20:54:49,885:INFO:_master_model_container: 6
2024-07-08 20:54:49,885:INFO:_display_container: 2
2024-07-08 20:54:49,885:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-07-08 20:54:49,885:INFO:create_model() successfully completed......................................
2024-07-08 20:54:49,974:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:49,974:INFO:Creating metrics dataframe
2024-07-08 20:54:49,985:INFO:Initializing Random Forest Classifier
2024-07-08 20:54:49,985:INFO:Total runtime is 0.14464730024337769 minutes
2024-07-08 20:54:49,989:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:49,989:INFO:Initializing create_model()
2024-07-08 20:54:49,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:49,989:INFO:Checking exceptions
2024-07-08 20:54:49,989:INFO:Importing libraries
2024-07-08 20:54:49,989:INFO:Copying training dataset
2024-07-08 20:54:49,996:INFO:Defining folds
2024-07-08 20:54:49,996:INFO:Declaring metric variables
2024-07-08 20:54:50,001:INFO:Importing untrained model
2024-07-08 20:54:50,005:INFO:Random Forest Classifier Imported successfully
2024-07-08 20:54:50,014:INFO:Starting cross validation
2024-07-08 20:54:50,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:50,573:INFO:Calculating mean and std
2024-07-08 20:54:50,573:INFO:Creating metrics dataframe
2024-07-08 20:54:50,575:INFO:Uploading results into container
2024-07-08 20:54:50,575:INFO:Uploading model into container now
2024-07-08 20:54:50,576:INFO:_master_model_container: 7
2024-07-08 20:54:50,576:INFO:_display_container: 2
2024-07-08 20:54:50,576:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-07-08 20:54:50,576:INFO:create_model() successfully completed......................................
2024-07-08 20:54:50,650:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:50,650:INFO:Creating metrics dataframe
2024-07-08 20:54:50,660:INFO:Initializing Quadratic Discriminant Analysis
2024-07-08 20:54:50,660:INFO:Total runtime is 0.15589523712793987 minutes
2024-07-08 20:54:50,664:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:50,664:INFO:Initializing create_model()
2024-07-08 20:54:50,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:50,664:INFO:Checking exceptions
2024-07-08 20:54:50,664:INFO:Importing libraries
2024-07-08 20:54:50,665:INFO:Copying training dataset
2024-07-08 20:54:50,672:INFO:Defining folds
2024-07-08 20:54:50,672:INFO:Declaring metric variables
2024-07-08 20:54:50,675:INFO:Importing untrained model
2024-07-08 20:54:50,678:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-08 20:54:50,686:INFO:Starting cross validation
2024-07-08 20:54:50,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:50,785:INFO:Calculating mean and std
2024-07-08 20:54:50,786:INFO:Creating metrics dataframe
2024-07-08 20:54:50,788:INFO:Uploading results into container
2024-07-08 20:54:50,788:INFO:Uploading model into container now
2024-07-08 20:54:50,789:INFO:_master_model_container: 8
2024-07-08 20:54:50,789:INFO:_display_container: 2
2024-07-08 20:54:50,789:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-08 20:54:50,789:INFO:create_model() successfully completed......................................
2024-07-08 20:54:50,865:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:50,865:INFO:Creating metrics dataframe
2024-07-08 20:54:50,875:INFO:Initializing Ada Boost Classifier
2024-07-08 20:54:50,875:INFO:Total runtime is 0.15946920315424604 minutes
2024-07-08 20:54:50,878:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:50,878:INFO:Initializing create_model()
2024-07-08 20:54:50,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:50,879:INFO:Checking exceptions
2024-07-08 20:54:50,879:INFO:Importing libraries
2024-07-08 20:54:50,879:INFO:Copying training dataset
2024-07-08 20:54:50,883:INFO:Defining folds
2024-07-08 20:54:50,883:INFO:Declaring metric variables
2024-07-08 20:54:50,887:INFO:Importing untrained model
2024-07-08 20:54:50,890:INFO:Ada Boost Classifier Imported successfully
2024-07-08 20:54:50,898:INFO:Starting cross validation
2024-07-08 20:54:50,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:50,927:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,929:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,930:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,935:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,936:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,936:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,947:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,956:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,957:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:50,959:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:54:51,156:INFO:Calculating mean and std
2024-07-08 20:54:51,157:INFO:Creating metrics dataframe
2024-07-08 20:54:51,159:INFO:Uploading results into container
2024-07-08 20:54:51,159:INFO:Uploading model into container now
2024-07-08 20:54:51,160:INFO:_master_model_container: 9
2024-07-08 20:54:51,160:INFO:_display_container: 2
2024-07-08 20:54:51,160:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-07-08 20:54:51,160:INFO:create_model() successfully completed......................................
2024-07-08 20:54:51,236:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:51,236:INFO:Creating metrics dataframe
2024-07-08 20:54:51,246:INFO:Initializing Gradient Boosting Classifier
2024-07-08 20:54:51,247:INFO:Total runtime is 0.16566747029622397 minutes
2024-07-08 20:54:51,250:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:51,250:INFO:Initializing create_model()
2024-07-08 20:54:51,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:51,250:INFO:Checking exceptions
2024-07-08 20:54:51,250:INFO:Importing libraries
2024-07-08 20:54:51,251:INFO:Copying training dataset
2024-07-08 20:54:51,255:INFO:Defining folds
2024-07-08 20:54:51,256:INFO:Declaring metric variables
2024-07-08 20:54:51,259:INFO:Importing untrained model
2024-07-08 20:54:51,262:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 20:54:51,269:INFO:Starting cross validation
2024-07-08 20:54:51,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:51,575:INFO:Calculating mean and std
2024-07-08 20:54:51,576:INFO:Creating metrics dataframe
2024-07-08 20:54:51,578:INFO:Uploading results into container
2024-07-08 20:54:51,579:INFO:Uploading model into container now
2024-07-08 20:54:51,579:INFO:_master_model_container: 10
2024-07-08 20:54:51,579:INFO:_display_container: 2
2024-07-08 20:54:51,580:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:54:51,580:INFO:create_model() successfully completed......................................
2024-07-08 20:54:51,659:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:51,659:INFO:Creating metrics dataframe
2024-07-08 20:54:51,669:INFO:Initializing Linear Discriminant Analysis
2024-07-08 20:54:51,669:INFO:Total runtime is 0.172707470258077 minutes
2024-07-08 20:54:51,673:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:51,673:INFO:Initializing create_model()
2024-07-08 20:54:51,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:51,673:INFO:Checking exceptions
2024-07-08 20:54:51,673:INFO:Importing libraries
2024-07-08 20:54:51,673:INFO:Copying training dataset
2024-07-08 20:54:51,678:INFO:Defining folds
2024-07-08 20:54:51,678:INFO:Declaring metric variables
2024-07-08 20:54:51,681:INFO:Importing untrained model
2024-07-08 20:54:51,684:INFO:Linear Discriminant Analysis Imported successfully
2024-07-08 20:54:51,691:INFO:Starting cross validation
2024-07-08 20:54:51,692:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:51,791:INFO:Calculating mean and std
2024-07-08 20:54:51,791:INFO:Creating metrics dataframe
2024-07-08 20:54:51,794:INFO:Uploading results into container
2024-07-08 20:54:51,794:INFO:Uploading model into container now
2024-07-08 20:54:51,795:INFO:_master_model_container: 11
2024-07-08 20:54:51,795:INFO:_display_container: 2
2024-07-08 20:54:51,795:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-08 20:54:51,795:INFO:create_model() successfully completed......................................
2024-07-08 20:54:51,872:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:51,872:INFO:Creating metrics dataframe
2024-07-08 20:54:51,885:INFO:Initializing Extra Trees Classifier
2024-07-08 20:54:51,885:INFO:Total runtime is 0.17630629936854048 minutes
2024-07-08 20:54:51,888:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:51,889:INFO:Initializing create_model()
2024-07-08 20:54:51,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:51,889:INFO:Checking exceptions
2024-07-08 20:54:51,889:INFO:Importing libraries
2024-07-08 20:54:51,889:INFO:Copying training dataset
2024-07-08 20:54:51,893:INFO:Defining folds
2024-07-08 20:54:51,893:INFO:Declaring metric variables
2024-07-08 20:54:51,897:INFO:Importing untrained model
2024-07-08 20:54:51,900:INFO:Extra Trees Classifier Imported successfully
2024-07-08 20:54:51,908:INFO:Starting cross validation
2024-07-08 20:54:51,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:52,445:INFO:Calculating mean and std
2024-07-08 20:54:52,445:INFO:Creating metrics dataframe
2024-07-08 20:54:52,448:INFO:Uploading results into container
2024-07-08 20:54:52,449:INFO:Uploading model into container now
2024-07-08 20:54:52,449:INFO:_master_model_container: 12
2024-07-08 20:54:52,449:INFO:_display_container: 2
2024-07-08 20:54:52,450:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-07-08 20:54:52,450:INFO:create_model() successfully completed......................................
2024-07-08 20:54:52,535:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:52,536:INFO:Creating metrics dataframe
2024-07-08 20:54:52,548:INFO:Initializing Light Gradient Boosting Machine
2024-07-08 20:54:52,548:INFO:Total runtime is 0.18735332091649376 minutes
2024-07-08 20:54:52,551:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:52,551:INFO:Initializing create_model()
2024-07-08 20:54:52,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:52,552:INFO:Checking exceptions
2024-07-08 20:54:52,552:INFO:Importing libraries
2024-07-08 20:54:52,552:INFO:Copying training dataset
2024-07-08 20:54:52,557:INFO:Defining folds
2024-07-08 20:54:52,557:INFO:Declaring metric variables
2024-07-08 20:54:52,560:INFO:Importing untrained model
2024-07-08 20:54:52,565:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-08 20:54:52,575:INFO:Starting cross validation
2024-07-08 20:54:52,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:57,959:INFO:Calculating mean and std
2024-07-08 20:54:57,959:INFO:Creating metrics dataframe
2024-07-08 20:54:57,962:INFO:Uploading results into container
2024-07-08 20:54:57,962:INFO:Uploading model into container now
2024-07-08 20:54:57,963:INFO:_master_model_container: 13
2024-07-08 20:54:57,963:INFO:_display_container: 2
2024-07-08 20:54:57,964:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-08 20:54:57,964:INFO:create_model() successfully completed......................................
2024-07-08 20:54:58,049:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:58,049:INFO:Creating metrics dataframe
2024-07-08 20:54:58,061:INFO:Initializing Dummy Classifier
2024-07-08 20:54:58,062:INFO:Total runtime is 0.279251503944397 minutes
2024-07-08 20:54:58,067:INFO:SubProcess create_model() called ==================================
2024-07-08 20:54:58,067:INFO:Initializing create_model()
2024-07-08 20:54:58,067:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18e1ed350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:58,067:INFO:Checking exceptions
2024-07-08 20:54:58,067:INFO:Importing libraries
2024-07-08 20:54:58,067:INFO:Copying training dataset
2024-07-08 20:54:58,072:INFO:Defining folds
2024-07-08 20:54:58,072:INFO:Declaring metric variables
2024-07-08 20:54:58,076:INFO:Importing untrained model
2024-07-08 20:54:58,081:INFO:Dummy Classifier Imported successfully
2024-07-08 20:54:58,090:INFO:Starting cross validation
2024-07-08 20:54:58,091:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:54:58,134:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,137:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,149:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,149:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,151:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,153:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,153:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,156:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,158:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,159:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:54:58,165:INFO:Calculating mean and std
2024-07-08 20:54:58,166:INFO:Creating metrics dataframe
2024-07-08 20:54:58,167:INFO:Uploading results into container
2024-07-08 20:54:58,168:INFO:Uploading model into container now
2024-07-08 20:54:58,168:INFO:_master_model_container: 14
2024-07-08 20:54:58,168:INFO:_display_container: 2
2024-07-08 20:54:58,168:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-07-08 20:54:58,168:INFO:create_model() successfully completed......................................
2024-07-08 20:54:58,242:INFO:SubProcess create_model() end ==================================
2024-07-08 20:54:58,242:INFO:Creating metrics dataframe
2024-07-08 20:54:58,257:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-08 20:54:58,266:INFO:Initializing create_model()
2024-07-08 20:54:58,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e1edd90>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:54:58,267:INFO:Checking exceptions
2024-07-08 20:54:58,268:INFO:Importing libraries
2024-07-08 20:54:58,268:INFO:Copying training dataset
2024-07-08 20:54:58,273:INFO:Defining folds
2024-07-08 20:54:58,273:INFO:Declaring metric variables
2024-07-08 20:54:58,273:INFO:Importing untrained model
2024-07-08 20:54:58,273:INFO:Declaring custom model
2024-07-08 20:54:58,274:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 20:54:58,275:INFO:Cross validation set to False
2024-07-08 20:54:58,275:INFO:Fitting Model
2024-07-08 20:54:58,435:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:54:58,435:INFO:create_model() successfully completed......................................
2024-07-08 20:54:58,537:INFO:_master_model_container: 14
2024-07-08 20:54:58,538:INFO:_display_container: 2
2024-07-08 20:54:58,538:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:54:58,538:INFO:compare_models() successfully completed......................................
2024-07-08 20:55:15,750:INFO:PyCaret ClassificationExperiment
2024-07-08 20:55:15,750:INFO:Logging name: clf-default-name
2024-07-08 20:55:15,751:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:55:15,752:INFO:version 3.3.2
2024-07-08 20:55:15,752:INFO:Initializing setup()
2024-07-08 20:55:15,752:INFO:self.USI: 6d6d
2024-07-08 20:55:15,752:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'n_jobs_param', 'fold_shuffle_param', 'memory', 'X_test', 'fix_imbalance', 'logging_param', 'data', 'pipeline', 'log_plots_param', 'y', 'idx', 'is_multiclass', 'X_train', '_ml_usecase', 'exp_name_log', 'X', '_available_plots', 'gpu_param', 'fold_generator', 'y_test', 'gpu_n_jobs_param', 'y_train', 'target_param', 'seed', 'html_param', 'USI'}
2024-07-08 20:55:15,752:INFO:Checking environment
2024-07-08 20:55:15,752:INFO:python_version: 3.11.5
2024-07-08 20:55:15,752:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:55:15,752:INFO:machine: x86_64
2024-07-08 20:55:15,752:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:55:15,753:INFO:Memory: svmem(total=17179869184, available=5550350336, percent=67.7, used=8967036928, free=13926400, active=5539880960, inactive=5530255360, wired=3427155968)
2024-07-08 20:55:15,753:INFO:Physical Core: 6
2024-07-08 20:55:15,753:INFO:Logical Core: 12
2024-07-08 20:55:15,753:INFO:Checking libraries
2024-07-08 20:55:15,753:INFO:System:
2024-07-08 20:55:15,753:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:55:15,753:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:55:15,753:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:55:15,753:INFO:PyCaret required dependencies:
2024-07-08 20:55:15,753:INFO:                 pip: 23.3.1
2024-07-08 20:55:15,753:INFO:          setuptools: 68.2.2
2024-07-08 20:55:15,753:INFO:             pycaret: 3.3.2
2024-07-08 20:55:15,753:INFO:             IPython: 8.20.0
2024-07-08 20:55:15,753:INFO:          ipywidgets: 8.0.4
2024-07-08 20:55:15,753:INFO:                tqdm: 4.65.0
2024-07-08 20:55:15,753:INFO:               numpy: 1.24.2
2024-07-08 20:55:15,754:INFO:              pandas: 2.1.4
2024-07-08 20:55:15,754:INFO:              jinja2: 3.1.3
2024-07-08 20:55:15,754:INFO:               scipy: 1.10.1
2024-07-08 20:55:15,754:INFO:              joblib: 1.1.0
2024-07-08 20:55:15,754:INFO:             sklearn: 1.4.0
2024-07-08 20:55:15,754:INFO:                pyod: 2.0.1
2024-07-08 20:55:15,754:INFO:            imblearn: 0.12.3
2024-07-08 20:55:15,754:INFO:   category_encoders: 2.6.3
2024-07-08 20:55:15,754:INFO:            lightgbm: 4.4.0
2024-07-08 20:55:15,755:INFO:               numba: 0.60.0
2024-07-08 20:55:15,755:INFO:            requests: 2.31.0
2024-07-08 20:55:15,755:INFO:          matplotlib: 3.8.2
2024-07-08 20:55:15,755:INFO:          scikitplot: 0.3.7
2024-07-08 20:55:15,755:INFO:         yellowbrick: 1.5
2024-07-08 20:55:15,755:INFO:              plotly: 5.19.0
2024-07-08 20:55:15,755:INFO:    plotly-resampler: Not installed
2024-07-08 20:55:15,755:INFO:             kaleido: 0.2.1
2024-07-08 20:55:15,755:INFO:           schemdraw: 0.15
2024-07-08 20:55:15,755:INFO:         statsmodels: 0.14.2
2024-07-08 20:55:15,755:INFO:              sktime: 0.26.0
2024-07-08 20:55:15,755:INFO:               tbats: 1.1.3
2024-07-08 20:55:15,755:INFO:            pmdarima: 2.0.4
2024-07-08 20:55:15,755:INFO:              psutil: 5.9.0
2024-07-08 20:55:15,755:INFO:          markupsafe: 2.1.3
2024-07-08 20:55:15,755:INFO:             pickle5: Not installed
2024-07-08 20:55:15,755:INFO:         cloudpickle: 3.0.0
2024-07-08 20:55:15,755:INFO:         deprecation: 2.1.0
2024-07-08 20:55:15,755:INFO:              xxhash: 3.4.1
2024-07-08 20:55:15,755:INFO:           wurlitzer: 3.1.1
2024-07-08 20:55:15,755:INFO:PyCaret optional dependencies:
2024-07-08 20:55:15,755:INFO:                shap: Not installed
2024-07-08 20:55:15,755:INFO:           interpret: Not installed
2024-07-08 20:55:15,756:INFO:                umap: Not installed
2024-07-08 20:55:15,756:INFO:     ydata_profiling: Not installed
2024-07-08 20:55:15,756:INFO:  explainerdashboard: Not installed
2024-07-08 20:55:15,756:INFO:             autoviz: Not installed
2024-07-08 20:55:15,756:INFO:           fairlearn: Not installed
2024-07-08 20:55:15,756:INFO:          deepchecks: Not installed
2024-07-08 20:55:15,756:INFO:             xgboost: Not installed
2024-07-08 20:55:15,756:INFO:            catboost: Not installed
2024-07-08 20:55:15,756:INFO:              kmodes: Not installed
2024-07-08 20:55:15,756:INFO:             mlxtend: Not installed
2024-07-08 20:55:15,756:INFO:       statsforecast: Not installed
2024-07-08 20:55:15,756:INFO:        tune_sklearn: Not installed
2024-07-08 20:55:15,756:INFO:                 ray: Not installed
2024-07-08 20:55:15,756:INFO:            hyperopt: Not installed
2024-07-08 20:55:15,756:INFO:              optuna: Not installed
2024-07-08 20:55:15,756:INFO:               skopt: Not installed
2024-07-08 20:55:15,756:INFO:              mlflow: Not installed
2024-07-08 20:55:15,756:INFO:              gradio: Not installed
2024-07-08 20:55:15,756:INFO:             fastapi: Not installed
2024-07-08 20:55:15,756:INFO:             uvicorn: Not installed
2024-07-08 20:55:15,756:INFO:              m2cgen: Not installed
2024-07-08 20:55:15,756:INFO:           evidently: Not installed
2024-07-08 20:55:15,756:INFO:               fugue: Not installed
2024-07-08 20:55:15,756:INFO:           streamlit: Not installed
2024-07-08 20:55:15,756:INFO:             prophet: Not installed
2024-07-08 20:55:15,757:INFO:None
2024-07-08 20:55:15,757:INFO:Set up data.
2024-07-08 20:55:15,768:INFO:Set up folding strategy.
2024-07-08 20:55:15,769:INFO:Set up train/test split.
2024-07-08 20:55:15,779:INFO:Set up index.
2024-07-08 20:55:15,779:INFO:Assigning column types.
2024-07-08 20:56:22,825:INFO:PyCaret ClassificationExperiment
2024-07-08 20:56:22,826:INFO:Logging name: clf-default-name
2024-07-08 20:56:22,826:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:56:22,826:INFO:version 3.3.2
2024-07-08 20:56:22,826:INFO:Initializing setup()
2024-07-08 20:56:22,826:INFO:self.USI: a68a
2024-07-08 20:56:22,826:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'n_jobs_param', 'fold_shuffle_param', 'memory', 'X_test', 'fix_imbalance', 'logging_param', 'data', 'pipeline', 'log_plots_param', 'y', 'idx', 'is_multiclass', 'X_train', '_ml_usecase', 'exp_name_log', 'X', '_available_plots', 'gpu_param', 'fold_generator', 'y_test', 'gpu_n_jobs_param', 'y_train', 'target_param', 'seed', 'html_param', 'USI'}
2024-07-08 20:56:22,826:INFO:Checking environment
2024-07-08 20:56:22,826:INFO:python_version: 3.11.5
2024-07-08 20:56:22,826:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:56:22,827:INFO:machine: x86_64
2024-07-08 20:56:22,827:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:56:22,827:INFO:Memory: svmem(total=17179869184, available=5477531648, percent=68.1, used=9054191616, free=10227712, active=5472096256, inactive=5436002304, wired=3582095360)
2024-07-08 20:56:22,827:INFO:Physical Core: 6
2024-07-08 20:56:22,827:INFO:Logical Core: 12
2024-07-08 20:56:22,827:INFO:Checking libraries
2024-07-08 20:56:22,827:INFO:System:
2024-07-08 20:56:22,827:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:56:22,827:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:56:22,827:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:56:22,827:INFO:PyCaret required dependencies:
2024-07-08 20:56:22,827:INFO:                 pip: 23.3.1
2024-07-08 20:56:22,827:INFO:          setuptools: 68.2.2
2024-07-08 20:56:22,827:INFO:             pycaret: 3.3.2
2024-07-08 20:56:22,828:INFO:             IPython: 8.20.0
2024-07-08 20:56:22,828:INFO:          ipywidgets: 8.0.4
2024-07-08 20:56:22,828:INFO:                tqdm: 4.65.0
2024-07-08 20:56:22,828:INFO:               numpy: 1.24.2
2024-07-08 20:56:22,828:INFO:              pandas: 2.1.4
2024-07-08 20:56:22,828:INFO:              jinja2: 3.1.3
2024-07-08 20:56:22,828:INFO:               scipy: 1.10.1
2024-07-08 20:56:22,828:INFO:              joblib: 1.1.0
2024-07-08 20:56:22,828:INFO:             sklearn: 1.4.0
2024-07-08 20:56:22,828:INFO:                pyod: 2.0.1
2024-07-08 20:56:22,828:INFO:            imblearn: 0.12.3
2024-07-08 20:56:22,828:INFO:   category_encoders: 2.6.3
2024-07-08 20:56:22,828:INFO:            lightgbm: 4.4.0
2024-07-08 20:56:22,828:INFO:               numba: 0.60.0
2024-07-08 20:56:22,828:INFO:            requests: 2.31.0
2024-07-08 20:56:22,828:INFO:          matplotlib: 3.8.2
2024-07-08 20:56:22,828:INFO:          scikitplot: 0.3.7
2024-07-08 20:56:22,828:INFO:         yellowbrick: 1.5
2024-07-08 20:56:22,828:INFO:              plotly: 5.19.0
2024-07-08 20:56:22,828:INFO:    plotly-resampler: Not installed
2024-07-08 20:56:22,828:INFO:             kaleido: 0.2.1
2024-07-08 20:56:22,828:INFO:           schemdraw: 0.15
2024-07-08 20:56:22,828:INFO:         statsmodels: 0.14.2
2024-07-08 20:56:22,828:INFO:              sktime: 0.26.0
2024-07-08 20:56:22,829:INFO:               tbats: 1.1.3
2024-07-08 20:56:22,829:INFO:            pmdarima: 2.0.4
2024-07-08 20:56:22,829:INFO:              psutil: 5.9.0
2024-07-08 20:56:22,829:INFO:          markupsafe: 2.1.3
2024-07-08 20:56:22,829:INFO:             pickle5: Not installed
2024-07-08 20:56:22,829:INFO:         cloudpickle: 3.0.0
2024-07-08 20:56:22,829:INFO:         deprecation: 2.1.0
2024-07-08 20:56:22,829:INFO:              xxhash: 3.4.1
2024-07-08 20:56:22,829:INFO:           wurlitzer: 3.1.1
2024-07-08 20:56:22,829:INFO:PyCaret optional dependencies:
2024-07-08 20:56:22,829:INFO:                shap: Not installed
2024-07-08 20:56:22,829:INFO:           interpret: Not installed
2024-07-08 20:56:22,829:INFO:                umap: Not installed
2024-07-08 20:56:22,829:INFO:     ydata_profiling: Not installed
2024-07-08 20:56:22,829:INFO:  explainerdashboard: Not installed
2024-07-08 20:56:22,829:INFO:             autoviz: Not installed
2024-07-08 20:56:22,829:INFO:           fairlearn: Not installed
2024-07-08 20:56:22,829:INFO:          deepchecks: Not installed
2024-07-08 20:56:22,829:INFO:             xgboost: Not installed
2024-07-08 20:56:22,829:INFO:            catboost: Not installed
2024-07-08 20:56:22,830:INFO:              kmodes: Not installed
2024-07-08 20:56:22,830:INFO:             mlxtend: Not installed
2024-07-08 20:56:22,830:INFO:       statsforecast: Not installed
2024-07-08 20:56:22,830:INFO:        tune_sklearn: Not installed
2024-07-08 20:56:22,830:INFO:                 ray: Not installed
2024-07-08 20:56:22,830:INFO:            hyperopt: Not installed
2024-07-08 20:56:22,830:INFO:              optuna: Not installed
2024-07-08 20:56:22,830:INFO:               skopt: Not installed
2024-07-08 20:56:22,830:INFO:              mlflow: Not installed
2024-07-08 20:56:22,830:INFO:              gradio: Not installed
2024-07-08 20:56:22,830:INFO:             fastapi: Not installed
2024-07-08 20:56:22,830:INFO:             uvicorn: Not installed
2024-07-08 20:56:22,830:INFO:              m2cgen: Not installed
2024-07-08 20:56:22,830:INFO:           evidently: Not installed
2024-07-08 20:56:22,830:INFO:               fugue: Not installed
2024-07-08 20:56:22,830:INFO:           streamlit: Not installed
2024-07-08 20:56:22,830:INFO:             prophet: Not installed
2024-07-08 20:56:22,830:INFO:None
2024-07-08 20:56:22,830:INFO:Set up data.
2024-07-08 20:56:22,842:INFO:Set up folding strategy.
2024-07-08 20:56:22,842:INFO:Set up train/test split.
2024-07-08 20:56:22,950:INFO:Set up index.
2024-07-08 20:56:22,951:INFO:Assigning column types.
2024-07-08 20:56:22,958:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:56:23,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:56:23,047:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:23,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,163:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:56:23,164:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:23,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,205:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:56:23,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:23,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,363:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:23,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,401:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:56:23,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,612:INFO:Preparing preprocessing pipeline...
2024-07-08 20:56:23,613:INFO:Set up simple imputation.
2024-07-08 20:56:23,615:INFO:Set up encoding of ordinal features.
2024-07-08 20:56:23,616:INFO:Set up encoding of categorical features.
2024-07-08 20:56:23,617:INFO:Set up feature normalization.
2024-07-08 20:56:23,664:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:56:23,683:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['Sex', 'Embark...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:56:23,683:INFO:Creating final display dataframe.
2024-07-08 20:56:23,795:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape          (891, 9)
5   Transformed train set shape          (623, 9)
6    Transformed test set shape          (268, 9)
7               Ignore features                12
8              Numeric features                 4
9          Categorical features                 2
10     Rows with missing values             77.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              a68a
2024-07-08 20:56:23,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:23,995:INFO:setup() successfully completed in 1.17s...............
2024-07-08 20:56:57,859:INFO:PyCaret ClassificationExperiment
2024-07-08 20:56:57,860:INFO:Logging name: clf-default-name
2024-07-08 20:56:57,860:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 20:56:57,860:INFO:version 3.3.2
2024-07-08 20:56:57,860:INFO:Initializing setup()
2024-07-08 20:56:57,860:INFO:self.USI: 4b68
2024-07-08 20:56:57,860:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'n_jobs_param', 'fold_shuffle_param', 'memory', 'X_test', 'fix_imbalance', 'logging_param', 'data', 'pipeline', 'log_plots_param', 'y', 'idx', 'is_multiclass', 'X_train', '_ml_usecase', 'exp_name_log', 'X', '_available_plots', 'gpu_param', 'fold_generator', 'y_test', 'gpu_n_jobs_param', 'y_train', 'target_param', 'seed', 'html_param', 'USI'}
2024-07-08 20:56:57,860:INFO:Checking environment
2024-07-08 20:56:57,860:INFO:python_version: 3.11.5
2024-07-08 20:56:57,860:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 20:56:57,860:INFO:machine: x86_64
2024-07-08 20:56:57,860:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:56:57,860:INFO:Memory: svmem(total=17179869184, available=5567393792, percent=67.6, used=8975671296, free=15998976, active=5543297024, inactive=5505298432, wired=3432374272)
2024-07-08 20:56:57,860:INFO:Physical Core: 6
2024-07-08 20:56:57,861:INFO:Logical Core: 12
2024-07-08 20:56:57,861:INFO:Checking libraries
2024-07-08 20:56:57,861:INFO:System:
2024-07-08 20:56:57,861:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 20:56:57,861:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 20:56:57,861:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 20:56:57,861:INFO:PyCaret required dependencies:
2024-07-08 20:56:57,861:INFO:                 pip: 23.3.1
2024-07-08 20:56:57,861:INFO:          setuptools: 68.2.2
2024-07-08 20:56:57,861:INFO:             pycaret: 3.3.2
2024-07-08 20:56:57,861:INFO:             IPython: 8.20.0
2024-07-08 20:56:57,861:INFO:          ipywidgets: 8.0.4
2024-07-08 20:56:57,861:INFO:                tqdm: 4.65.0
2024-07-08 20:56:57,861:INFO:               numpy: 1.24.2
2024-07-08 20:56:57,861:INFO:              pandas: 2.1.4
2024-07-08 20:56:57,862:INFO:              jinja2: 3.1.3
2024-07-08 20:56:57,862:INFO:               scipy: 1.10.1
2024-07-08 20:56:57,862:INFO:              joblib: 1.1.0
2024-07-08 20:56:57,862:INFO:             sklearn: 1.4.0
2024-07-08 20:56:57,862:INFO:                pyod: 2.0.1
2024-07-08 20:56:57,862:INFO:            imblearn: 0.12.3
2024-07-08 20:56:57,862:INFO:   category_encoders: 2.6.3
2024-07-08 20:56:57,862:INFO:            lightgbm: 4.4.0
2024-07-08 20:56:57,862:INFO:               numba: 0.60.0
2024-07-08 20:56:57,862:INFO:            requests: 2.31.0
2024-07-08 20:56:57,862:INFO:          matplotlib: 3.8.2
2024-07-08 20:56:57,862:INFO:          scikitplot: 0.3.7
2024-07-08 20:56:57,862:INFO:         yellowbrick: 1.5
2024-07-08 20:56:57,862:INFO:              plotly: 5.19.0
2024-07-08 20:56:57,862:INFO:    plotly-resampler: Not installed
2024-07-08 20:56:57,862:INFO:             kaleido: 0.2.1
2024-07-08 20:56:57,862:INFO:           schemdraw: 0.15
2024-07-08 20:56:57,862:INFO:         statsmodels: 0.14.2
2024-07-08 20:56:57,862:INFO:              sktime: 0.26.0
2024-07-08 20:56:57,862:INFO:               tbats: 1.1.3
2024-07-08 20:56:57,862:INFO:            pmdarima: 2.0.4
2024-07-08 20:56:57,862:INFO:              psutil: 5.9.0
2024-07-08 20:56:57,863:INFO:          markupsafe: 2.1.3
2024-07-08 20:56:57,863:INFO:             pickle5: Not installed
2024-07-08 20:56:57,863:INFO:         cloudpickle: 3.0.0
2024-07-08 20:56:57,863:INFO:         deprecation: 2.1.0
2024-07-08 20:56:57,863:INFO:              xxhash: 3.4.1
2024-07-08 20:56:57,863:INFO:           wurlitzer: 3.1.1
2024-07-08 20:56:57,863:INFO:PyCaret optional dependencies:
2024-07-08 20:56:57,863:INFO:                shap: Not installed
2024-07-08 20:56:57,863:INFO:           interpret: Not installed
2024-07-08 20:56:57,863:INFO:                umap: Not installed
2024-07-08 20:56:57,863:INFO:     ydata_profiling: Not installed
2024-07-08 20:56:57,863:INFO:  explainerdashboard: Not installed
2024-07-08 20:56:57,863:INFO:             autoviz: Not installed
2024-07-08 20:56:57,863:INFO:           fairlearn: Not installed
2024-07-08 20:56:57,863:INFO:          deepchecks: Not installed
2024-07-08 20:56:57,863:INFO:             xgboost: Not installed
2024-07-08 20:56:57,863:INFO:            catboost: Not installed
2024-07-08 20:56:57,863:INFO:              kmodes: Not installed
2024-07-08 20:56:57,863:INFO:             mlxtend: Not installed
2024-07-08 20:56:57,863:INFO:       statsforecast: Not installed
2024-07-08 20:56:57,863:INFO:        tune_sklearn: Not installed
2024-07-08 20:56:57,863:INFO:                 ray: Not installed
2024-07-08 20:56:57,864:INFO:            hyperopt: Not installed
2024-07-08 20:56:57,864:INFO:              optuna: Not installed
2024-07-08 20:56:57,864:INFO:               skopt: Not installed
2024-07-08 20:56:57,864:INFO:              mlflow: Not installed
2024-07-08 20:56:57,864:INFO:              gradio: Not installed
2024-07-08 20:56:57,864:INFO:             fastapi: Not installed
2024-07-08 20:56:57,864:INFO:             uvicorn: Not installed
2024-07-08 20:56:57,864:INFO:              m2cgen: Not installed
2024-07-08 20:56:57,864:INFO:           evidently: Not installed
2024-07-08 20:56:57,864:INFO:               fugue: Not installed
2024-07-08 20:56:57,864:INFO:           streamlit: Not installed
2024-07-08 20:56:57,864:INFO:             prophet: Not installed
2024-07-08 20:56:57,864:INFO:None
2024-07-08 20:56:57,864:INFO:Set up data.
2024-07-08 20:56:57,874:INFO:Set up folding strategy.
2024-07-08 20:56:57,875:INFO:Set up train/test split.
2024-07-08 20:56:57,886:INFO:Set up index.
2024-07-08 20:56:57,886:INFO:Assigning column types.
2024-07-08 20:56:57,890:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 20:56:57,955:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:56:57,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:57,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:57,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 20:56:58,035:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:58,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,060:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 20:56:58,101:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:58,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 20:56:58,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,194:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 20:56:58,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,331:INFO:Preparing preprocessing pipeline...
2024-07-08 20:56:58,332:INFO:Set up simple imputation.
2024-07-08 20:56:58,335:INFO:Set up encoding of ordinal features.
2024-07-08 20:56:58,336:INFO:Set up encoding of categorical features.
2024-07-08 20:56:58,336:INFO:Set up feature normalization.
2024-07-08 20:56:58,394:INFO:Finished creating preprocessing pipeline.
2024-07-08 20:56:58,416:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Age', 'SibSp', 'Parch',
                                             'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Sex...
                 TransformerWrapper(exclude=None, include=['Embarked', 'Title'],
                                    transformer=OneHotEncoder(cols=['Embarked',
                                                                    'Title'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 20:56:58,416:INFO:Creating final display dataframe.
2024-07-08 20:56:58,546:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 23)
5   Transformed train set shape         (623, 23)
6    Transformed test set shape         (268, 23)
7               Ignore features                10
8              Numeric features                 5
9          Categorical features                 3
10     Rows with missing values             77.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              4b68
2024-07-08 20:56:58,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 20:56:58,727:INFO:setup() successfully completed in 0.87s...............
2024-07-08 20:57:02,604:INFO:Initializing compare_models()
2024-07-08 20:57:02,604:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-08 20:57:02,604:INFO:Checking exceptions
2024-07-08 20:57:02,610:INFO:Preparing display monitor
2024-07-08 20:57:02,643:INFO:Initializing Logistic Regression
2024-07-08 20:57:02,644:INFO:Total runtime is 3.079573313395182e-06 minutes
2024-07-08 20:57:02,648:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:02,649:INFO:Initializing create_model()
2024-07-08 20:57:02,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:02,649:INFO:Checking exceptions
2024-07-08 20:57:02,650:INFO:Importing libraries
2024-07-08 20:57:02,650:INFO:Copying training dataset
2024-07-08 20:57:02,659:INFO:Defining folds
2024-07-08 20:57:02,659:INFO:Declaring metric variables
2024-07-08 20:57:02,663:INFO:Importing untrained model
2024-07-08 20:57:02,668:INFO:Logistic Regression Imported successfully
2024-07-08 20:57:02,675:INFO:Starting cross validation
2024-07-08 20:57:02,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:03,134:INFO:Calculating mean and std
2024-07-08 20:57:03,135:INFO:Creating metrics dataframe
2024-07-08 20:57:03,137:INFO:Uploading results into container
2024-07-08 20:57:03,137:INFO:Uploading model into container now
2024-07-08 20:57:03,138:INFO:_master_model_container: 1
2024-07-08 20:57:03,138:INFO:_display_container: 2
2024-07-08 20:57:03,138:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-08 20:57:03,138:INFO:create_model() successfully completed......................................
2024-07-08 20:57:03,260:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:03,260:INFO:Creating metrics dataframe
2024-07-08 20:57:03,267:INFO:Initializing K Neighbors Classifier
2024-07-08 20:57:03,267:INFO:Total runtime is 0.010394696394602457 minutes
2024-07-08 20:57:03,271:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:03,271:INFO:Initializing create_model()
2024-07-08 20:57:03,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:03,272:INFO:Checking exceptions
2024-07-08 20:57:03,272:INFO:Importing libraries
2024-07-08 20:57:03,272:INFO:Copying training dataset
2024-07-08 20:57:03,277:INFO:Defining folds
2024-07-08 20:57:03,277:INFO:Declaring metric variables
2024-07-08 20:57:03,280:INFO:Importing untrained model
2024-07-08 20:57:03,284:INFO:K Neighbors Classifier Imported successfully
2024-07-08 20:57:03,290:INFO:Starting cross validation
2024-07-08 20:57:03,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:03,681:INFO:Calculating mean and std
2024-07-08 20:57:03,682:INFO:Creating metrics dataframe
2024-07-08 20:57:03,685:INFO:Uploading results into container
2024-07-08 20:57:03,685:INFO:Uploading model into container now
2024-07-08 20:57:03,686:INFO:_master_model_container: 2
2024-07-08 20:57:03,686:INFO:_display_container: 2
2024-07-08 20:57:03,686:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-08 20:57:03,686:INFO:create_model() successfully completed......................................
2024-07-08 20:57:03,791:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:03,791:INFO:Creating metrics dataframe
2024-07-08 20:57:03,798:INFO:Initializing Naive Bayes
2024-07-08 20:57:03,798:INFO:Total runtime is 0.019249077637990317 minutes
2024-07-08 20:57:03,802:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:03,803:INFO:Initializing create_model()
2024-07-08 20:57:03,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:03,803:INFO:Checking exceptions
2024-07-08 20:57:03,803:INFO:Importing libraries
2024-07-08 20:57:03,803:INFO:Copying training dataset
2024-07-08 20:57:03,812:INFO:Defining folds
2024-07-08 20:57:03,812:INFO:Declaring metric variables
2024-07-08 20:57:03,816:INFO:Importing untrained model
2024-07-08 20:57:03,819:INFO:Naive Bayes Imported successfully
2024-07-08 20:57:03,825:INFO:Starting cross validation
2024-07-08 20:57:03,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:04,127:INFO:Calculating mean and std
2024-07-08 20:57:04,128:INFO:Creating metrics dataframe
2024-07-08 20:57:04,130:INFO:Uploading results into container
2024-07-08 20:57:04,130:INFO:Uploading model into container now
2024-07-08 20:57:04,131:INFO:_master_model_container: 3
2024-07-08 20:57:04,131:INFO:_display_container: 2
2024-07-08 20:57:04,131:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-08 20:57:04,131:INFO:create_model() successfully completed......................................
2024-07-08 20:57:04,234:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:04,234:INFO:Creating metrics dataframe
2024-07-08 20:57:04,243:INFO:Initializing Decision Tree Classifier
2024-07-08 20:57:04,244:INFO:Total runtime is 0.02667289972305298 minutes
2024-07-08 20:57:04,247:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:04,247:INFO:Initializing create_model()
2024-07-08 20:57:04,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:04,247:INFO:Checking exceptions
2024-07-08 20:57:04,248:INFO:Importing libraries
2024-07-08 20:57:04,248:INFO:Copying training dataset
2024-07-08 20:57:04,254:INFO:Defining folds
2024-07-08 20:57:04,254:INFO:Declaring metric variables
2024-07-08 20:57:04,258:INFO:Importing untrained model
2024-07-08 20:57:04,263:INFO:Decision Tree Classifier Imported successfully
2024-07-08 20:57:04,269:INFO:Starting cross validation
2024-07-08 20:57:04,270:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:04,576:INFO:Calculating mean and std
2024-07-08 20:57:04,577:INFO:Creating metrics dataframe
2024-07-08 20:57:04,579:INFO:Uploading results into container
2024-07-08 20:57:04,579:INFO:Uploading model into container now
2024-07-08 20:57:04,580:INFO:_master_model_container: 4
2024-07-08 20:57:04,580:INFO:_display_container: 2
2024-07-08 20:57:04,580:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-07-08 20:57:04,580:INFO:create_model() successfully completed......................................
2024-07-08 20:57:04,691:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:04,691:INFO:Creating metrics dataframe
2024-07-08 20:57:04,699:INFO:Initializing SVM - Linear Kernel
2024-07-08 20:57:04,700:INFO:Total runtime is 0.034271546204884845 minutes
2024-07-08 20:57:04,704:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:04,705:INFO:Initializing create_model()
2024-07-08 20:57:04,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:04,705:INFO:Checking exceptions
2024-07-08 20:57:04,706:INFO:Importing libraries
2024-07-08 20:57:04,706:INFO:Copying training dataset
2024-07-08 20:57:04,712:INFO:Defining folds
2024-07-08 20:57:04,712:INFO:Declaring metric variables
2024-07-08 20:57:04,715:INFO:Importing untrained model
2024-07-08 20:57:04,719:INFO:SVM - Linear Kernel Imported successfully
2024-07-08 20:57:04,725:INFO:Starting cross validation
2024-07-08 20:57:04,729:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:04,984:INFO:Calculating mean and std
2024-07-08 20:57:04,985:INFO:Creating metrics dataframe
2024-07-08 20:57:04,987:INFO:Uploading results into container
2024-07-08 20:57:04,987:INFO:Uploading model into container now
2024-07-08 20:57:04,988:INFO:_master_model_container: 5
2024-07-08 20:57:04,988:INFO:_display_container: 2
2024-07-08 20:57:04,988:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-08 20:57:04,988:INFO:create_model() successfully completed......................................
2024-07-08 20:57:05,100:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:05,100:INFO:Creating metrics dataframe
2024-07-08 20:57:05,110:INFO:Initializing Ridge Classifier
2024-07-08 20:57:05,110:INFO:Total runtime is 0.041112164656321205 minutes
2024-07-08 20:57:05,114:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:05,114:INFO:Initializing create_model()
2024-07-08 20:57:05,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:05,114:INFO:Checking exceptions
2024-07-08 20:57:05,115:INFO:Importing libraries
2024-07-08 20:57:05,115:INFO:Copying training dataset
2024-07-08 20:57:05,120:INFO:Defining folds
2024-07-08 20:57:05,120:INFO:Declaring metric variables
2024-07-08 20:57:05,123:INFO:Importing untrained model
2024-07-08 20:57:05,127:INFO:Ridge Classifier Imported successfully
2024-07-08 20:57:05,133:INFO:Starting cross validation
2024-07-08 20:57:05,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:05,362:INFO:Calculating mean and std
2024-07-08 20:57:05,363:INFO:Creating metrics dataframe
2024-07-08 20:57:05,366:INFO:Uploading results into container
2024-07-08 20:57:05,366:INFO:Uploading model into container now
2024-07-08 20:57:05,366:INFO:_master_model_container: 6
2024-07-08 20:57:05,367:INFO:_display_container: 2
2024-07-08 20:57:05,367:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-07-08 20:57:05,367:INFO:create_model() successfully completed......................................
2024-07-08 20:57:05,473:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:05,473:INFO:Creating metrics dataframe
2024-07-08 20:57:05,482:INFO:Initializing Random Forest Classifier
2024-07-08 20:57:05,482:INFO:Total runtime is 0.047316451867421463 minutes
2024-07-08 20:57:05,486:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:05,486:INFO:Initializing create_model()
2024-07-08 20:57:05,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:05,487:INFO:Checking exceptions
2024-07-08 20:57:05,487:INFO:Importing libraries
2024-07-08 20:57:05,487:INFO:Copying training dataset
2024-07-08 20:57:05,492:INFO:Defining folds
2024-07-08 20:57:05,492:INFO:Declaring metric variables
2024-07-08 20:57:05,495:INFO:Importing untrained model
2024-07-08 20:57:05,499:INFO:Random Forest Classifier Imported successfully
2024-07-08 20:57:05,509:INFO:Starting cross validation
2024-07-08 20:57:05,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:06,083:INFO:Calculating mean and std
2024-07-08 20:57:06,084:INFO:Creating metrics dataframe
2024-07-08 20:57:06,086:INFO:Uploading results into container
2024-07-08 20:57:06,086:INFO:Uploading model into container now
2024-07-08 20:57:06,087:INFO:_master_model_container: 7
2024-07-08 20:57:06,087:INFO:_display_container: 2
2024-07-08 20:57:06,087:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-07-08 20:57:06,088:INFO:create_model() successfully completed......................................
2024-07-08 20:57:06,192:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:06,193:INFO:Creating metrics dataframe
2024-07-08 20:57:06,202:INFO:Initializing Quadratic Discriminant Analysis
2024-07-08 20:57:06,203:INFO:Total runtime is 0.05931891600290934 minutes
2024-07-08 20:57:06,207:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:06,207:INFO:Initializing create_model()
2024-07-08 20:57:06,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:06,207:INFO:Checking exceptions
2024-07-08 20:57:06,207:INFO:Importing libraries
2024-07-08 20:57:06,207:INFO:Copying training dataset
2024-07-08 20:57:06,215:INFO:Defining folds
2024-07-08 20:57:06,215:INFO:Declaring metric variables
2024-07-08 20:57:06,219:INFO:Importing untrained model
2024-07-08 20:57:06,222:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-08 20:57:06,229:INFO:Starting cross validation
2024-07-08 20:57:06,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:06,353:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,360:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,360:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,364:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,365:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,366:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,372:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,384:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,390:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,406:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 20:57:06,427:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:06,429:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:06,430:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:06,431:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:06,435:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:06,442:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:06,462:INFO:Calculating mean and std
2024-07-08 20:57:06,463:INFO:Creating metrics dataframe
2024-07-08 20:57:06,465:INFO:Uploading results into container
2024-07-08 20:57:06,465:INFO:Uploading model into container now
2024-07-08 20:57:06,466:INFO:_master_model_container: 8
2024-07-08 20:57:06,466:INFO:_display_container: 2
2024-07-08 20:57:06,467:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-08 20:57:06,467:INFO:create_model() successfully completed......................................
2024-07-08 20:57:06,570:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:06,570:INFO:Creating metrics dataframe
2024-07-08 20:57:06,579:INFO:Initializing Ada Boost Classifier
2024-07-08 20:57:06,579:INFO:Total runtime is 0.06559967994689941 minutes
2024-07-08 20:57:06,583:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:06,583:INFO:Initializing create_model()
2024-07-08 20:57:06,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:06,584:INFO:Checking exceptions
2024-07-08 20:57:06,584:INFO:Importing libraries
2024-07-08 20:57:06,584:INFO:Copying training dataset
2024-07-08 20:57:06,590:INFO:Defining folds
2024-07-08 20:57:06,590:INFO:Declaring metric variables
2024-07-08 20:57:06,593:INFO:Importing untrained model
2024-07-08 20:57:06,596:INFO:Ada Boost Classifier Imported successfully
2024-07-08 20:57:06,603:INFO:Starting cross validation
2024-07-08 20:57:06,606:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:06,720:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,724:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,742:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,746:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,746:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,747:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,758:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,759:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,765:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:06,783:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 20:57:07,029:INFO:Calculating mean and std
2024-07-08 20:57:07,030:INFO:Creating metrics dataframe
2024-07-08 20:57:07,032:INFO:Uploading results into container
2024-07-08 20:57:07,032:INFO:Uploading model into container now
2024-07-08 20:57:07,033:INFO:_master_model_container: 9
2024-07-08 20:57:07,033:INFO:_display_container: 2
2024-07-08 20:57:07,033:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-07-08 20:57:07,033:INFO:create_model() successfully completed......................................
2024-07-08 20:57:07,136:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:07,136:INFO:Creating metrics dataframe
2024-07-08 20:57:07,146:INFO:Initializing Gradient Boosting Classifier
2024-07-08 20:57:07,146:INFO:Total runtime is 0.07504576444625854 minutes
2024-07-08 20:57:07,149:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:07,150:INFO:Initializing create_model()
2024-07-08 20:57:07,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:07,150:INFO:Checking exceptions
2024-07-08 20:57:07,151:INFO:Importing libraries
2024-07-08 20:57:07,151:INFO:Copying training dataset
2024-07-08 20:57:07,157:INFO:Defining folds
2024-07-08 20:57:07,158:INFO:Declaring metric variables
2024-07-08 20:57:07,161:INFO:Importing untrained model
2024-07-08 20:57:07,165:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 20:57:07,171:INFO:Starting cross validation
2024-07-08 20:57:07,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:07,681:INFO:Calculating mean and std
2024-07-08 20:57:07,682:INFO:Creating metrics dataframe
2024-07-08 20:57:07,684:INFO:Uploading results into container
2024-07-08 20:57:07,684:INFO:Uploading model into container now
2024-07-08 20:57:07,685:INFO:_master_model_container: 10
2024-07-08 20:57:07,685:INFO:_display_container: 2
2024-07-08 20:57:07,686:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:57:07,686:INFO:create_model() successfully completed......................................
2024-07-08 20:57:07,796:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:07,796:INFO:Creating metrics dataframe
2024-07-08 20:57:07,808:INFO:Initializing Linear Discriminant Analysis
2024-07-08 20:57:07,808:INFO:Total runtime is 0.08608478307723999 minutes
2024-07-08 20:57:07,813:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:07,813:INFO:Initializing create_model()
2024-07-08 20:57:07,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:07,813:INFO:Checking exceptions
2024-07-08 20:57:07,813:INFO:Importing libraries
2024-07-08 20:57:07,814:INFO:Copying training dataset
2024-07-08 20:57:07,819:INFO:Defining folds
2024-07-08 20:57:07,820:INFO:Declaring metric variables
2024-07-08 20:57:07,823:INFO:Importing untrained model
2024-07-08 20:57:07,826:INFO:Linear Discriminant Analysis Imported successfully
2024-07-08 20:57:07,833:INFO:Starting cross validation
2024-07-08 20:57:07,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:08,070:INFO:Calculating mean and std
2024-07-08 20:57:08,072:INFO:Creating metrics dataframe
2024-07-08 20:57:08,074:INFO:Uploading results into container
2024-07-08 20:57:08,074:INFO:Uploading model into container now
2024-07-08 20:57:08,075:INFO:_master_model_container: 11
2024-07-08 20:57:08,075:INFO:_display_container: 2
2024-07-08 20:57:08,075:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-08 20:57:08,076:INFO:create_model() successfully completed......................................
2024-07-08 20:57:08,180:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:08,180:INFO:Creating metrics dataframe
2024-07-08 20:57:08,190:INFO:Initializing Extra Trees Classifier
2024-07-08 20:57:08,190:INFO:Total runtime is 0.09243770043055216 minutes
2024-07-08 20:57:08,193:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:08,194:INFO:Initializing create_model()
2024-07-08 20:57:08,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:08,194:INFO:Checking exceptions
2024-07-08 20:57:08,194:INFO:Importing libraries
2024-07-08 20:57:08,194:INFO:Copying training dataset
2024-07-08 20:57:08,200:INFO:Defining folds
2024-07-08 20:57:08,200:INFO:Declaring metric variables
2024-07-08 20:57:08,205:INFO:Importing untrained model
2024-07-08 20:57:08,210:INFO:Extra Trees Classifier Imported successfully
2024-07-08 20:57:08,217:INFO:Starting cross validation
2024-07-08 20:57:08,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:08,804:INFO:Calculating mean and std
2024-07-08 20:57:08,806:INFO:Creating metrics dataframe
2024-07-08 20:57:08,809:INFO:Uploading results into container
2024-07-08 20:57:08,809:INFO:Uploading model into container now
2024-07-08 20:57:08,810:INFO:_master_model_container: 12
2024-07-08 20:57:08,810:INFO:_display_container: 2
2024-07-08 20:57:08,811:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-07-08 20:57:08,811:INFO:create_model() successfully completed......................................
2024-07-08 20:57:08,913:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:08,914:INFO:Creating metrics dataframe
2024-07-08 20:57:08,924:INFO:Initializing Light Gradient Boosting Machine
2024-07-08 20:57:08,924:INFO:Total runtime is 0.10467836459477742 minutes
2024-07-08 20:57:08,927:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:08,927:INFO:Initializing create_model()
2024-07-08 20:57:08,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:08,928:INFO:Checking exceptions
2024-07-08 20:57:08,928:INFO:Importing libraries
2024-07-08 20:57:08,928:INFO:Copying training dataset
2024-07-08 20:57:08,934:INFO:Defining folds
2024-07-08 20:57:08,934:INFO:Declaring metric variables
2024-07-08 20:57:08,937:INFO:Importing untrained model
2024-07-08 20:57:08,940:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-08 20:57:08,947:INFO:Starting cross validation
2024-07-08 20:57:08,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:15,011:INFO:Calculating mean and std
2024-07-08 20:57:15,013:INFO:Creating metrics dataframe
2024-07-08 20:57:15,015:INFO:Uploading results into container
2024-07-08 20:57:15,015:INFO:Uploading model into container now
2024-07-08 20:57:15,016:INFO:_master_model_container: 13
2024-07-08 20:57:15,016:INFO:_display_container: 2
2024-07-08 20:57:15,016:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-08 20:57:15,017:INFO:create_model() successfully completed......................................
2024-07-08 20:57:15,132:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:15,132:INFO:Creating metrics dataframe
2024-07-08 20:57:15,144:INFO:Initializing Dummy Classifier
2024-07-08 20:57:15,144:INFO:Total runtime is 0.2083410143852234 minutes
2024-07-08 20:57:15,147:INFO:SubProcess create_model() called ==================================
2024-07-08 20:57:15,148:INFO:Initializing create_model()
2024-07-08 20:57:15,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18db9f510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:15,148:INFO:Checking exceptions
2024-07-08 20:57:15,148:INFO:Importing libraries
2024-07-08 20:57:15,149:INFO:Copying training dataset
2024-07-08 20:57:15,155:INFO:Defining folds
2024-07-08 20:57:15,155:INFO:Declaring metric variables
2024-07-08 20:57:15,159:INFO:Importing untrained model
2024-07-08 20:57:15,163:INFO:Dummy Classifier Imported successfully
2024-07-08 20:57:15,171:INFO:Starting cross validation
2024-07-08 20:57:15,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 20:57:15,359:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,366:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,375:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,377:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,385:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,388:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,389:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,391:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,391:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,399:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 20:57:15,406:INFO:Calculating mean and std
2024-07-08 20:57:15,407:INFO:Creating metrics dataframe
2024-07-08 20:57:15,409:INFO:Uploading results into container
2024-07-08 20:57:15,410:INFO:Uploading model into container now
2024-07-08 20:57:15,410:INFO:_master_model_container: 14
2024-07-08 20:57:15,410:INFO:_display_container: 2
2024-07-08 20:57:15,411:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-07-08 20:57:15,411:INFO:create_model() successfully completed......................................
2024-07-08 20:57:15,514:INFO:SubProcess create_model() end ==================================
2024-07-08 20:57:15,514:INFO:Creating metrics dataframe
2024-07-08 20:57:15,526:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-08 20:57:15,534:INFO:Initializing create_model()
2024-07-08 20:57:15,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 20:57:15,534:INFO:Checking exceptions
2024-07-08 20:57:15,536:INFO:Importing libraries
2024-07-08 20:57:15,536:INFO:Copying training dataset
2024-07-08 20:57:15,542:INFO:Defining folds
2024-07-08 20:57:15,542:INFO:Declaring metric variables
2024-07-08 20:57:15,542:INFO:Importing untrained model
2024-07-08 20:57:15,542:INFO:Declaring custom model
2024-07-08 20:57:15,543:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 20:57:15,544:INFO:Cross validation set to False
2024-07-08 20:57:15,544:INFO:Fitting Model
2024-07-08 20:57:15,740:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:57:15,740:INFO:create_model() successfully completed......................................
2024-07-08 20:57:15,886:INFO:_master_model_container: 14
2024-07-08 20:57:15,886:INFO:_display_container: 2
2024-07-08 20:57:15,887:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 20:57:15,887:INFO:compare_models() successfully completed......................................
2024-07-08 21:00:57,434:INFO:Initializing create_model()
2024-07-08 21:00:57,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:00:57,435:INFO:Checking exceptions
2024-07-08 21:00:57,452:INFO:Importing libraries
2024-07-08 21:00:57,452:INFO:Copying training dataset
2024-07-08 21:00:57,460:INFO:Defining folds
2024-07-08 21:00:57,460:INFO:Declaring metric variables
2024-07-08 21:00:57,464:INFO:Importing untrained model
2024-07-08 21:00:57,468:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:00:57,475:INFO:Starting cross validation
2024-07-08 21:00:57,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:00:57,970:INFO:Calculating mean and std
2024-07-08 21:00:57,971:INFO:Creating metrics dataframe
2024-07-08 21:00:57,975:INFO:Finalizing model
2024-07-08 21:00:58,209:INFO:Uploading results into container
2024-07-08 21:00:58,210:INFO:Uploading model into container now
2024-07-08 21:00:58,221:INFO:_master_model_container: 15
2024-07-08 21:00:58,221:INFO:_display_container: 3
2024-07-08 21:00:58,222:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:00:58,222:INFO:create_model() successfully completed......................................
2024-07-08 21:01:37,115:INFO:Initializing tune_model()
2024-07-08 21:01:37,115:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-08 21:01:37,115:INFO:Checking exceptions
2024-07-08 21:01:37,138:INFO:Copying training dataset
2024-07-08 21:01:37,143:INFO:Checking base model
2024-07-08 21:01:37,143:INFO:Base model : Gradient Boosting Classifier
2024-07-08 21:01:37,149:INFO:Declaring metric variables
2024-07-08 21:01:37,154:INFO:Defining Hyperparameters
2024-07-08 21:01:37,272:INFO:Tuning with n_jobs=-1
2024-07-08 21:01:37,273:INFO:Initializing RandomizedSearchCV
2024-07-08 21:01:42,242:INFO:best_params: {'actual_estimator__subsample': 0.65, 'actual_estimator__n_estimators': 120, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__learning_rate': 0.05}
2024-07-08 21:01:42,243:INFO:Hyperparameter search completed
2024-07-08 21:01:42,243:INFO:SubProcess create_model() called ==================================
2024-07-08 21:01:42,243:INFO:Initializing create_model()
2024-07-08 21:01:42,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x18b477310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.65, 'n_estimators': 120, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 6, 'learning_rate': 0.05})
2024-07-08 21:01:42,243:INFO:Checking exceptions
2024-07-08 21:01:42,244:INFO:Importing libraries
2024-07-08 21:01:42,244:INFO:Copying training dataset
2024-07-08 21:01:42,248:INFO:Defining folds
2024-07-08 21:01:42,248:INFO:Declaring metric variables
2024-07-08 21:01:42,251:INFO:Importing untrained model
2024-07-08 21:01:42,251:INFO:Declaring custom model
2024-07-08 21:01:42,254:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:01:42,260:INFO:Starting cross validation
2024-07-08 21:01:42,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:01:42,943:INFO:Calculating mean and std
2024-07-08 21:01:42,944:INFO:Creating metrics dataframe
2024-07-08 21:01:42,949:INFO:Finalizing model
2024-07-08 21:01:43,214:INFO:Uploading results into container
2024-07-08 21:01:43,214:INFO:Uploading model into container now
2024-07-08 21:01:43,215:INFO:_master_model_container: 16
2024-07-08 21:01:43,215:INFO:_display_container: 4
2024-07-08 21:01:43,215:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0002, min_samples_leaf=3,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=120, n_iter_no_change=None,
                           random_state=42, subsample=0.65, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:01:43,215:INFO:create_model() successfully completed......................................
2024-07-08 21:01:43,327:INFO:SubProcess create_model() end ==================================
2024-07-08 21:01:43,327:INFO:choose_better activated
2024-07-08 21:01:43,331:INFO:SubProcess create_model() called ==================================
2024-07-08 21:01:43,332:INFO:Initializing create_model()
2024-07-08 21:01:43,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:01:43,332:INFO:Checking exceptions
2024-07-08 21:01:43,334:INFO:Importing libraries
2024-07-08 21:01:43,334:INFO:Copying training dataset
2024-07-08 21:01:43,340:INFO:Defining folds
2024-07-08 21:01:43,340:INFO:Declaring metric variables
2024-07-08 21:01:43,340:INFO:Importing untrained model
2024-07-08 21:01:43,340:INFO:Declaring custom model
2024-07-08 21:01:43,341:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:01:43,341:INFO:Starting cross validation
2024-07-08 21:01:43,343:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:01:43,760:INFO:Calculating mean and std
2024-07-08 21:01:43,760:INFO:Creating metrics dataframe
2024-07-08 21:01:43,762:INFO:Finalizing model
2024-07-08 21:01:43,940:INFO:Uploading results into container
2024-07-08 21:01:43,940:INFO:Uploading model into container now
2024-07-08 21:01:43,940:INFO:_master_model_container: 17
2024-07-08 21:01:43,940:INFO:_display_container: 5
2024-07-08 21:01:43,941:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:01:43,941:INFO:create_model() successfully completed......................................
2024-07-08 21:01:44,041:INFO:SubProcess create_model() end ==================================
2024-07-08 21:01:44,042:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.8331
2024-07-08 21:01:44,043:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0002, min_samples_leaf=3,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=120, n_iter_no_change=None,
                           random_state=42, subsample=0.65, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.8331
2024-07-08 21:01:44,043:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-07-08 21:01:44,043:INFO:choose_better completed
2024-07-08 21:01:44,043:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-07-08 21:01:44,055:INFO:_master_model_container: 17
2024-07-08 21:01:44,055:INFO:_display_container: 4
2024-07-08 21:01:44,055:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:01:44,055:INFO:tune_model() successfully completed......................................
2024-07-08 21:03:02,065:INFO:Initializing plot_model()
2024-07-08 21:03:02,065:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:03:02,065:INFO:Checking exceptions
2024-07-08 21:03:02,071:INFO:Preloading libraries
2024-07-08 21:03:02,083:INFO:Copying training dataset
2024-07-08 21:03:02,083:INFO:Plot type: auc
2024-07-08 21:03:02,227:INFO:Fitting Model
2024-07-08 21:03:02,230:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-07-08 21:03:02,230:INFO:Scoring test/hold-out set
2024-07-08 21:03:02,506:INFO:Visual Rendered Successfully
2024-07-08 21:03:02,620:INFO:plot_model() successfully completed......................................
2024-07-08 21:03:40,489:INFO:Initializing plot_model()
2024-07-08 21:03:40,489:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=learning, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:03:40,489:INFO:Checking exceptions
2024-07-08 21:03:40,495:INFO:Preloading libraries
2024-07-08 21:03:40,507:INFO:Copying training dataset
2024-07-08 21:03:40,507:INFO:Plot type: learning
2024-07-08 21:03:40,651:INFO:Fitting Model
2024-07-08 21:03:43,240:INFO:Visual Rendered Successfully
2024-07-08 21:03:43,347:INFO:plot_model() successfully completed......................................
2024-07-08 21:04:20,091:INFO:Initializing evaluate_model()
2024-07-08 21:04:20,092:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-08 21:04:20,110:INFO:Initializing plot_model()
2024-07-08 21:04:20,111:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-08 21:04:20,111:INFO:Checking exceptions
2024-07-08 21:04:20,115:INFO:Preloading libraries
2024-07-08 21:04:20,123:INFO:Copying training dataset
2024-07-08 21:04:20,123:INFO:Plot type: pipeline
2024-07-08 21:04:20,323:INFO:Visual Rendered Successfully
2024-07-08 21:04:20,433:INFO:plot_model() successfully completed......................................
2024-07-08 21:04:20,436:INFO:Initializing plot_model()
2024-07-08 21:04:20,436:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:04:20,436:INFO:Checking exceptions
2024-07-08 21:04:20,442:INFO:Preloading libraries
2024-07-08 21:04:20,454:INFO:Copying training dataset
2024-07-08 21:04:20,454:INFO:Plot type: confusion_matrix
2024-07-08 21:04:20,694:INFO:Fitting Model
2024-07-08 21:04:20,694:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-07-08 21:04:20,694:INFO:Scoring test/hold-out set
2024-07-08 21:04:20,824:INFO:Visual Rendered Successfully
2024-07-08 21:04:20,945:INFO:plot_model() successfully completed......................................
2024-07-08 21:04:31,134:INFO:Initializing plot_model()
2024-07-08 21:04:31,135:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-08 21:04:31,135:INFO:Checking exceptions
2024-07-08 21:04:31,139:INFO:Preloading libraries
2024-07-08 21:04:31,147:INFO:Copying training dataset
2024-07-08 21:04:31,147:INFO:Plot type: pr
2024-07-08 21:04:31,260:INFO:Fitting Model
2024-07-08 21:04:31,260:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-07-08 21:04:31,260:INFO:Scoring test/hold-out set
2024-07-08 21:04:31,446:INFO:Visual Rendered Successfully
2024-07-08 21:04:31,559:INFO:plot_model() successfully completed......................................
2024-07-08 21:04:34,557:INFO:Initializing plot_model()
2024-07-08 21:04:34,557:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=manifold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-08 21:04:34,558:INFO:Checking exceptions
2024-07-08 21:04:34,562:INFO:Preloading libraries
2024-07-08 21:04:34,571:INFO:Copying training dataset
2024-07-08 21:04:34,571:INFO:Plot type: manifold
2024-07-08 21:04:34,708:INFO:Fitting & Transforming Model
2024-07-08 21:04:36,097:INFO:Visual Rendered Successfully
2024-07-08 21:04:36,246:INFO:plot_model() successfully completed......................................
2024-07-08 21:04:40,915:INFO:Initializing plot_model()
2024-07-08 21:04:40,915:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-08 21:04:40,915:INFO:Checking exceptions
2024-07-08 21:04:40,919:INFO:Preloading libraries
2024-07-08 21:04:40,928:INFO:Copying training dataset
2024-07-08 21:04:40,928:INFO:Plot type: feature_all
2024-07-08 21:04:40,960:WARNING:No coef_ found. Trying feature_importances_
2024-07-08 21:04:41,216:INFO:Visual Rendered Successfully
2024-07-08 21:04:41,329:INFO:plot_model() successfully completed......................................
2024-07-08 21:06:03,045:INFO:Initializing plot_model()
2024-07-08 21:06:03,046:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:06:03,046:INFO:Checking exceptions
2024-07-08 21:06:03,051:INFO:Preloading libraries
2024-07-08 21:06:03,061:INFO:Copying training dataset
2024-07-08 21:06:03,061:INFO:Plot type: error
2024-07-08 21:06:03,199:INFO:Fitting Model
2024-07-08 21:06:03,200:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-07-08 21:06:03,200:INFO:Scoring test/hold-out set
2024-07-08 21:06:03,414:INFO:Visual Rendered Successfully
2024-07-08 21:06:03,531:INFO:plot_model() successfully completed......................................
2024-07-08 21:06:18,869:INFO:Initializing plot_model()
2024-07-08 21:06:18,870:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:06:18,870:INFO:Checking exceptions
2024-07-08 21:06:18,878:INFO:Preloading libraries
2024-07-08 21:06:18,889:INFO:Copying training dataset
2024-07-08 21:06:18,890:INFO:Plot type: feature
2024-07-08 21:06:18,891:WARNING:No coef_ found. Trying feature_importances_
2024-07-08 21:06:19,119:INFO:Visual Rendered Successfully
2024-07-08 21:06:19,241:INFO:plot_model() successfully completed......................................
2024-07-08 21:08:09,082:INFO:Initializing create_model()
2024-07-08 21:08:09,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:08:09,082:INFO:Checking exceptions
2024-07-08 21:08:09,100:INFO:Importing libraries
2024-07-08 21:08:09,100:INFO:Copying training dataset
2024-07-08 21:08:09,108:INFO:Defining folds
2024-07-08 21:08:09,109:INFO:Declaring metric variables
2024-07-08 21:08:09,112:INFO:Importing untrained model
2024-07-08 21:08:09,116:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-08 21:08:09,123:INFO:Starting cross validation
2024-07-08 21:08:09,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:08:14,614:INFO:Calculating mean and std
2024-07-08 21:08:14,616:INFO:Creating metrics dataframe
2024-07-08 21:08:14,621:INFO:Finalizing model
2024-07-08 21:08:14,682:INFO:[LightGBM] [Info] Number of positive: 239, number of negative: 384
2024-07-08 21:08:14,689:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.003956 seconds.
2024-07-08 21:08:14,689:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-08 21:08:14,689:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-08 21:08:14,689:INFO:[LightGBM] [Info] Total Bins 219
2024-07-08 21:08:14,690:INFO:[LightGBM] [Info] Number of data points in the train set: 623, number of used features: 13
2024-07-08 21:08:14,690:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.383628 -> initscore=-0.474179
2024-07-08 21:08:14,691:INFO:[LightGBM] [Info] Start training from score -0.474179
2024-07-08 21:08:14,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:08:14,843:INFO:Uploading results into container
2024-07-08 21:08:14,843:INFO:Uploading model into container now
2024-07-08 21:08:14,853:INFO:_master_model_container: 18
2024-07-08 21:08:14,854:INFO:_display_container: 5
2024-07-08 21:08:14,854:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-08 21:08:14,854:INFO:create_model() successfully completed......................................
2024-07-08 21:08:14,983:INFO:Initializing create_model()
2024-07-08 21:08:14,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:08:14,983:INFO:Checking exceptions
2024-07-08 21:08:15,001:INFO:Importing libraries
2024-07-08 21:08:15,001:INFO:Copying training dataset
2024-07-08 21:08:15,010:INFO:Defining folds
2024-07-08 21:08:15,010:INFO:Declaring metric variables
2024-07-08 21:08:15,014:INFO:Importing untrained model
2024-07-08 21:08:15,018:INFO:Random Forest Classifier Imported successfully
2024-07-08 21:08:15,025:INFO:Starting cross validation
2024-07-08 21:08:15,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:08:15,632:INFO:Calculating mean and std
2024-07-08 21:08:15,633:INFO:Creating metrics dataframe
2024-07-08 21:08:15,638:INFO:Finalizing model
2024-07-08 21:08:16,022:INFO:Uploading results into container
2024-07-08 21:08:16,023:INFO:Uploading model into container now
2024-07-08 21:08:16,032:INFO:_master_model_container: 19
2024-07-08 21:08:16,032:INFO:_display_container: 6
2024-07-08 21:08:16,033:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-07-08 21:08:16,033:INFO:create_model() successfully completed......................................
2024-07-08 21:08:16,149:INFO:Initializing create_model()
2024-07-08 21:08:16,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:08:16,149:INFO:Checking exceptions
2024-07-08 21:09:01,952:INFO:Initializing create_model()
2024-07-08 21:09:01,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:09:01,953:INFO:Checking exceptions
2024-07-08 21:09:01,970:INFO:Importing libraries
2024-07-08 21:09:01,971:INFO:Copying training dataset
2024-07-08 21:09:01,982:INFO:Defining folds
2024-07-08 21:09:01,982:INFO:Declaring metric variables
2024-07-08 21:09:01,986:INFO:Importing untrained model
2024-07-08 21:09:01,990:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-08 21:09:01,999:INFO:Starting cross validation
2024-07-08 21:09:02,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:09:07,723:INFO:Calculating mean and std
2024-07-08 21:09:07,724:INFO:Creating metrics dataframe
2024-07-08 21:09:07,730:INFO:Finalizing model
2024-07-08 21:09:07,788:INFO:[LightGBM] [Info] Number of positive: 239, number of negative: 384
2024-07-08 21:09:07,790:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001365 seconds.
2024-07-08 21:09:07,790:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-08 21:09:07,790:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-08 21:09:07,790:INFO:[LightGBM] [Info] Total Bins 219
2024-07-08 21:09:07,791:INFO:[LightGBM] [Info] Number of data points in the train set: 623, number of used features: 13
2024-07-08 21:09:07,791:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.383628 -> initscore=-0.474179
2024-07-08 21:09:07,791:INFO:[LightGBM] [Info] Start training from score -0.474179
2024-07-08 21:09:07,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:09:07,910:INFO:Uploading results into container
2024-07-08 21:09:07,911:INFO:Uploading model into container now
2024-07-08 21:09:07,921:INFO:_master_model_container: 20
2024-07-08 21:09:07,922:INFO:_display_container: 7
2024-07-08 21:09:07,922:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-08 21:09:07,922:INFO:create_model() successfully completed......................................
2024-07-08 21:09:08,073:INFO:Initializing create_model()
2024-07-08 21:09:08,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:09:08,073:INFO:Checking exceptions
2024-07-08 21:09:08,091:INFO:Importing libraries
2024-07-08 21:09:08,091:INFO:Copying training dataset
2024-07-08 21:09:08,100:INFO:Defining folds
2024-07-08 21:09:08,101:INFO:Declaring metric variables
2024-07-08 21:09:08,104:INFO:Importing untrained model
2024-07-08 21:09:08,107:INFO:Random Forest Classifier Imported successfully
2024-07-08 21:09:08,112:INFO:Starting cross validation
2024-07-08 21:09:08,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:09:08,896:INFO:Calculating mean and std
2024-07-08 21:09:08,896:INFO:Creating metrics dataframe
2024-07-08 21:09:08,902:INFO:Finalizing model
2024-07-08 21:09:09,113:INFO:Uploading results into container
2024-07-08 21:09:09,113:INFO:Uploading model into container now
2024-07-08 21:09:09,122:INFO:_master_model_container: 21
2024-07-08 21:09:09,123:INFO:_display_container: 8
2024-07-08 21:09:09,123:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-07-08 21:09:09,123:INFO:create_model() successfully completed......................................
2024-07-08 21:09:13,093:INFO:Initializing blend_models()
2024-07-08 21:09:13,093:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator_list=[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-08 21:09:13,094:INFO:Checking exceptions
2024-07-08 21:09:13,115:INFO:Importing libraries
2024-07-08 21:09:13,115:INFO:Copying training dataset
2024-07-08 21:09:13,119:INFO:Getting model names
2024-07-08 21:09:13,124:INFO:SubProcess create_model() called ==================================
2024-07-08 21:09:13,129:INFO:Initializing create_model()
2024-07-08 21:09:13,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=42, verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1911c4790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:09:13,130:INFO:Checking exceptions
2024-07-08 21:09:13,130:INFO:Importing libraries
2024-07-08 21:09:13,130:INFO:Copying training dataset
2024-07-08 21:09:13,139:INFO:Defining folds
2024-07-08 21:09:13,139:INFO:Declaring metric variables
2024-07-08 21:09:13,142:INFO:Importing untrained model
2024-07-08 21:09:13,142:INFO:Declaring custom model
2024-07-08 21:09:13,147:INFO:Voting Classifier Imported successfully
2024-07-08 21:09:13,155:INFO:Starting cross validation
2024-07-08 21:09:13,157:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:09:16,284:INFO:Calculating mean and std
2024-07-08 21:09:16,285:INFO:Creating metrics dataframe
2024-07-08 21:09:16,290:INFO:Finalizing model
2024-07-08 21:09:16,576:INFO:Uploading results into container
2024-07-08 21:09:16,577:INFO:Uploading model into container now
2024-07-08 21:09:16,577:INFO:_master_model_container: 22
2024-07-08 21:09:16,578:INFO:_display_container: 9
2024-07-08 21:09:16,583:INFO:VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=42, verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2024-07-08 21:09:16,583:INFO:create_model() successfully completed......................................
2024-07-08 21:09:16,711:INFO:SubProcess create_model() end ==================================
2024-07-08 21:09:16,724:INFO:_master_model_container: 22
2024-07-08 21:09:16,724:INFO:_display_container: 9
2024-07-08 21:09:16,729:INFO:VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=42, verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2024-07-08 21:09:16,729:INFO:blend_models() successfully completed......................................
2024-07-08 21:09:49,589:INFO:Initializing predict_model()
2024-07-08 21:09:49,590:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x190cb9990>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1911ba700>)
2024-07-08 21:09:49,590:INFO:Checking exceptions
2024-07-08 21:09:49,590:INFO:Preloading libraries
2024-07-08 21:09:49,592:INFO:Set up data.
2024-07-08 21:09:49,599:INFO:Set up index.
2024-07-08 21:10:31,816:INFO:Initializing save_model()
2024-07-08 21:10:31,817:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=titanic_model, prep_pipe_=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Age', 'SibSp', 'Parch',
                                             'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Sex...
                 TransformerWrapper(exclude=None, include=['Embarked', 'Title'],
                                    transformer=OneHotEncoder(cols=['Embarked',
                                                                    'Title'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-08 21:10:31,817:INFO:Adding model into prep_pipe
2024-07-08 21:10:31,839:INFO:titanic_model.pkl saved in current working directory
2024-07-08 21:10:31,869:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Age', 'SibSp', 'Parch',
                                             'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Sex...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-07-08 21:10:31,869:INFO:save_model() successfully completed......................................
2024-07-08 21:17:22,207:INFO:PyCaret ClassificationExperiment
2024-07-08 21:17:22,207:INFO:Logging name: clf-default-name
2024-07-08 21:17:22,207:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-08 21:17:22,207:INFO:version 3.3.2
2024-07-08 21:17:22,207:INFO:Initializing setup()
2024-07-08 21:17:22,207:INFO:self.USI: ebdc
2024-07-08 21:17:22,207:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'n_jobs_param', 'fold_shuffle_param', 'memory', 'X_test', 'fix_imbalance', 'logging_param', 'data', 'pipeline', 'log_plots_param', 'y', 'idx', 'is_multiclass', 'X_train', '_ml_usecase', 'exp_name_log', 'X', '_available_plots', 'gpu_param', 'fold_generator', 'y_test', 'gpu_n_jobs_param', 'y_train', 'target_param', 'seed', 'html_param', 'USI'}
2024-07-08 21:17:22,208:INFO:Checking environment
2024-07-08 21:17:22,208:INFO:python_version: 3.11.5
2024-07-08 21:17:22,208:INFO:python_build: ('main', 'Sep 11 2023 08:19:27')
2024-07-08 21:17:22,208:INFO:machine: x86_64
2024-07-08 21:17:22,208:INFO:platform: macOS-10.16-x86_64-i386-64bit
2024-07-08 21:17:22,208:INFO:Memory: svmem(total=17179869184, available=6517760000, percent=62.1, used=8542838784, free=978743296, active=5052321792, inactive=5457432576, wired=3490516992)
2024-07-08 21:17:22,208:INFO:Physical Core: 6
2024-07-08 21:17:22,208:INFO:Logical Core: 12
2024-07-08 21:17:22,208:INFO:Checking libraries
2024-07-08 21:17:22,208:INFO:System:
2024-07-08 21:17:22,209:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
2024-07-08 21:17:22,209:INFO:executable: /Users/ericcosterousse/miniconda3/bin/python
2024-07-08 21:17:22,209:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2024-07-08 21:17:22,209:INFO:PyCaret required dependencies:
2024-07-08 21:17:22,209:INFO:                 pip: 23.3.1
2024-07-08 21:17:22,209:INFO:          setuptools: 68.2.2
2024-07-08 21:17:22,210:INFO:             pycaret: 3.3.2
2024-07-08 21:17:22,210:INFO:             IPython: 8.20.0
2024-07-08 21:17:22,210:INFO:          ipywidgets: 8.0.4
2024-07-08 21:17:22,210:INFO:                tqdm: 4.65.0
2024-07-08 21:17:22,210:INFO:               numpy: 1.24.2
2024-07-08 21:17:22,210:INFO:              pandas: 2.1.4
2024-07-08 21:17:22,210:INFO:              jinja2: 3.1.3
2024-07-08 21:17:22,210:INFO:               scipy: 1.10.1
2024-07-08 21:17:22,210:INFO:              joblib: 1.1.0
2024-07-08 21:17:22,210:INFO:             sklearn: 1.4.0
2024-07-08 21:17:22,210:INFO:                pyod: 2.0.1
2024-07-08 21:17:22,210:INFO:            imblearn: 0.12.3
2024-07-08 21:17:22,210:INFO:   category_encoders: 2.6.3
2024-07-08 21:17:22,211:INFO:            lightgbm: 4.4.0
2024-07-08 21:17:22,211:INFO:               numba: 0.60.0
2024-07-08 21:17:22,211:INFO:            requests: 2.31.0
2024-07-08 21:17:22,211:INFO:          matplotlib: 3.8.2
2024-07-08 21:17:22,211:INFO:          scikitplot: 0.3.7
2024-07-08 21:17:22,211:INFO:         yellowbrick: 1.5
2024-07-08 21:17:22,211:INFO:              plotly: 5.19.0
2024-07-08 21:17:22,211:INFO:    plotly-resampler: Not installed
2024-07-08 21:17:22,211:INFO:             kaleido: 0.2.1
2024-07-08 21:17:22,211:INFO:           schemdraw: 0.15
2024-07-08 21:17:22,211:INFO:         statsmodels: 0.14.2
2024-07-08 21:17:22,211:INFO:              sktime: 0.26.0
2024-07-08 21:17:22,211:INFO:               tbats: 1.1.3
2024-07-08 21:17:22,211:INFO:            pmdarima: 2.0.4
2024-07-08 21:17:22,212:INFO:              psutil: 5.9.0
2024-07-08 21:17:22,212:INFO:          markupsafe: 2.1.3
2024-07-08 21:17:22,212:INFO:             pickle5: Not installed
2024-07-08 21:17:22,212:INFO:         cloudpickle: 3.0.0
2024-07-08 21:17:22,212:INFO:         deprecation: 2.1.0
2024-07-08 21:17:22,212:INFO:              xxhash: 3.4.1
2024-07-08 21:17:22,212:INFO:           wurlitzer: 3.1.1
2024-07-08 21:17:22,212:INFO:PyCaret optional dependencies:
2024-07-08 21:17:22,212:INFO:                shap: Not installed
2024-07-08 21:17:22,212:INFO:           interpret: Not installed
2024-07-08 21:17:22,212:INFO:                umap: Not installed
2024-07-08 21:17:22,212:INFO:     ydata_profiling: Not installed
2024-07-08 21:17:22,213:INFO:  explainerdashboard: Not installed
2024-07-08 21:17:22,213:INFO:             autoviz: Not installed
2024-07-08 21:17:22,213:INFO:           fairlearn: Not installed
2024-07-08 21:17:22,213:INFO:          deepchecks: Not installed
2024-07-08 21:17:22,213:INFO:             xgboost: Not installed
2024-07-08 21:17:22,213:INFO:            catboost: Not installed
2024-07-08 21:17:22,213:INFO:              kmodes: Not installed
2024-07-08 21:17:22,213:INFO:             mlxtend: Not installed
2024-07-08 21:17:22,213:INFO:       statsforecast: Not installed
2024-07-08 21:17:22,213:INFO:        tune_sklearn: Not installed
2024-07-08 21:17:22,213:INFO:                 ray: Not installed
2024-07-08 21:17:22,213:INFO:            hyperopt: Not installed
2024-07-08 21:17:22,213:INFO:              optuna: Not installed
2024-07-08 21:17:22,213:INFO:               skopt: Not installed
2024-07-08 21:17:22,213:INFO:              mlflow: Not installed
2024-07-08 21:17:22,213:INFO:              gradio: Not installed
2024-07-08 21:17:22,213:INFO:             fastapi: Not installed
2024-07-08 21:17:22,213:INFO:             uvicorn: Not installed
2024-07-08 21:17:22,213:INFO:              m2cgen: Not installed
2024-07-08 21:17:22,213:INFO:           evidently: Not installed
2024-07-08 21:17:22,213:INFO:               fugue: Not installed
2024-07-08 21:17:22,213:INFO:           streamlit: Not installed
2024-07-08 21:17:22,213:INFO:             prophet: Not installed
2024-07-08 21:17:22,214:INFO:None
2024-07-08 21:17:22,214:INFO:Set up data.
2024-07-08 21:17:22,225:INFO:Set up folding strategy.
2024-07-08 21:17:22,225:INFO:Set up train/test split.
2024-07-08 21:17:22,234:INFO:Set up index.
2024-07-08 21:17:22,234:INFO:Assigning column types.
2024-07-08 21:17:22,242:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-08 21:17:22,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 21:17:22,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 21:17:22,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,407:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-08 21:17:22,407:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 21:17:22,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,433:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-08 21:17:22,475:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 21:17:22,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,543:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-08 21:17:22,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,568:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-08 21:17:22,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:22,724:INFO:Preparing preprocessing pipeline...
2024-07-08 21:17:22,725:INFO:Set up simple imputation.
2024-07-08 21:17:22,728:INFO:Set up encoding of ordinal features.
2024-07-08 21:17:22,729:INFO:Set up encoding of categorical features.
2024-07-08 21:17:22,729:INFO:Set up feature normalization.
2024-07-08 21:17:22,775:INFO:Finished creating preprocessing pipeline.
2024-07-08 21:17:22,795:INFO:Pipeline: Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Age', 'SibSp', 'Parch',
                                             'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['Sex...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-08 21:17:22,795:INFO:Creating final display dataframe.
2024-07-08 21:17:22,902:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 10)
5   Transformed train set shape         (623, 10)
6    Transformed test set shape         (268, 10)
7               Ignore features                 7
8              Numeric features                 5
9          Categorical features                 2
10     Rows with missing values             77.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              ebdc
2024-07-08 21:17:23,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:23,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:23,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:23,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-08 21:17:23,076:INFO:setup() successfully completed in 0.87s...............
2024-07-08 21:17:28,496:INFO:Initializing compare_models()
2024-07-08 21:17:28,496:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-08 21:17:28,496:INFO:Checking exceptions
2024-07-08 21:17:28,500:INFO:Preparing display monitor
2024-07-08 21:17:28,527:INFO:Initializing Logistic Regression
2024-07-08 21:17:28,527:INFO:Total runtime is 4.478295644124349e-06 minutes
2024-07-08 21:17:28,531:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:28,531:INFO:Initializing create_model()
2024-07-08 21:17:28,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:28,532:INFO:Checking exceptions
2024-07-08 21:17:28,532:INFO:Importing libraries
2024-07-08 21:17:28,532:INFO:Copying training dataset
2024-07-08 21:17:28,542:INFO:Defining folds
2024-07-08 21:17:28,542:INFO:Declaring metric variables
2024-07-08 21:17:28,546:INFO:Importing untrained model
2024-07-08 21:17:28,550:INFO:Logistic Regression Imported successfully
2024-07-08 21:17:28,556:INFO:Starting cross validation
2024-07-08 21:17:28,557:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:34,131:INFO:Calculating mean and std
2024-07-08 21:17:34,141:INFO:Creating metrics dataframe
2024-07-08 21:17:34,147:INFO:Uploading results into container
2024-07-08 21:17:34,150:INFO:Uploading model into container now
2024-07-08 21:17:34,151:INFO:_master_model_container: 1
2024-07-08 21:17:34,151:INFO:_display_container: 2
2024-07-08 21:17:34,152:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-08 21:17:34,153:INFO:create_model() successfully completed......................................
2024-07-08 21:17:34,347:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:34,347:INFO:Creating metrics dataframe
2024-07-08 21:17:34,353:INFO:Initializing K Neighbors Classifier
2024-07-08 21:17:34,353:INFO:Total runtime is 0.0971051295598348 minutes
2024-07-08 21:17:34,356:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:34,356:INFO:Initializing create_model()
2024-07-08 21:17:34,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:34,357:INFO:Checking exceptions
2024-07-08 21:17:34,357:INFO:Importing libraries
2024-07-08 21:17:34,357:INFO:Copying training dataset
2024-07-08 21:17:34,362:INFO:Defining folds
2024-07-08 21:17:34,362:INFO:Declaring metric variables
2024-07-08 21:17:34,365:INFO:Importing untrained model
2024-07-08 21:17:34,368:INFO:K Neighbors Classifier Imported successfully
2024-07-08 21:17:34,374:INFO:Starting cross validation
2024-07-08 21:17:34,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:36,334:INFO:Calculating mean and std
2024-07-08 21:17:36,336:INFO:Creating metrics dataframe
2024-07-08 21:17:36,337:INFO:Uploading results into container
2024-07-08 21:17:36,338:INFO:Uploading model into container now
2024-07-08 21:17:36,339:INFO:_master_model_container: 2
2024-07-08 21:17:36,339:INFO:_display_container: 2
2024-07-08 21:17:36,339:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-08 21:17:36,340:INFO:create_model() successfully completed......................................
2024-07-08 21:17:36,479:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:36,480:INFO:Creating metrics dataframe
2024-07-08 21:17:36,490:INFO:Initializing Naive Bayes
2024-07-08 21:17:36,490:INFO:Total runtime is 0.1327172636985779 minutes
2024-07-08 21:17:36,494:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:36,495:INFO:Initializing create_model()
2024-07-08 21:17:36,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:36,495:INFO:Checking exceptions
2024-07-08 21:17:36,495:INFO:Importing libraries
2024-07-08 21:17:36,496:INFO:Copying training dataset
2024-07-08 21:17:36,502:INFO:Defining folds
2024-07-08 21:17:36,503:INFO:Declaring metric variables
2024-07-08 21:17:36,506:INFO:Importing untrained model
2024-07-08 21:17:36,509:INFO:Naive Bayes Imported successfully
2024-07-08 21:17:36,516:INFO:Starting cross validation
2024-07-08 21:17:36,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:36,714:INFO:Calculating mean and std
2024-07-08 21:17:36,715:INFO:Creating metrics dataframe
2024-07-08 21:17:36,717:INFO:Uploading results into container
2024-07-08 21:17:36,717:INFO:Uploading model into container now
2024-07-08 21:17:36,718:INFO:_master_model_container: 3
2024-07-08 21:17:36,718:INFO:_display_container: 2
2024-07-08 21:17:36,718:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-08 21:17:36,718:INFO:create_model() successfully completed......................................
2024-07-08 21:17:36,835:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:36,835:INFO:Creating metrics dataframe
2024-07-08 21:17:36,843:INFO:Initializing Decision Tree Classifier
2024-07-08 21:17:36,843:INFO:Total runtime is 0.13860433101654054 minutes
2024-07-08 21:17:36,846:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:36,847:INFO:Initializing create_model()
2024-07-08 21:17:36,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:36,847:INFO:Checking exceptions
2024-07-08 21:17:36,847:INFO:Importing libraries
2024-07-08 21:17:36,847:INFO:Copying training dataset
2024-07-08 21:17:36,853:INFO:Defining folds
2024-07-08 21:17:36,853:INFO:Declaring metric variables
2024-07-08 21:17:36,857:INFO:Importing untrained model
2024-07-08 21:17:36,861:INFO:Decision Tree Classifier Imported successfully
2024-07-08 21:17:36,868:INFO:Starting cross validation
2024-07-08 21:17:36,870:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:37,054:INFO:Calculating mean and std
2024-07-08 21:17:37,055:INFO:Creating metrics dataframe
2024-07-08 21:17:37,057:INFO:Uploading results into container
2024-07-08 21:17:37,058:INFO:Uploading model into container now
2024-07-08 21:17:37,059:INFO:_master_model_container: 4
2024-07-08 21:17:37,059:INFO:_display_container: 2
2024-07-08 21:17:37,059:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-07-08 21:17:37,060:INFO:create_model() successfully completed......................................
2024-07-08 21:17:37,182:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:37,182:INFO:Creating metrics dataframe
2024-07-08 21:17:37,190:INFO:Initializing SVM - Linear Kernel
2024-07-08 21:17:37,190:INFO:Total runtime is 0.1443854610125224 minutes
2024-07-08 21:17:37,194:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:37,194:INFO:Initializing create_model()
2024-07-08 21:17:37,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:37,194:INFO:Checking exceptions
2024-07-08 21:17:37,194:INFO:Importing libraries
2024-07-08 21:17:37,194:INFO:Copying training dataset
2024-07-08 21:17:37,199:INFO:Defining folds
2024-07-08 21:17:37,200:INFO:Declaring metric variables
2024-07-08 21:17:37,203:INFO:Importing untrained model
2024-07-08 21:17:37,206:INFO:SVM - Linear Kernel Imported successfully
2024-07-08 21:17:37,213:INFO:Starting cross validation
2024-07-08 21:17:37,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:37,405:INFO:Calculating mean and std
2024-07-08 21:17:37,406:INFO:Creating metrics dataframe
2024-07-08 21:17:37,408:INFO:Uploading results into container
2024-07-08 21:17:37,409:INFO:Uploading model into container now
2024-07-08 21:17:37,409:INFO:_master_model_container: 5
2024-07-08 21:17:37,410:INFO:_display_container: 2
2024-07-08 21:17:37,410:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-08 21:17:37,410:INFO:create_model() successfully completed......................................
2024-07-08 21:17:37,540:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:37,540:INFO:Creating metrics dataframe
2024-07-08 21:17:37,548:INFO:Initializing Ridge Classifier
2024-07-08 21:17:37,548:INFO:Total runtime is 0.15035919745763143 minutes
2024-07-08 21:17:37,552:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:37,552:INFO:Initializing create_model()
2024-07-08 21:17:37,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:37,552:INFO:Checking exceptions
2024-07-08 21:17:37,552:INFO:Importing libraries
2024-07-08 21:17:37,553:INFO:Copying training dataset
2024-07-08 21:17:37,558:INFO:Defining folds
2024-07-08 21:17:37,558:INFO:Declaring metric variables
2024-07-08 21:17:37,562:INFO:Importing untrained model
2024-07-08 21:17:37,565:INFO:Ridge Classifier Imported successfully
2024-07-08 21:17:37,571:INFO:Starting cross validation
2024-07-08 21:17:37,572:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:37,765:INFO:Calculating mean and std
2024-07-08 21:17:37,766:INFO:Creating metrics dataframe
2024-07-08 21:17:37,768:INFO:Uploading results into container
2024-07-08 21:17:37,769:INFO:Uploading model into container now
2024-07-08 21:17:37,769:INFO:_master_model_container: 6
2024-07-08 21:17:37,769:INFO:_display_container: 2
2024-07-08 21:17:37,769:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-07-08 21:17:37,769:INFO:create_model() successfully completed......................................
2024-07-08 21:17:37,890:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:37,890:INFO:Creating metrics dataframe
2024-07-08 21:17:37,899:INFO:Initializing Random Forest Classifier
2024-07-08 21:17:37,899:INFO:Total runtime is 0.15619897842407227 minutes
2024-07-08 21:17:37,903:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:37,903:INFO:Initializing create_model()
2024-07-08 21:17:37,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:37,903:INFO:Checking exceptions
2024-07-08 21:17:37,903:INFO:Importing libraries
2024-07-08 21:17:37,904:INFO:Copying training dataset
2024-07-08 21:17:38,009:INFO:Defining folds
2024-07-08 21:17:38,010:INFO:Declaring metric variables
2024-07-08 21:17:38,014:INFO:Importing untrained model
2024-07-08 21:17:38,018:INFO:Random Forest Classifier Imported successfully
2024-07-08 21:17:38,025:INFO:Starting cross validation
2024-07-08 21:17:38,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:38,677:INFO:Calculating mean and std
2024-07-08 21:17:38,678:INFO:Creating metrics dataframe
2024-07-08 21:17:38,680:INFO:Uploading results into container
2024-07-08 21:17:38,681:INFO:Uploading model into container now
2024-07-08 21:17:38,681:INFO:_master_model_container: 7
2024-07-08 21:17:38,681:INFO:_display_container: 2
2024-07-08 21:17:38,682:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-07-08 21:17:38,682:INFO:create_model() successfully completed......................................
2024-07-08 21:17:38,815:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:38,815:INFO:Creating metrics dataframe
2024-07-08 21:17:38,824:INFO:Initializing Quadratic Discriminant Analysis
2024-07-08 21:17:38,824:INFO:Total runtime is 0.17162224451700847 minutes
2024-07-08 21:17:38,827:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:38,828:INFO:Initializing create_model()
2024-07-08 21:17:38,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:38,829:INFO:Checking exceptions
2024-07-08 21:17:38,829:INFO:Importing libraries
2024-07-08 21:17:38,829:INFO:Copying training dataset
2024-07-08 21:17:38,835:INFO:Defining folds
2024-07-08 21:17:38,835:INFO:Declaring metric variables
2024-07-08 21:17:38,838:INFO:Importing untrained model
2024-07-08 21:17:38,841:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-08 21:17:38,847:INFO:Starting cross validation
2024-07-08 21:17:38,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:38,941:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,944:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,960:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,964:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,966:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,970:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,972:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,974:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,978:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:38,991:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-08 21:17:39,044:INFO:Calculating mean and std
2024-07-08 21:17:39,045:INFO:Creating metrics dataframe
2024-07-08 21:17:39,047:INFO:Uploading results into container
2024-07-08 21:17:39,047:INFO:Uploading model into container now
2024-07-08 21:17:39,048:INFO:_master_model_container: 8
2024-07-08 21:17:39,048:INFO:_display_container: 2
2024-07-08 21:17:39,048:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-08 21:17:39,048:INFO:create_model() successfully completed......................................
2024-07-08 21:17:39,168:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:39,168:INFO:Creating metrics dataframe
2024-07-08 21:17:39,178:INFO:Initializing Ada Boost Classifier
2024-07-08 21:17:39,178:INFO:Total runtime is 0.17751204570134482 minutes
2024-07-08 21:17:39,181:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:39,181:INFO:Initializing create_model()
2024-07-08 21:17:39,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:39,181:INFO:Checking exceptions
2024-07-08 21:17:39,182:INFO:Importing libraries
2024-07-08 21:17:39,182:INFO:Copying training dataset
2024-07-08 21:17:39,187:INFO:Defining folds
2024-07-08 21:17:39,187:INFO:Declaring metric variables
2024-07-08 21:17:39,191:INFO:Importing untrained model
2024-07-08 21:17:39,194:INFO:Ada Boost Classifier Imported successfully
2024-07-08 21:17:39,200:INFO:Starting cross validation
2024-07-08 21:17:39,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:39,301:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,302:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,303:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,308:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,312:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,318:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,323:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,324:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,341:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,349:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-08 21:17:39,582:INFO:Calculating mean and std
2024-07-08 21:17:39,583:INFO:Creating metrics dataframe
2024-07-08 21:17:39,585:INFO:Uploading results into container
2024-07-08 21:17:39,585:INFO:Uploading model into container now
2024-07-08 21:17:39,586:INFO:_master_model_container: 9
2024-07-08 21:17:39,586:INFO:_display_container: 2
2024-07-08 21:17:39,586:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-07-08 21:17:39,586:INFO:create_model() successfully completed......................................
2024-07-08 21:17:39,710:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:39,710:INFO:Creating metrics dataframe
2024-07-08 21:17:39,720:INFO:Initializing Gradient Boosting Classifier
2024-07-08 21:17:39,720:INFO:Total runtime is 0.18655179738998415 minutes
2024-07-08 21:17:39,724:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:39,724:INFO:Initializing create_model()
2024-07-08 21:17:39,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:39,724:INFO:Checking exceptions
2024-07-08 21:17:39,724:INFO:Importing libraries
2024-07-08 21:17:39,724:INFO:Copying training dataset
2024-07-08 21:17:39,730:INFO:Defining folds
2024-07-08 21:17:39,730:INFO:Declaring metric variables
2024-07-08 21:17:39,734:INFO:Importing untrained model
2024-07-08 21:17:39,737:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:17:39,744:INFO:Starting cross validation
2024-07-08 21:17:39,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:40,171:INFO:Calculating mean and std
2024-07-08 21:17:40,172:INFO:Creating metrics dataframe
2024-07-08 21:17:40,174:INFO:Uploading results into container
2024-07-08 21:17:40,174:INFO:Uploading model into container now
2024-07-08 21:17:40,175:INFO:_master_model_container: 10
2024-07-08 21:17:40,175:INFO:_display_container: 2
2024-07-08 21:17:40,175:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:17:40,175:INFO:create_model() successfully completed......................................
2024-07-08 21:17:40,299:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:40,299:INFO:Creating metrics dataframe
2024-07-08 21:17:40,310:INFO:Initializing Linear Discriminant Analysis
2024-07-08 21:17:40,310:INFO:Total runtime is 0.19638317823410037 minutes
2024-07-08 21:17:40,313:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:40,313:INFO:Initializing create_model()
2024-07-08 21:17:40,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:40,314:INFO:Checking exceptions
2024-07-08 21:17:40,314:INFO:Importing libraries
2024-07-08 21:17:40,314:INFO:Copying training dataset
2024-07-08 21:17:40,320:INFO:Defining folds
2024-07-08 21:17:40,320:INFO:Declaring metric variables
2024-07-08 21:17:40,323:INFO:Importing untrained model
2024-07-08 21:17:40,327:INFO:Linear Discriminant Analysis Imported successfully
2024-07-08 21:17:40,333:INFO:Starting cross validation
2024-07-08 21:17:40,334:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:40,535:INFO:Calculating mean and std
2024-07-08 21:17:40,536:INFO:Creating metrics dataframe
2024-07-08 21:17:40,538:INFO:Uploading results into container
2024-07-08 21:17:40,538:INFO:Uploading model into container now
2024-07-08 21:17:40,539:INFO:_master_model_container: 11
2024-07-08 21:17:40,539:INFO:_display_container: 2
2024-07-08 21:17:40,539:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-08 21:17:40,539:INFO:create_model() successfully completed......................................
2024-07-08 21:17:40,657:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:40,658:INFO:Creating metrics dataframe
2024-07-08 21:17:40,672:INFO:Initializing Extra Trees Classifier
2024-07-08 21:17:40,672:INFO:Total runtime is 0.20241441329320276 minutes
2024-07-08 21:17:40,675:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:40,676:INFO:Initializing create_model()
2024-07-08 21:17:40,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:40,676:INFO:Checking exceptions
2024-07-08 21:17:40,676:INFO:Importing libraries
2024-07-08 21:17:40,676:INFO:Copying training dataset
2024-07-08 21:17:40,681:INFO:Defining folds
2024-07-08 21:17:40,682:INFO:Declaring metric variables
2024-07-08 21:17:40,685:INFO:Importing untrained model
2024-07-08 21:17:40,689:INFO:Extra Trees Classifier Imported successfully
2024-07-08 21:17:40,695:INFO:Starting cross validation
2024-07-08 21:17:40,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:41,237:INFO:Calculating mean and std
2024-07-08 21:17:41,239:INFO:Creating metrics dataframe
2024-07-08 21:17:41,240:INFO:Uploading results into container
2024-07-08 21:17:41,241:INFO:Uploading model into container now
2024-07-08 21:17:41,241:INFO:_master_model_container: 12
2024-07-08 21:17:41,241:INFO:_display_container: 2
2024-07-08 21:17:41,242:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-07-08 21:17:41,242:INFO:create_model() successfully completed......................................
2024-07-08 21:17:41,363:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:41,363:INFO:Creating metrics dataframe
2024-07-08 21:17:41,374:INFO:Initializing Light Gradient Boosting Machine
2024-07-08 21:17:41,374:INFO:Total runtime is 0.21412064631779992 minutes
2024-07-08 21:17:41,378:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:41,378:INFO:Initializing create_model()
2024-07-08 21:17:41,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:41,378:INFO:Checking exceptions
2024-07-08 21:17:41,378:INFO:Importing libraries
2024-07-08 21:17:41,379:INFO:Copying training dataset
2024-07-08 21:17:41,384:INFO:Defining folds
2024-07-08 21:17:41,384:INFO:Declaring metric variables
2024-07-08 21:17:41,387:INFO:Importing untrained model
2024-07-08 21:17:41,391:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-08 21:17:41,397:INFO:Starting cross validation
2024-07-08 21:17:41,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:46,882:INFO:Calculating mean and std
2024-07-08 21:17:46,883:INFO:Creating metrics dataframe
2024-07-08 21:17:46,885:INFO:Uploading results into container
2024-07-08 21:17:46,885:INFO:Uploading model into container now
2024-07-08 21:17:46,886:INFO:_master_model_container: 13
2024-07-08 21:17:46,886:INFO:_display_container: 2
2024-07-08 21:17:46,886:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-08 21:17:46,887:INFO:create_model() successfully completed......................................
2024-07-08 21:17:47,021:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:47,021:INFO:Creating metrics dataframe
2024-07-08 21:17:47,033:INFO:Initializing Dummy Classifier
2024-07-08 21:17:47,033:INFO:Total runtime is 0.30843249956766766 minutes
2024-07-08 21:17:47,036:INFO:SubProcess create_model() called ==================================
2024-07-08 21:17:47,037:INFO:Initializing create_model()
2024-07-08 21:17:47,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190d8ead0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:47,037:INFO:Checking exceptions
2024-07-08 21:17:47,037:INFO:Importing libraries
2024-07-08 21:17:47,037:INFO:Copying training dataset
2024-07-08 21:17:47,042:INFO:Defining folds
2024-07-08 21:17:47,042:INFO:Declaring metric variables
2024-07-08 21:17:47,045:INFO:Importing untrained model
2024-07-08 21:17:47,049:INFO:Dummy Classifier Imported successfully
2024-07-08 21:17:47,055:INFO:Starting cross validation
2024-07-08 21:17:47,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:47,195:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,200:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,201:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,202:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,204:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,207:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,210:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,214:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,218:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,223:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-08 21:17:47,229:INFO:Calculating mean and std
2024-07-08 21:17:47,230:INFO:Creating metrics dataframe
2024-07-08 21:17:47,232:INFO:Uploading results into container
2024-07-08 21:17:47,232:INFO:Uploading model into container now
2024-07-08 21:17:47,233:INFO:_master_model_container: 14
2024-07-08 21:17:47,233:INFO:_display_container: 2
2024-07-08 21:17:47,233:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-07-08 21:17:47,233:INFO:create_model() successfully completed......................................
2024-07-08 21:17:47,356:INFO:SubProcess create_model() end ==================================
2024-07-08 21:17:47,356:INFO:Creating metrics dataframe
2024-07-08 21:17:47,368:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-08 21:17:47,378:INFO:Initializing create_model()
2024-07-08 21:17:47,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:47,378:INFO:Checking exceptions
2024-07-08 21:17:47,381:INFO:Importing libraries
2024-07-08 21:17:47,382:INFO:Copying training dataset
2024-07-08 21:17:47,390:INFO:Defining folds
2024-07-08 21:17:47,390:INFO:Declaring metric variables
2024-07-08 21:17:47,391:INFO:Importing untrained model
2024-07-08 21:17:47,391:INFO:Declaring custom model
2024-07-08 21:17:47,392:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:17:47,393:INFO:Cross validation set to False
2024-07-08 21:17:47,393:INFO:Fitting Model
2024-07-08 21:17:47,575:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:17:47,575:INFO:create_model() successfully completed......................................
2024-07-08 21:17:47,728:INFO:_master_model_container: 14
2024-07-08 21:17:47,728:INFO:_display_container: 2
2024-07-08 21:17:47,729:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:17:47,729:INFO:compare_models() successfully completed......................................
2024-07-08 21:17:53,736:INFO:Initializing create_model()
2024-07-08 21:17:53,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:17:53,737:INFO:Checking exceptions
2024-07-08 21:17:53,754:INFO:Importing libraries
2024-07-08 21:17:53,754:INFO:Copying training dataset
2024-07-08 21:17:53,762:INFO:Defining folds
2024-07-08 21:17:53,762:INFO:Declaring metric variables
2024-07-08 21:17:53,768:INFO:Importing untrained model
2024-07-08 21:17:53,773:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:17:53,780:INFO:Starting cross validation
2024-07-08 21:17:53,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:17:54,268:INFO:Calculating mean and std
2024-07-08 21:17:54,270:INFO:Creating metrics dataframe
2024-07-08 21:17:54,275:INFO:Finalizing model
2024-07-08 21:17:54,468:INFO:Uploading results into container
2024-07-08 21:17:54,469:INFO:Uploading model into container now
2024-07-08 21:17:54,481:INFO:_master_model_container: 15
2024-07-08 21:17:54,481:INFO:_display_container: 3
2024-07-08 21:17:54,482:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:17:54,482:INFO:create_model() successfully completed......................................
2024-07-08 21:17:56,806:INFO:Initializing tune_model()
2024-07-08 21:17:56,806:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-08 21:17:56,806:INFO:Checking exceptions
2024-07-08 21:17:56,827:INFO:Copying training dataset
2024-07-08 21:17:56,833:INFO:Checking base model
2024-07-08 21:17:56,834:INFO:Base model : Gradient Boosting Classifier
2024-07-08 21:17:56,838:INFO:Declaring metric variables
2024-07-08 21:17:56,842:INFO:Defining Hyperparameters
2024-07-08 21:17:56,978:INFO:Tuning with n_jobs=-1
2024-07-08 21:17:56,978:INFO:Initializing RandomizedSearchCV
2024-07-08 21:18:01,712:INFO:best_params: {'actual_estimator__subsample': 0.75, 'actual_estimator__n_estimators': 110, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.01}
2024-07-08 21:18:01,714:INFO:Hyperparameter search completed
2024-07-08 21:18:01,714:INFO:SubProcess create_model() called ==================================
2024-07-08 21:18:01,714:INFO:Initializing create_model()
2024-07-08 21:18:01,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x190ce7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.75, 'n_estimators': 110, 'min_samples_split': 9, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.5, 'max_features': 'log2', 'max_depth': 8, 'learning_rate': 0.01})
2024-07-08 21:18:01,715:INFO:Checking exceptions
2024-07-08 21:18:01,715:INFO:Importing libraries
2024-07-08 21:18:01,715:INFO:Copying training dataset
2024-07-08 21:18:01,719:INFO:Defining folds
2024-07-08 21:18:01,719:INFO:Declaring metric variables
2024-07-08 21:18:01,723:INFO:Importing untrained model
2024-07-08 21:18:01,723:INFO:Declaring custom model
2024-07-08 21:18:01,726:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:18:01,732:INFO:Starting cross validation
2024-07-08 21:18:01,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:18:02,177:INFO:Calculating mean and std
2024-07-08 21:18:02,178:INFO:Creating metrics dataframe
2024-07-08 21:18:02,182:INFO:Finalizing model
2024-07-08 21:18:02,361:INFO:Uploading results into container
2024-07-08 21:18:02,362:INFO:Uploading model into container now
2024-07-08 21:18:02,362:INFO:_master_model_container: 16
2024-07-08 21:18:02,362:INFO:_display_container: 4
2024-07-08 21:18:02,363:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=1,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:18:02,363:INFO:create_model() successfully completed......................................
2024-07-08 21:18:02,495:INFO:SubProcess create_model() end ==================================
2024-07-08 21:18:02,495:INFO:choose_better activated
2024-07-08 21:18:02,500:INFO:SubProcess create_model() called ==================================
2024-07-08 21:18:02,500:INFO:Initializing create_model()
2024-07-08 21:18:02,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:18:02,501:INFO:Checking exceptions
2024-07-08 21:18:02,502:INFO:Importing libraries
2024-07-08 21:18:02,502:INFO:Copying training dataset
2024-07-08 21:18:02,508:INFO:Defining folds
2024-07-08 21:18:02,508:INFO:Declaring metric variables
2024-07-08 21:18:02,508:INFO:Importing untrained model
2024-07-08 21:18:02,508:INFO:Declaring custom model
2024-07-08 21:18:02,509:INFO:Gradient Boosting Classifier Imported successfully
2024-07-08 21:18:02,509:INFO:Starting cross validation
2024-07-08 21:18:02,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:18:02,872:INFO:Calculating mean and std
2024-07-08 21:18:02,873:INFO:Creating metrics dataframe
2024-07-08 21:18:02,874:INFO:Finalizing model
2024-07-08 21:18:03,014:INFO:Uploading results into container
2024-07-08 21:18:03,014:INFO:Uploading model into container now
2024-07-08 21:18:03,015:INFO:_master_model_container: 17
2024-07-08 21:18:03,015:INFO:_display_container: 5
2024-07-08 21:18:03,015:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:18:03,015:INFO:create_model() successfully completed......................................
2024-07-08 21:18:03,132:INFO:SubProcess create_model() end ==================================
2024-07-08 21:18:03,133:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.8219
2024-07-08 21:18:03,133:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=1,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.8251
2024-07-08 21:18:03,134:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=1,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-07-08 21:18:03,134:INFO:choose_better completed
2024-07-08 21:18:03,145:INFO:_master_model_container: 17
2024-07-08 21:18:03,145:INFO:_display_container: 4
2024-07-08 21:18:03,146:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=1,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-08 21:18:03,146:INFO:tune_model() successfully completed......................................
2024-07-08 21:18:05,617:INFO:Initializing plot_model()
2024-07-08 21:18:05,619:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:18:05,619:INFO:Checking exceptions
2024-07-08 21:18:05,624:INFO:Preloading libraries
2024-07-08 21:18:05,634:INFO:Copying training dataset
2024-07-08 21:18:05,634:INFO:Plot type: auc
2024-07-08 21:18:05,754:INFO:Fitting Model
2024-07-08 21:18:05,754:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-07-08 21:18:05,755:INFO:Scoring test/hold-out set
2024-07-08 21:18:05,987:INFO:Visual Rendered Successfully
2024-07-08 21:18:06,128:INFO:plot_model() successfully completed......................................
2024-07-08 21:18:11,193:INFO:Initializing plot_model()
2024-07-08 21:18:11,193:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=learning, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:18:11,193:INFO:Checking exceptions
2024-07-08 21:18:11,199:INFO:Preloading libraries
2024-07-08 21:18:11,211:INFO:Copying training dataset
2024-07-08 21:18:11,211:INFO:Plot type: learning
2024-07-08 21:18:11,329:INFO:Fitting Model
2024-07-08 21:18:13,720:INFO:Visual Rendered Successfully
2024-07-08 21:18:13,846:INFO:plot_model() successfully completed......................................
2024-07-08 21:18:13,853:INFO:Initializing evaluate_model()
2024-07-08 21:18:13,854:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-08 21:18:13,868:INFO:Initializing plot_model()
2024-07-08 21:18:13,868:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-08 21:18:13,868:INFO:Checking exceptions
2024-07-08 21:18:13,875:INFO:Preloading libraries
2024-07-08 21:18:13,883:INFO:Copying training dataset
2024-07-08 21:18:13,883:INFO:Plot type: pipeline
2024-07-08 21:18:14,038:INFO:Visual Rendered Successfully
2024-07-08 21:18:14,176:INFO:plot_model() successfully completed......................................
2024-07-08 21:18:14,180:INFO:Initializing plot_model()
2024-07-08 21:18:14,180:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:18:14,180:INFO:Checking exceptions
2024-07-08 21:18:14,186:INFO:Preloading libraries
2024-07-08 21:18:14,199:INFO:Copying training dataset
2024-07-08 21:18:14,199:INFO:Plot type: confusion_matrix
2024-07-08 21:18:14,299:INFO:Fitting Model
2024-07-08 21:18:14,300:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-07-08 21:18:14,300:INFO:Scoring test/hold-out set
2024-07-08 21:18:14,424:INFO:Visual Rendered Successfully
2024-07-08 21:18:14,556:INFO:plot_model() successfully completed......................................
2024-07-08 21:18:28,054:INFO:Initializing plot_model()
2024-07-08 21:18:28,055:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:18:28,056:INFO:Checking exceptions
2024-07-08 21:18:28,060:INFO:Preloading libraries
2024-07-08 21:18:28,070:INFO:Copying training dataset
2024-07-08 21:18:28,070:INFO:Plot type: error
2024-07-08 21:18:28,253:INFO:Fitting Model
2024-07-08 21:18:28,253:WARNING:/Users/ericcosterousse/miniconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-07-08 21:18:28,254:INFO:Scoring test/hold-out set
2024-07-08 21:18:28,491:INFO:Visual Rendered Successfully
2024-07-08 21:18:28,624:INFO:plot_model() successfully completed......................................
2024-07-08 21:18:31,371:INFO:Initializing plot_model()
2024-07-08 21:18:31,371:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-08 21:18:31,371:INFO:Checking exceptions
2024-07-08 21:18:31,376:INFO:Preloading libraries
2024-07-08 21:18:31,387:INFO:Copying training dataset
2024-07-08 21:18:31,387:INFO:Plot type: feature
2024-07-08 21:18:31,388:WARNING:No coef_ found. Trying feature_importances_
2024-07-08 21:18:31,584:INFO:Visual Rendered Successfully
2024-07-08 21:18:31,724:INFO:plot_model() successfully completed......................................
2024-07-08 21:18:38,545:INFO:Initializing create_model()
2024-07-08 21:18:38,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:18:38,545:INFO:Checking exceptions
2024-07-08 21:18:38,565:INFO:Importing libraries
2024-07-08 21:18:38,565:INFO:Copying training dataset
2024-07-08 21:18:38,574:INFO:Defining folds
2024-07-08 21:18:38,574:INFO:Declaring metric variables
2024-07-08 21:18:38,577:INFO:Importing untrained model
2024-07-08 21:18:38,582:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-08 21:18:38,591:INFO:Starting cross validation
2024-07-08 21:18:38,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:18:44,028:INFO:Calculating mean and std
2024-07-08 21:18:44,029:INFO:Creating metrics dataframe
2024-07-08 21:18:44,034:INFO:Finalizing model
2024-07-08 21:18:44,080:INFO:[LightGBM] [Info] Number of positive: 239, number of negative: 384
2024-07-08 21:18:44,081:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000459 seconds.
2024-07-08 21:18:44,081:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-08 21:18:44,081:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-08 21:18:44,081:INFO:[LightGBM] [Info] Total Bins 207
2024-07-08 21:18:44,081:INFO:[LightGBM] [Info] Number of data points in the train set: 623, number of used features: 9
2024-07-08 21:18:44,082:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.383628 -> initscore=-0.474179
2024-07-08 21:18:44,082:INFO:[LightGBM] [Info] Start training from score -0.474179
2024-07-08 21:18:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-08 21:18:44,261:INFO:Uploading results into container
2024-07-08 21:18:44,262:INFO:Uploading model into container now
2024-07-08 21:18:44,273:INFO:_master_model_container: 18
2024-07-08 21:18:44,273:INFO:_display_container: 5
2024-07-08 21:18:44,274:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-08 21:18:44,274:INFO:create_model() successfully completed......................................
2024-07-08 21:18:44,424:INFO:Initializing create_model()
2024-07-08 21:18:44,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:18:44,425:INFO:Checking exceptions
2024-07-08 21:18:44,442:INFO:Importing libraries
2024-07-08 21:18:44,442:INFO:Copying training dataset
2024-07-08 21:18:44,452:INFO:Defining folds
2024-07-08 21:18:44,453:INFO:Declaring metric variables
2024-07-08 21:18:44,456:INFO:Importing untrained model
2024-07-08 21:18:44,459:INFO:Random Forest Classifier Imported successfully
2024-07-08 21:18:44,464:INFO:Starting cross validation
2024-07-08 21:18:44,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:18:45,087:INFO:Calculating mean and std
2024-07-08 21:18:45,087:INFO:Creating metrics dataframe
2024-07-08 21:18:45,092:INFO:Finalizing model
2024-07-08 21:18:45,274:INFO:Uploading results into container
2024-07-08 21:18:45,275:INFO:Uploading model into container now
2024-07-08 21:18:45,284:INFO:_master_model_container: 19
2024-07-08 21:18:45,284:INFO:_display_container: 6
2024-07-08 21:18:45,284:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-07-08 21:18:45,284:INFO:create_model() successfully completed......................................
2024-07-08 21:18:48,380:INFO:Initializing blend_models()
2024-07-08 21:18:48,381:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator_list=[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-08 21:18:48,381:INFO:Checking exceptions
2024-07-08 21:18:48,401:INFO:Importing libraries
2024-07-08 21:18:48,402:INFO:Copying training dataset
2024-07-08 21:18:48,405:INFO:Getting model names
2024-07-08 21:18:48,409:INFO:SubProcess create_model() called ==================================
2024-07-08 21:18:48,415:INFO:Initializing create_model()
2024-07-08 21:18:48,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=42, verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1921cc3d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:18:48,416:INFO:Checking exceptions
2024-07-08 21:18:48,416:INFO:Importing libraries
2024-07-08 21:18:48,416:INFO:Copying training dataset
2024-07-08 21:18:48,424:INFO:Defining folds
2024-07-08 21:18:48,425:INFO:Declaring metric variables
2024-07-08 21:18:48,428:INFO:Importing untrained model
2024-07-08 21:18:48,428:INFO:Declaring custom model
2024-07-08 21:18:48,434:INFO:Voting Classifier Imported successfully
2024-07-08 21:18:48,444:INFO:Starting cross validation
2024-07-08 21:18:48,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-08 21:18:51,687:INFO:Calculating mean and std
2024-07-08 21:18:51,689:INFO:Creating metrics dataframe
2024-07-08 21:18:51,695:INFO:Finalizing model
2024-07-08 21:18:52,003:INFO:Uploading results into container
2024-07-08 21:18:52,003:INFO:Uploading model into container now
2024-07-08 21:18:52,004:INFO:_master_model_container: 20
2024-07-08 21:18:52,004:INFO:_display_container: 7
2024-07-08 21:18:52,010:INFO:VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=42, verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2024-07-08 21:18:52,010:INFO:create_model() successfully completed......................................
2024-07-08 21:18:52,185:INFO:SubProcess create_model() end ==================================
2024-07-08 21:18:52,197:INFO:_master_model_container: 20
2024-07-08 21:18:52,197:INFO:_display_container: 7
2024-07-08 21:18:52,202:INFO:VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=42, verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2024-07-08 21:18:52,202:INFO:blend_models() successfully completed......................................
2024-07-08 21:18:52,334:INFO:Initializing predict_model()
2024-07-08 21:18:52,335:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x192255440>)
2024-07-08 21:18:52,335:INFO:Checking exceptions
2024-07-08 21:18:52,335:INFO:Preloading libraries
2024-07-08 21:18:52,337:INFO:Set up data.
2024-07-08 21:18:52,344:INFO:Set up index.
2024-07-08 21:18:52,556:INFO:Initializing save_model()
2024-07-08 21:18:52,556:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=titanic_model, prep_pipe_=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Age', 'SibSp', 'Parch',
                                             'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['Sex...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-08 21:18:52,556:INFO:Adding model into prep_pipe
2024-07-08 21:18:52,568:INFO:titanic_model.pkl saved in current working directory
2024-07-08 21:18:52,591:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pclass', 'Age', 'SibSp', 'Parch',
                                             'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['Sex...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-07-08 21:18:52,591:INFO:save_model() successfully completed......................................
2024-07-08 21:21:22,685:INFO:Initializing create_model()
2024-07-08 21:21:22,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x18e95a090>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-08 21:21:22,686:INFO:Checking exceptions
